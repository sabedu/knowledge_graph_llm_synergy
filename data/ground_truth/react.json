[
    {
        "question": "how many commits happened in last month?",
        "number": 1,
        "category": 1,
        "query": "MATCH (c:Commit)\nWHERE c.committedDate >= \"2024-07-26T00:00:00Z\" AND c.committedDate < \"2024-08-26T00:00:00Z\"\nRETURN COUNT(c) AS commitCount",
        "result": [
            {
                "commitCount": 166
            }
        ]
    },
    {
        "question": "what is the latest commit?",
        "number": 2,
        "category": 1,
        "query": "MATCH (c:Commit)\nRETURN c\nORDER BY c.committedDate DESC\nLIMIT 1",
        "result": [
            {
                "c": {
                    "additions": 253,
                    "deletions": 283,
                    "committedDate": "2024-08-20T02:34:20Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "a960b92cb93e7d006e5e8de850f9b8b51f655c90",
                    "type": "Commit",
                    "message": "\"[Flight] model halting as never delivered chunks (#30740)\n\nstacked on: #30731\r\n\r\nWeve refined the model of halting a prerender. Now when you abort\r\nduring a prerender we simply omit the rows that would complete the\r\nflight render. This is analagous to prerendering in Fizz where you must\r\nresume the prerender to actually result in errors propagating in the\r\npostponed holes. We dont have a resume yet for flight and its not\r\nentirely clear how that will work however the key insight here is that\r\ndeciding whether the never resolving rows are an error or not should\r\nreally be done on the consuming side rather than in the producer.\r\n\r\nThis PR also reintroduces the logs for the abort error/postpone when\r\nprerendering which will give you some indication that something wasnt\r\nfinished when the prerender was aborted.\""
                }
            }
        ]
    },
    {
        "question": "can you tell me the details of the commits between May 27th 2018 and May 31st 2018?",
        "number": 3,
        "category": 1,
        "query": "MATCH (c:Commit)\nWHERE c.committedDate >= \"2018-05-27T00:00:00Z\" AND c.committedDate <= \"2018-05-31T23:59:59Z\"\nRETURN c",
        "result": [
            {
                "c": {
                    "additions": 36,
                    "committedDate": "2018-05-31T21:23:26Z",
                    "deletions": 6,
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "36546b5137e9012ebdc62fc9ec11e3518c9e0aab",
                    "type": "Commit",
                    "message": "\"Set the correct initial value on input range (#12939)\n\n* Set the correct initial value on input range\r\n\r\n* Add description and update value diff check for input range\r\n\r\n* add isHydrating argument and tests\r\n\r\n* update node value according to isHydrating\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "committedDate": "2018-05-31T20:36:55Z",
                    "deletions": 2,
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "65ab53694f6edf4437034d5644a602dea162e249",
                    "type": "Commit",
                    "message": "\"Update token (#12956)\""
                }
            },
            {
                "c": {
                    "additions": 624,
                    "committedDate": "2018-05-30T22:38:48Z",
                    "deletions": 30,
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "15767a8f8f798f0d80df4ddbc7cfaebdc29996a8",
                    "type": "Commit",
                    "message": "\"[scheduler] 5/n Error handling in scheduler (#12920)\n\n* Initial failing unit test for error handling in schedule\r\n\r\n**what is the change?:**\r\nsee title\r\n\r\n**why make this change?:**\r\nAdding tests for the error handling behavior we are about to add. This\r\ntest is failing, which gives us the chance to make it pass.\r\n\r\nWrote skeletons of some other tests to add.\r\n\r\nUnit testing this way is really hacky, and Im also adding to the\r\nfixture to test this in the real browser environment.\r\n\r\n**test plan:**\r\nRan new test, saw it fail!\r\n\r\n* Add fixture for testing error handling in scheduler\r\n\r\n**what is the change?:**\r\nAdded a fixture which does the following -\r\nlogs in the console to show what happens when you use\r\n`requestAnimationFrame` to schedule a series of callbacks and some of\r\nthem throw errors.\r\n\r\nThen does the same actions with the `scheduler` and verifies that it\r\nbehaves in a similar way.\r\n\r\nHard to really verify the errors get thrown at the proper time without\r\nlooking at the console.\r\n\r\n**why make this change?:**\r\nWe want the most authentic, accurate test of how errors are handled in\r\nthe scheduler. Thats what this fixture should be.\r\n\r\n**test plan:**\r\nManually verified that this test does what I expect - right now its\r\nfailing but follow up commits will fix that.\r\n\r\n* Handle errors in scheduler\r\n\r\n**what is the change?:**\r\nWe set a flag before calling any callback, and then use a try/finally\r\nblock to wrap it. Note that we *do not* catch the error, if one is\r\nthrown. But, we only unset the flag after the callback successfully\r\nfinishes.\r\n\r\nIf we reach the finally block and the flag was not unset, then it\r\nmeans an error was thrown.\r\n\r\nIn that case we start a new postMessage callback, to finish calling any\r\nother pending callbacks if there is time.\r\n\r\n**why make this change?:**\r\nWe need to make sure that an error thrown from one callback doesnt stop\r\nother callbacks from firing, but we also dont want to catch or swallow\r\nthe error because we want engineers to still be able to log and debug\r\nerrors.\r\n\r\n**test plan:**\r\nNew tests added are passing, and we verified that they fail without this\r\nchange.\r\n\r\n* Add more tests for error handling in scheduler\r\n\r\n**what is the change?:**\r\nAdded tests for more situations where error handling may come up.\r\n\r\n**why make this change?:**\r\nTo get additional protection against this being broken in the future.\r\n\r\n**test plan:**\r\nRan new tests and verified that they fail when error handling fails.\r\n\r\n* callSafely -> callUnsafely\r\n\r\n* Fix bugs with error handling in schedule\r\n\r\n**what is the change?:**\r\n- ensure that we properly remove the callback from the linked list, even\r\nif it throws an error and is timed out.\r\n- ensure that you can call cancelScheduledWork more than once and it\r\nis idempotent.\r\n\r\n**why make this change?:**\r\nTo fix bugs :)\r\n\r\n**test plan:**\r\nExisting tests pass, and well add more tests in a follow up commit.\r\n\r\n* Unit tests for error handling with timed out callbacks\r\n\r\n**what is the change?:**\r\nMore unit tests, to cover behavior which we missed; error handling of\r\ntimed out callbacks.\r\n\r\n**why make this change?:**\r\nTo protect the future!~\r\n\r\n**test plan:**\r\nRun the new tests.\r\n\r\n* Adds fixture to test timed out callbacks with scheduler\r\n\r\n**what is the change?:**\r\nSee title\r\n\r\nIn the other error handling fixture we compare scheduleWork error\r\nhandling to requestAnimationFrame and try to get as close as possible.\r\nThere is no timing out feature with requestAnimationFrame but\r\neffectively the timing out feature changes the order in which things\r\nare called. So we just changed the order in the requestAnimationFrame\r\nversion and that works well for illustrating the behavior we expect in\r\nthe scheduleWork test.\r\n\r\n**why make this change?:**\r\nWe need more test coverage of timed out callbacks.\r\n\r\n**test plan:**\r\nExecuted the fixture manually in Firefox and Chrome. Results looked\r\ngood.\r\n\r\n* fix rebase problems\r\n\r\n* make fixture compensate for chrome JS speed\r\n\r\n* ran prettier\r\n\r\n* Remove cancelled flag on callbackConfig in scheduler, add test\r\n\r\n**what is the change?:**\r\n- Instead of using a cancelled flag on the callbackConfig, its easier\r\nto just check the state of the callbackConfig inside\r\ncancelScheduledWork to determine if its already been cancelled. That\r\nway we dont have to remember to set the cancelled flag every time we\r\ncall a callback or cancel it. One less thing to remember.\r\n- We added a test for calling cancelScheduledWork more than once,\r\nwhich would have failed before.\r\n\r\nThanks @acdlite for suggesting this in code review. :)\r\n\r\n**why make this change?:**\r\nTo increase stability of the schedule module, increase test coverage.\r\n\r\n**test plan:**\r\nExisting tests pass and we added a new test to cover this behavior.\r\n\r\n* fix typo\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "committedDate": "2018-05-30T22:31:59Z",
                    "deletions": 0,
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "3118ed9d640ad28af306de308301f4fcd029ffca",
                    "type": "Commit",
                    "message": "\"Expose unstable_interactiveUpdates on ReactDOM (#12943)\""
                }
            },
            {
                "c": {
                    "additions": 42,
                    "committedDate": "2018-05-30T22:31:41Z",
                    "deletions": 21,
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "524a74331399fd7102037c878f327afbd5e14f53",
                    "type": "Commit",
                    "message": "\"Fix for Flow issues in SimpleCacheProvider (#12942)\n\n* Fix for Flow issues in SimpleCacheProvider\r\n\r\n**what is the change?:**\r\n- Fixed some flow errors which were somehow swallowed when CI\r\noriginally\r\n- Loosen flow types to avoid issue with recursive loop in Flow; https://github.com/facebook/flow/issues/5870\r\n\r\n**why make this change?:**\r\nTo unbreak master and unblock other changes we want to make.\r\n\r\n**test plan:**\r\nFlow passes!\r\n\r\n**issue:**\r\nhttps://github.com/facebook/react/issues/12941\r\n\r\n* Fix lints\""
                }
            },
            {
                "c": {
                    "additions": 153,
                    "committedDate": "2018-05-30T20:12:29Z",
                    "deletions": 31,
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "ae57b125c798418fb6846094cfa911530206e074",
                    "type": "Commit",
                    "message": "\"[simple-cache-provider] Use LRU cache eviction (#12851)\n\n* [simple-cache-provider] Use LRU cache eviction\r\n\r\nMax size is hard-coded to 500. In the future, we should make this\r\nconfigurable per resource.\r\n\r\n* Evict PAGE_SIZE records from cache when max limit is reached\""
                }
            },
            {
                "c": {
                    "additions": 71,
                    "committedDate": "2018-05-30T11:08:21Z",
                    "deletions": 2,
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "e0a03c1b4d84453122c4e9d1a5e0cec52bef9066",
                    "type": "Commit",
                    "message": "\"Extend input type check in selection capabilities (#12062) (#12135)\n\n* Do not set selection when prior selection is undefined (#12062)\r\n\r\n`restoreSelection` did not account for input elements that have changed\r\ntype after the commit phase. The new `text` input supported selection\r\nbut the old `email` did not and `setSelection` was incorrectly trying to\r\nrestore `null` selection state.\r\n\r\nWe also extend input type check in selection capabilities to cover cases\r\nwhere input type is `search`, `tel`, `url`, or `password`.\r\n\r\n* Add link to HTML spec for element types and selection\r\n\r\n* Add reset button to ReplaceEmailInput\r\n\r\nThis commit adds a button to restore the original state of the\r\nReplaceEmailInput fixture so that it can be run multiple times without\r\nrefreshing the page.\""
                }
            },
            {
                "c": {
                    "additions": 10,
                    "committedDate": "2018-05-30T00:54:38Z",
                    "deletions": 10,
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "79a740c6e32ca300d4e7ff55ab06de172d4237fd",
                    "type": "Commit",
                    "message": "\"Rename variables to remove references to global global (#12931)\n\n**what is the change?:**\r\nIn a recent PR we were referencing some global variables and storing\r\nlocal references to them.\r\n\r\nTo make things more natural, we co-opted the original name of the global\r\nfor our local reference. To make this work with Flow, we get the\r\noriginal reference from window.requestAnimationFrame and assign it to\r\nconst requestAnimationFrame.\r\n\r\nSometimes React is used in an environment where window is not defined\r\n- in that case we need to use something else, or hide the window\r\nreference somewhere.\r\n\r\nWe opted to use global thinking that Babel transforms would fill that\r\nin with the proper thing.\r\n\r\nBut for some of our fixtures we are not doing that transform on the\r\nbundle.\r\n\r\n**why make this change?:**\r\nI want to unbreak this on master and then investigate more about what we\r\nshould do to fix this.\r\n\r\n**test plan:**\r\nrun `yarn build` and open the fixtures.\r\n\r\n**issue:**\r\nhttps://github.com/facebook/react/issues/12930\""
                }
            },
            {
                "c": {
                    "additions": 64,
                    "committedDate": "2018-05-29T20:30:04Z",
                    "deletions": 5,
                    "changedFiles": 8,
                    "commentsCount": 0,
                    "id": "ff724d3c286a1753723ea71e8c046498ed1aac98",
                    "type": "Commit",
                    "message": "\"[scheduler] 4/n Allow splitting out `schedule` in fb-www, prepare to fix polyfill issue internally (#12900)\n\n* Use local references to global things inside scheduler\r\n\r\n**what is the change?:**\r\nSee title\r\n\r\n**why make this change?:**\r\nWe want to avoid initially calling one version of an API and then later\r\naccessing a polyfilled version.\r\n\r\n**test plan:**\r\nRun existing tests.\r\n\r\n* Shim ReactScheduler for www\r\n\r\n**what is the change?:**\r\nIn www we want to reference the separate build of ReactScheduler,\r\nwhich allows treating it as a separate module internally.\r\n\r\n**why make this change?:**\r\nWe need to require the ReactScheduler before our rAF polyfill activates,\r\nin order to customize which custom behaviors we want.\r\n\r\nThis is also a step towards being able to experiment with using it\r\noutside of React.\r\n\r\n**test plan:**\r\nRan tests, ran the build, and ran `test-build`.\r\n\r\n* Generate a bundle for fb-www\r\n\r\n**what is the change?:**\r\nSee title\r\n\r\n**why make this change?:**\r\nSplitting out the schedule module allows us to load it before\r\npolyfills kick in for rAF and other APIs.\r\n\r\nAnd long term we want to split this into a separate module anyway, this\r\nis a step towards that.\r\n\r\n**test plan:**\r\nIll run the sync next week and verify that this all works. :)\r\n\r\n* ran prettier\r\n\r\n* fix rebase issues\r\n\r\n* Change names of variables used for holding globals\""
                }
            },
            {
                "c": {
                    "additions": 48,
                    "committedDate": "2018-05-29T19:50:04Z",
                    "deletions": 3,
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "001f9ef4717a0928b4875cbad3421a17f49f95a5",
                    "type": "Commit",
                    "message": "\"Release script prompts for NPM 2FA code (#12908)\n\n* Release script prompts for NPM 2fa code\""
                }
            },
            {
                "c": {
                    "additions": 194,
                    "committedDate": "2018-05-29T16:50:49Z",
                    "deletions": 103,
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "83f76e4db9a060911774f497b5715bd4d4f42a9c",
                    "type": "Commit",
                    "message": "\"ForwardRefs supports propTypes (#12911)\n\n* Moved some internal forwardRef tests to not be internal\r\n* ForwardRef supports propTypes\""
                }
            },
            {
                "c": {
                    "additions": 1,
                    "committedDate": "2018-05-29T14:47:14Z",
                    "deletions": 1,
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "4f1f909b5b5ffe28675eed3fdb645dfaf975c1ef",
                    "type": "Commit",
                    "message": "\"Disable Flow on AppVeyor again\n\nIt runs out of memory.\""
                }
            },
            {
                "c": {
                    "additions": 30,
                    "committedDate": "2018-05-29T13:48:58Z",
                    "deletions": 7,
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "8aeea5afa2d688968545b1cc5a30a48ddc0fa503",
                    "type": "Commit",
                    "message": "\"Do not assign node.value on input creation if no change will occur (#12925)\n\nThis commit fixes an issue where assigning an empty string to required\r\ntext inputs triggers the invalid state in Firefox (~60.0.1).\r\n\r\nIt does this by first comparing the initial state value to the current\r\nvalue property on the text element. This:\r\n\r\n1. Prevents the validation issue\r\n2. Avoids an extra DOM Mutation in some cases\""
                }
            },
            {
                "c": {
                    "additions": 602,
                    "committedDate": "2018-05-28T22:03:15Z",
                    "deletions": 1004,
                    "changedFiles": 28,
                    "commentsCount": 0,
                    "id": "aa85b0fd5ffc92de38720c29833a54c67285abfb",
                    "type": "Commit",
                    "message": "\"Upgrade to Jest 23 (#12894)\n\n* Upgrade to Jest 23 beta\r\n\r\n* prefer `.toHaveBeenCalledTimes`\r\n\r\n* 23 stable\""
                }
            },
            {
                "c": {
                    "additions": 1,
                    "committedDate": "2018-05-28T18:52:42Z",
                    "deletions": 1,
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "a32f857ac78ad1b33c61e6fbd47ccd57f21155c2",
                    "type": "Commit",
                    "message": "\"Use --frozen-lockfile for Yarn in CI build (#12914)\n\nCI builds should always use the `--frozen-lockfile` option. It will fail the build if the lockfile is out-of-date:\r\n\r\n> If you need reproducible dependencies, which is usually the case with the continuous integration systems, you should pass --frozen-lockfile flag.\r\n\r\n(https://yarnpkg.com/en/docs/cli/install/)\""
                }
            }
        ]
    },
    {
        "question": "return a commit message on July 31?",
        "number": 4,
        "category": 1,
        "query": "MATCH (c:Commit)\nWHERE c.committedDate =~ \".*-07-31T.*\"\nRETURN c.message",
        "result": [
            {
                "c.message": "\"[compiler] More complete validation against locals being reassigned after render\n\nSummary:\nThis diff extends the existing work on validating against locals being reassigned after render, by propagating the reassignment \"effect\" into the lvalues of instructions when the rvalue operands include values known to cause reassignments. In particular, this \"closes the loop\" for function definitions and function calls: a function that returns a function that reassigns will be considered to also perform reassignments, but previous to this we didnt consider the result of a `Call` of a function that reassigns to itself be a value that reassigns.\n\nThis causes a number of new bailouts in test cases, all of which appear to me to be legit.\n\nghstack-source-id: 770bf02d079ea2480be243a49caa6f69573d8092\nPull Request resolved: https://github.com/facebook/react/pull/30540\""
            },
            {
                "c.message": "\"[Fizz] Update postpone abort semantics when prerendering (#30541)\n\nWhen aborting with a postpone value in Fizz if any tasks are still\r\npending in the root while prerendering the prerender will fatally error.\r\nThis is different from postponing imperatively in a root task and really\r\nthe semantics should be the same. This change updates React to treat an\r\nabort with a postpone value as a postponed root rather than a fatal\r\nerror.\""
            },
            {
                "c.message": "\"[DevTools] Track the parent DevToolsInstance while mounting a tree (#30542)\n\nThis just tracks the `.parent` field properly and uses DevToolsInstances\r\nin more places that used to use IDs or Fibers.\r\n\r\nI also use this new parent path when looking up a DevToolsInstance from\r\na DOM node. This should ideally be simple because the `.parent` field\r\nrepresents only the unfiltered parents and include any virtual parents.\r\nSo we should be able to just get one from nearest Fiber that has one.\r\n\r\nHowever, because we dont currently always clean up the map of\r\nDevToolsInstances (e.g. updateComponentFilters doesnt recursively clean\r\nout everything) it can leave matches hanging that shouldnt be there. So\r\nwe need to run the shouldFilterFiber filter to ignore those.\r\n\r\nAnother interesting implication is that without a FiberInstance we dont\r\nhave a way to get to a VirtualInstance from a HostComponent. Which means\r\nthat even filtered Fibers need to have a FiberInstance if they have a\r\nVirtualInstance parent. Even if we dont actually mount them into the\r\nfront-end.\""
            },
            {
                "c.message": "\"Build all bundles required by flight fixture with `build-for-flight-dev` (#30534)\""
            },
            {
                "c.message": "\"[Flight] Enable owner stacks on the client when replaying logs (#30473)\n\nTheres a special case that happens when we replay logs on the client\r\nbecause this doesnt happen within the context of any particular\r\nrendered component. So we need to reimplement things that would normally\r\nbe handled by a full client like Fiber.\r\n\r\nThe implementation of `getOwnerStackByComponentInfoInDev` is the\r\nsimplest version since it doesnt have any client components in it so I\r\nmove it to `shared/`. Its only used by Flight but both `react-server/`\r\nand `react-client/` packages. The ReactComponentInfo type is also more\r\ngeneric than just Flight anyway.\r\n\r\nIn a follow up I still need to implement this in React DevTools when\r\nnative tasks are not available so that it appends it to the console.\""
            },
            {
                "c.message": "\"Support untagged releases (#19509)\""
            },
            {
                "c.message": "\"Revert \"Support untagged releases (#19507)\" (#19508)\n\nThis reverts commit 58b3ee7a889b62fefb9cc64962819795bebce7b8.\""
            },
            {
                "c.message": "\"Support untagged releases (#19507)\n\n* Support untagged releases\r\n\r\n* Fix\""
            },
            {
                "c.message": "\"Allow publishing untagged releases (#19505)\""
            },
            {
                "c.message": "\"Disable onScroll bubbling statically except for WWW (#19503)\""
            },
            {
                "c.message": "\"Revert \"Statically enable enableFilterEmptyStringAttributesDOM (#19502)\" (#19504)\n\nThis reverts commit 815ee89bf55078f2447fe49a1c68336e70c1ce44.\""
            },
            {
                "c.message": "\"Statically enable enableFilterEmptyStringAttributesDOM (#19502)\""
            },
            {
                "c.message": "\"Move passive logic out of layout phase (#19500)\n\n* setCurrentFiber per fiber, instead of per effect\r\n\r\n* Re-use safelyCallDestroy\r\n\r\nPart of the code in flushPassiveUnmountEffects is a duplicate of the\r\ncode used for unmounting layout effects. I did some minor refactoring to\r\nso we could use the same function in both places.\r\n\r\nClosure will inline anyway so it doesnt affect code size or\r\nperformance, just maintainability.\r\n\r\n* Dont check HookHasEffect during deletion\r\n\r\nWe dont need to check HookHasEffect during a deletion; all effects are\r\nunmounted.\r\n\r\nSo we also dont have to set HookHasEffect during a deletion, either.\r\n\r\nThis allows us to remove the last remaining passive effect logic from\r\nthe synchronous layout phase.\""
            },
            {
                "c.message": "\"Remove FocusScope (#16267)\""
            },
            {
                "c.message": "\"Element keys are selectable text\n\nChanged truncation to be CSS-driven, and enabled double-click selection of text, so that long keys could be copied from within the tree.\""
            },
            {
                "c.message": "\"Updated OVERVIEW doc\""
            },
            {
                "c.message": "\"Updated CHANGELOG based on Dans feedback\""
            },
            {
                "c.message": "\"Added dynamic indentation to change log\""
            },
            {
                "c.message": "\"Removed the Profiler screenshot capture feature\n\nThis wasnt reliable because of browser extension API limitations and required serious throttling to avoid harming performance, so Ive decided to just remove it entirely for now.\""
            },
            {
                "c.message": "\"Add \"Welcome to the new DevTools\" notification\n\nThis dialog is shown in the browser extension the first time a user views v4. It is off by default for the standalone extension, but can be enabled via a public API.\""
            },
            {
                "c.message": "\"Added CHANGELOG\""
            },
            {
                "c.message": "\"Add missing check to unmocked Scheduler warning (#16261)\n\nThe unmocked Scheduler warning doesnt actually check if Scheduler\r\nis mocked.\""
            },
            {
                "c.message": "\"[act] Wrap IsThisRendererActing in DEV check (#16259)\n\n* [act] Wrap IsThisRendererActing in DEV check\r\n\r\nSo that it doesnt leak into the production bundle. Follow-up to #16240.\r\n\r\n* Disable Suspense fallback test in prod\""
            },
            {
                "c.message": "\"Add tests that ShallowRenderer supports string and fragment (#10241)\""
            },
            {
                "c.message": "\"Fix invariant parity for SSR (#10333)\""
            },
            {
                "c.message": "\"Fix SSR integration test swallowing lack of expected error  (#10331)\n\n* Dont catch the assertion about missing errors\r\n\r\nPreviously, even if an error was not thrown, the assertion about this was ignored.\r\n\r\nThis fix exposes two failing cases in new SSR that werent failing in Stack.\r\n\r\n* Add child context validation to new SSR\r\n\r\nThis fixes the error cases that were silently failing before but are now exposed.\""
            },
            {
                "c.message": "\"fix renderToString fails with array type children when react-dom/server render (#10221)\n\n* fix(*): fix renderToString fails with array type children when react-dom/server render\r\n\r\n* Add an integration test that verify renderToString with array type children\r\n\r\n* Add integration test to renderToString with array type child\r\n\r\n* Update integration test to renderToString with array type child\r\n\r\n* fix renderToString fails with array type children when react-dom/server render\r\n\r\n* Update integration test to renderToString with array type child\r\n\r\n* Add to iterate that are not arrays\r\n\r\n* Add the validation react element\r\n\r\n* Improve an integration test of server renderToString with array type\r\n\r\n* prettier\r\n\r\n* prettier\r\n\r\n* Make SSR can handle a single array element and nested array\r\n\r\n* prettier\r\n\r\n* Change integeration test description\r\n\r\n* \tmodified:   src/renderers/dom/ReactDOMNodeStreamRenderer.js\r\n\r\n* Make invariants consistent\r\n\r\n* Gate outdated test itself by feature flag\r\n\r\n* Change test to make sense both with old and new code\r\n\r\n* Test more cases\""
            },
            {
                "c.message": "\"Avoid \"Member not found exception\" in IE10 (#7343)\n\nchange custom events raise \"Member not found\" in <= IE10. To\r\ncircumvent this, the SyntheticEvent class now checks for \"typeof\r\nevent.cancelBubble !== unknown\". This eliminates this exception and\r\nmaintains the expected bubbling functionality.\r\n\r\nAddresses #7320.\""
            },
            {
                "c.message": "\"removed dangling comma that messes up loading in IE8\""
            },
            {
                "c.message": "\"Merge pull request #4528 from cpojer/codemod-updates\n\nSimplify react-codemod.\""
            },
            {
                "c.message": "\"Merge pull request #4537 from afhole/patch-1\n\nUpdate 02.1-jsx-in-depth.md\""
            },
            {
                "c.message": "\"Simplify react-codemod.\""
            },
            {
                "c.message": "\"0.14.0-beta2\""
            },
            {
                "c.message": "\"Update 02.1-jsx-in-depth.md\n\nsetup is a noun, not a verb\""
            },
            {
                "c.message": "\"Update fbjs dependency\""
            },
            {
                "c.message": "\"Merge pull request #1956 from syranide/ffenter\n\nImprove normalization of charCode, fix FF not reporting Enter\""
            },
            {
                "c.message": "\"Merge pull request #1885 from syranide/testinnerhtml\n\nUse faster cached regexps for tests in setInnerHTML\""
            },
            {
                "c.message": "\"Improve normalization of charCode, fix FF not reporting Enter\""
            },
            {
                "c.message": "\"Merge pull request #1960 from julen/docs/setState\n\nDocs: added note about setState() side-effects\""
            },
            {
                "c.message": "\"Merge pull request #1827 from syranide/jsxstrict\n\nJSXTransformer, stricter parsing of script type\""
            },
            {
                "c.message": "\"Docs: added note about setState() side-effects\""
            }
        ]
    },
    {
        "question": "show me the changes for BeforeInputEventPlugin.js file?",
        "number": 5,
        "category": 2,
        "query": "MATCH (f:File {name: \"BeforeInputEventPlugin.js\"})<-[:changed]-(c:Commit)\nRETURN c, f",
        "result": [
            {
                "c": {
                    "additions": 689,
                    "deletions": 371,
                    "committedDate": "2023-01-09T20:46:48Z",
                    "changedFiles": 144,
                    "commentsCount": 0,
                    "id": "0b4f443020af386f2b48c47c074cb504ed672dc8",
                    "type": "Commit",
                    "message": "\"[flow] enable enforce_local_inference_annotations (#25921)\n\nThis setting is an incremental path to the next Flow version enforcing\r\ntype annotations on most functions (except some inline callbacks).\r\n\r\nUsed\r\n```\r\nnode_modules/.bin/flow codemod annotate-functions-and-classes --write .\r\n```\r\nto add a majority of the types with some hand cleanup when for large\r\ninferred objects that should just be `Fiber` or weird constructs\r\nincluding `any`.\r\n\r\nSuppressed the remaining issues.\r\n\r\nBuilds on #25918\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 11,
                    "deletions": 113,
                    "committedDate": "2022-10-04T20:18:12Z",
                    "changedFiles": 46,
                    "commentsCount": 0,
                    "id": "ea04a486a7c27771f7eea896565c0980927ed3b4",
                    "type": "Commit",
                    "message": "\"Flow: remove unused suppressions (#25424)\n\nRemoves $FlowFixMes that are no longer needed.\r\n\r\nUsed flow/tool from the Flow repo:\r\n\r\n```\r\n ~/Developer/flow/tool update-suppressions .\r\n```\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 138,
                    "deletions": 10,
                    "committedDate": "2022-10-04T15:01:50Z",
                    "changedFiles": 33,
                    "commentsCount": 0,
                    "id": "64fe791be84ad04a4a1d005376ba5cf5701db9b7",
                    "type": "Commit",
                    "message": "\"Flow upgrade to 0.146\n\nThis upgrade made more expressions invalidate refinements. In some\nplaces this lead to a large number of suppressions that I automatically\nsuppressed and should be followed up on when the code is touched.\nI think most of them might require either manual annotations or moving\na value into a const to allow refinement.\n\nghstack-source-id: a45b40abf03474b691a2dc18a4f1f3b06cfbdffd\nPull Request resolved: https://github.com/facebook/react/pull/25410\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 72,
                    "deletions": 104,
                    "committedDate": "2022-09-28T23:05:50Z",
                    "changedFiles": 106,
                    "commentsCount": 0,
                    "id": "97d75c9c8bcddb0daed1ed062101c7f5e9b825f4",
                    "type": "Commit",
                    "message": "\"Move react-dom implementation files to react-dom-bindings (#25345)\n\nThis lets us share it with react-server-dom-webpack while still having a\r\ndependency on react-dom. It also makes somewhat sense from a bundling\r\nperspective since react-dom is an external to itself.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 73,
                    "deletions": 35,
                    "committedDate": "2022-09-12T17:44:58Z",
                    "changedFiles": 21,
                    "commentsCount": 0,
                    "id": "9328988c024800de05dfab70e55cfd0999445d8a",
                    "type": "Commit",
                    "message": "\"Flow: fix Fiber typed as any (#25241)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 118,
                    "deletions": 114,
                    "committedDate": "2020-09-25T12:33:28Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "480626a9e920d5e04194c793a828318102ea4ff4",
                    "type": "Commit",
                    "message": "\"Create Synthetic Events Lazily (#19909)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 191,
                    "deletions": 172,
                    "committedDate": "2020-09-25T10:31:00Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "1890159a5d362e76ee949dfcace1ccb9677abc45",
                    "type": "Commit",
                    "message": "\"Separate SyntheticEvent constructors to prevent deopts (#19907)\n\n* Remove arguments from hot path\r\n\r\n* Make SyntheticEvent subtypes monomorphic\r\n\r\n* Maybe fix Flow?\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 241,
                    "deletions": 41,
                    "committedDate": "2020-08-10T11:54:10Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "7f696bd99c39348a631c20378d2a8704634bab04",
                    "type": "Commit",
                    "message": "\"fix: onFocus/onBlur/onBeforeInput have a matching event type (#19561)\n\n* test: Add current behavior for event types of onFocus/onBlur\r\n\r\n* fix: onFocus/onBlur have a matching event type\r\n\r\n* fix useFocus\r\n\r\n* fix: dont compare native event types with react event types\r\n\r\n* Add FocusIn/FocusOutEventInterface\r\n\r\n* A simpler alternative fix\r\n\r\n* Add regression tests\r\n\r\n* Always pass React event type and fix beforeinput\r\n\r\nCo-authored-by: Dan Abramov <dan.abramov@me.com>\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 791,
                    "deletions": 888,
                    "committedDate": "2020-07-30T20:52:37Z",
                    "changedFiles": 20,
                    "commentsCount": 0,
                    "id": "22d16cc15df8e570b79c2825fb495c2b98b40bf5",
                    "type": "Commit",
                    "message": "\"Remove event constants (#19276)\n\n* Remove opaque event type\r\n\r\n* Rename type and merge files\r\n\r\n* Use literals where we have Flow coverage\r\n\r\n* Flowify some plugins\r\n\r\n* Remove constants except necessary ones\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 140,
                    "deletions": 152,
                    "committedDate": "2020-07-23T00:02:59Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "76ce685d0fc7821a6c8be486d7cbb2c3d22f6fb7",
                    "type": "Commit",
                    "message": "\"Remove SyntheticEvent subtypes (#19436)\n\n* Remove SyntheticEvent subtypes\r\n\r\n* Code golf\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 441,
                    "deletions": 594,
                    "committedDate": "2020-07-22T21:12:15Z",
                    "changedFiles": 29,
                    "commentsCount": 0,
                    "id": "125d1a19a211c51d5ee52ec0c1cc1f538eb44d5c",
                    "type": "Commit",
                    "message": "\"Move event things around (#19433)\n\n* Put all synthetic events in one file\r\n\r\n* Inline other helpers\r\n\r\n* Remove Modern from filenames\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 315,
                    "deletions": 147,
                    "committedDate": "2020-03-12T21:48:29Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "d3ec42020d220777bf589bec36c9cd8300ec9742",
                    "type": "Commit",
                    "message": "\"Address feedback for accumulateTwoPhaseListeners (#18289)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 60,
                    "deletions": 10,
                    "committedDate": "2020-03-11T18:55:01Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "30a998debf79f8c8efb3fa9b6ff5458fb319d7a1",
                    "type": "Commit",
                    "message": "\"ModernEventSystem: refactor accumulateTwoPhaseListeners (#18274)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 10,
                    "deletions": 10,
                    "committedDate": "2020-03-05T00:04:27Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "2fe0fbb05ef2c56db760122e995b923528e6ce8f",
                    "type": "Commit",
                    "message": "\"Use accumulateTwoPhaseDispatchesSingle directly (#18203)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 18,
                    "deletions": 18,
                    "committedDate": "2019-10-02T17:31:15Z",
                    "changedFiles": 14,
                    "commentsCount": 0,
                    "id": "ab1a4f249e61045d523ddbbfb840e868afbbf785",
                    "type": "Commit",
                    "message": "\"Move eventSystemFlags to last argument in event plugin extractors (#16978)\n\nFix for necolas/react-native-web#1443\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1270,
                    "deletions": 131,
                    "committedDate": "2019-09-23T18:21:10Z",
                    "changedFiles": 25,
                    "commentsCount": 0,
                    "id": "0a527707cd8befd21a741ca9646a8551842190b0",
                    "type": "Commit",
                    "message": "\"Event Replaying (#16725)\n\n* Add Event Replaying Infra\r\n\r\n* Wire up Roots and Suspense boundaries, to retry events, after they commit\r\n\r\n* Replay discrete events in order in a separate scheduler callback\r\n\r\n* Add continuous events\r\n\r\nThese events only replay their last target if the target is not yet\r\nhydrated. That way we dont have to wait for a previously hovered\r\nboundary before invoking the current target.\r\n\r\n* Enable tests from before\r\n\r\nThese tests were written with replaying in mind and now we can properly\r\nenable them.\r\n\r\n* Unify replaying and dispatching\r\n\r\n* Mark system flags as a replay and pass to legacy events\r\n\r\nThat way we can check if this is a replay and therefore needs a special\r\ncase. One such special case is \"mouseover\" where we check the\r\nrelatedTarget.\r\n\r\n* Eagerly listen to all replayable events\r\n\r\nTo minimize breakages in a minor, I only do this for the new root APIs\r\nsince replaying only matters there anyway. Only if hydrating.\r\n\r\nFor Flare, I have to attach all active listeners since the current\r\nsystem has one DOM listener for each. In a follow up I plan on optimizing\r\nthat by only attaching one if theres at least one active listener\r\nwhich would allow us to start with only passive and then upgrade.\r\n\r\n* Desperate attempt to save bytese\r\n\r\n* Add test for mouseover replaying\r\n\r\nWe need to check if the \"relatedTarget\" is mounted due to how the old\r\nevent system dispatches from the \"out\" event.\r\n\r\n* Fix for nested boundaries and suspense in root container\r\n\r\nThis is a follow up to #16673 which didnt have a test because it wasnt\r\nobservable yet. This shows that it had a bug.\r\n\r\n* Rename RESPONDER_EVENT_SYSTEM to PLUGIN_EVENT_SYSTEM\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 88,
                    "deletions": 93,
                    "committedDate": "2019-08-14T14:32:42Z",
                    "changedFiles": 62,
                    "commentsCount": 0,
                    "id": "b1a03dfdc8e42d075422556553ffe59868150e95",
                    "type": "Commit",
                    "message": "\"Rename legacy \"events\" package to \"legacy-events\" (#16388)\n\n* Renamed events package to legacy-events\r\n* Updated events references to point to legacy-events\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 2316,
                    "deletions": 1473,
                    "committedDate": "2019-08-14T14:35:49Z",
                    "changedFiles": 119,
                    "commentsCount": 0,
                    "id": "44e410900da8ef7b5e7daf18e7a0bf61b6612247",
                    "type": "Commit",
                    "message": "\"Merged master (with events -> legacy-events package rename)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 467,
                    "deletions": 390,
                    "committedDate": "2018-11-19T23:32:54Z",
                    "changedFiles": 34,
                    "commentsCount": 0,
                    "id": "c954efa70f44a44be9c33c60c57f87bea6f40a10",
                    "type": "Commit",
                    "message": "\"Remove `import * as` pattern from the codebase (#14282)\n\nWhenever we do this, Rollup needs to materialize this as an object.\r\nThis causes it to also add the Babel compatibility property which is\r\nunnecessary bloat. However, since when we use these, we leak the object\r\nthis often also deopts any compiler optimizations.\r\n\r\nIf we really need an object we should export default an object.\r\n\r\nCurrently there is an exception for DOMTopLevelEventTypes since\r\nlisting out the imports is a PITA and it doesnt escape so it should\r\nget properly inlined. We should probably move to a different pattern\r\nto avoid this for consistency though.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 10,
                    "deletions": 8,
                    "committedDate": "2018-09-09T15:54:31Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "8a8d973d3cc5623676a84f87af66ef9259c3937c",
                    "type": "Commit",
                    "message": "\"Use clearer wording\n\nFixes #13604\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 514,
                    "deletions": 514,
                    "committedDate": "2018-09-07T22:11:23Z",
                    "changedFiles": 514,
                    "commentsCount": 0,
                    "id": "b87aabdfe1b7461e7331abb3601d9e6bb27544bc",
                    "type": "Commit",
                    "message": "\"Drop the year from Facebook copyright headers and the LICENSE file. (#13593)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 236,
                    "deletions": 50,
                    "committedDate": "2018-06-15T17:12:45Z",
                    "changedFiles": 19,
                    "commentsCount": 0,
                    "id": "72434a7686035b4af766ee7d06c070d7f5d6a5f2",
                    "type": "Commit",
                    "message": "\"Remove or inline some fbjs dependencies (#13046)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 18,
                    "deletions": 2,
                    "committedDate": "2018-06-14T15:35:05Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "2e757790751ab8d165fc4df37e90a59d914c4527",
                    "type": "Commit",
                    "message": "\"Fix incorrect data in compositionend event with Korean IME on IE11 (#10217) (#12563)\n\n* Add isUsingKoreanIME function to check if a composition event was triggered by Korean IME\r\n\r\n* Add Korean IME check alongside useFallbackCompositionData and disable fallback mode with Korean IME\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1965,
                    "deletions": 996,
                    "committedDate": "2018-05-15T09:38:50Z",
                    "changedFiles": 32,
                    "commentsCount": 0,
                    "id": "e96dc140599363029bd05565d58bcd4a432db370",
                    "type": "Commit",
                    "message": "\"Use browser event names for top-level event types in React DOM (#12629)\n\n* Add TopLevelEventTypes\r\n\r\n* Fix `ReactBrowserEventEmitter`\r\n\r\n* Fix EventPluginUtils\r\n\r\n* Fix TapEventPlugin\r\n\r\n* Fix ResponderEventPlugin\r\n\r\n* Update ReactDOMFiberComponent\r\n\r\n* Fix BeforeInputEventPlugin\r\n\r\n* Fix ChangeEventPlugin\r\n\r\n* Fix EnterLeaveEventPlugin\r\n\r\n* Add missing non top event type used in ChangeEventPlugin\r\n\r\n* Fix SelectEventPlugin\r\n\r\n* Fix SimpleEventPlugin\r\n\r\n* Fix outstanding Flow issues and move TopLevelEventTypes\r\n\r\n* Inline a list of all events in `ReactTestUtils`\r\n\r\n* Fix tests\r\n\r\n* Make it pretty\r\n\r\n* Fix completly unrelated typo\r\n\r\n* Don\u2019t use map constructor because of IE11\r\n\r\n* Update typings, revert changes to native code\r\n\r\n* Make topLevelTypes in ResponderEventPlugin injectable and create DOM and ReactNative variant\r\n\r\n* Set proper dependencies for DOMResponderEventPlugin\r\n\r\n* Prettify\r\n\r\n* Make some react dom tests no longer depend on internal API\r\n\r\n* Use factories to create top level speific generic event modules\r\n\r\n* Remove unused dependency\r\n\r\n* Revert exposed module renaming, hide store creation, and inline dependency decleration\r\n\r\n* Add Flow types to createResponderEventPlugin and its consumers\r\n\r\n* Remove unused dependency\r\n\r\n* Use opaque flow type for TopLevelType\r\n\r\n* Add missing semis\r\n\r\n* Use raw event names as top level identifer\r\n\r\n* Upgrade baylon\r\n\r\nThis is required for parsing opaque flow types in our CI tests.\r\n\r\n* Clean up flow types\r\n\r\n* Revert Map changes of ReactBrowserEventEmitter\r\n\r\n* Upgrade babel-* packages\r\n\r\nApparently local unit tests also have issues with parsing JavaScript\r\nmodules that contain opaque types (not sure why I didnt notice\r\nearlier!?).\r\n\r\n* Revert Map changes of SimpleEventPlugin\r\n\r\n* Clean up ReactTestUtils\r\n\r\n* Add missing semi\r\n\r\n* Fix Flow issue\r\n\r\n* Make TopLevelType clearer\r\n\r\n* Favor for loops\r\n\r\n* Explain the new DOMTopLevelEventTypes concept\r\n\r\n* Use static injection for Responder plugin types\r\n\r\n* Remove null check and rely on flow checks\r\n\r\n* Add missing ResponderEventPlugin dependencies\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 18,
                    "committedDate": "2018-01-04T13:28:42Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "4d37040cbf914c9d3c282e8edd67fa97a3c31178",
                    "type": "Commit",
                    "message": "\"Removed Presto check (#11921)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 0,
                    "committedDate": "2017-12-19T03:18:30Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "faa4218632ca21f3af731fb6c14849fc054fca15",
                    "type": "Commit",
                    "message": "\"Fixed an issue #11853 - window.opera=null problem (#11854)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 44,
                    "deletions": 62,
                    "committedDate": "2017-12-14T01:39:11Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "cc52e06b490e0dc2482b345aa5d0d65fae931095",
                    "type": "Commit",
                    "message": "\"Prevent BeforeInputPlugin from returning [null, null] (#11848)\n\nThe BeforeInputPlugin dispatches null elements in an array if\r\ncomposition or beforeInput events are not extracted. This causes a\r\nan extra array allocation, but more importantly creates null states in\r\nlater event dispatch methods that are annoying to account for.\r\n\r\nThis commit makes it so that BeforeInputPlugin never returns a null\r\nelement inside an array.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 563,
                    "deletions": 536,
                    "committedDate": "2017-12-06T01:39:48Z",
                    "changedFiles": 53,
                    "commentsCount": 0,
                    "id": "5bd2321ae3dd7d68ac02dee3c3f271e9d0ee8784",
                    "type": "Commit",
                    "message": "\"Remove vars (#11780)\n\n* react-dom: convert packages/react-dom/src/client\r\n\r\n* react-dom: convert packages/react-dom/src/events\r\n\r\n* react-dom: convert packages/react-dom/src/test-utils\r\n\r\n* react-dom: convert files on root\r\n\r\n* react-dom: convert updated ReactDOM-test.js\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1071,
                    "deletions": 1358,
                    "committedDate": "2017-11-05T11:58:36Z",
                    "changedFiles": 56,
                    "commentsCount": 0,
                    "id": "92b7b172cce9958b846844f0b46fd7bbd8c5140d",
                    "type": "Commit",
                    "message": "\"Use named exports in more places (#11457)\n\n* Convert EventPlugin{Hub,Registry} to named exports\r\n\r\n* Convert EventPluginUtils to named exports\r\n\r\n* Convert EventPropagators to named exports\r\n\r\n* Convert ReactControlledComponent to named exports\r\n\r\n* Convert ReactGenericBatching to named exports\r\n\r\n* Convert ReactDOMComponentTree to named exports\r\n\r\n* Convert ReactNativeComponentTree to named exports\r\n\r\n* Convert ReactNativeRTComponentTree to named exports\r\n\r\n* Convert FallbackCompositionState to named exports\r\n\r\n* Convert ReactEventEmitterMixin to named exports\r\n\r\n* Convert ReactBrowserEventEmitter to named exports\r\n\r\n* Convert ReactNativeEventEmitter to named exports\r\n\r\n* Convert ReactDOMEventListener to named exports\r\n\r\n* Convert DOMMarkupOperations to named exports\r\n\r\n* Convert DOMProperty to named exports\r\n\r\n* Add suppression for existing Flow violation\r\n\r\nFlow didnt see it before.\r\n\r\n* Update sizes\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 359,
                    "committedDate": "2017-11-02T20:32:48Z",
                    "changedFiles": 179,
                    "commentsCount": 0,
                    "id": "45c1ff348e1c7d03567f5bba6cb32cffa9222972",
                    "type": "Commit",
                    "message": "\"Remove unnecessary use strict in the source (#11433)\n\n* Remove use strict from ES modules\r\n\r\n* Delete unused file\r\n\r\nThis was unused since Stack.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 3236,
                    "deletions": 3439,
                    "committedDate": "2017-11-02T19:50:03Z",
                    "changedFiles": 234,
                    "commentsCount": 0,
                    "id": "21d0c115238b4f38837020cf83e0c657d8c01c9f",
                    "type": "Commit",
                    "message": "\"Convert the Source to ES Modules (#11389)\n\n* Update transforms to handle ES modules\r\n\r\n* Update Jest to handle ES modules\r\n\r\n* Convert react package to ES modules\r\n\r\n* Convert react-art package to ES Modules\r\n\r\n* Convert react-call-return package to ES Modules\r\n\r\n* Convert react-test-renderer package to ES Modules\r\n\r\n* Convert react-cs-renderer package to ES Modules\r\n\r\n* Convert react-rt-renderer package to ES Modules\r\n\r\n* Convert react-noop-renderer package to ES Modules\r\n\r\n* Convert react-dom/server to ES modules\r\n\r\n* Convert react-dom/{client,events,test-utils} to ES modules\r\n\r\n* Convert react-dom/shared to ES modules\r\n\r\n* Convert react-native-renderer to ES modules\r\n\r\n* Convert react-reconciler to ES modules\r\n\r\n* Convert events to ES modules\r\n\r\n* Convert shared to ES modules\r\n\r\n* Remove CommonJS support from transforms\r\n\r\n* Move ReactDOMFB entry point code into react-dom/src\r\n\r\nThis is clearer because we can use ES imports in it.\r\n\r\n* Fix Rollup shim configuration to work with ESM\r\n\r\n* Fix incorrect comment\r\n\r\n* Exclude external imports without side effects\r\n\r\n* Fix ReactDOM FB build\r\n\r\n* Remove TODOs I don\u2019t intend to fix yet\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 485,
                    "deletions": 500,
                    "committedDate": "2017-10-25T18:07:54Z",
                    "changedFiles": 87,
                    "commentsCount": 0,
                    "id": "087c48bb36b88ef0b5bbca2b9b70a52d8d413102",
                    "type": "Commit",
                    "message": "\"Reorder imports (#11359)\n\n* Reorder imports\r\n\r\n* Record sizes\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1180,
                    "deletions": 1809,
                    "committedDate": "2017-10-24T23:55:00Z",
                    "changedFiles": 262,
                    "commentsCount": 0,
                    "id": "1eed302d346bfb8f5db8d88b0e7096d8999d3548",
                    "type": "Commit",
                    "message": "\"Drop Haste (#11303)\n\n* Use relative paths in packages/react\r\n\r\n* Use relative paths in packages/react-art\r\n\r\n* Use relative paths in packages/react-cs\r\n\r\n* Use relative paths in other packages\r\n\r\n* Fix as many issues as I can\r\n\r\nThis uncovered an interesting problem where ./b from package/src/a would resolve to a different instantiation of package/src/b in Jest.\r\n\r\nEither this is a showstopper or we can solve it by completely fobbidding remaining /src/.\r\n\r\n* Fix all tests\r\n\r\nIt seems we cant use relative requires in tests anymore. Otherwise Jest becomes confused between real file and symlink.\r\nhttps://github.com/facebook/jest/issues/3830\r\n\r\nThis seems bad... Except that we already *dont* want people to create tests that import individual source files.\r\nAll existing cases of us doing so are actually TODOs waiting to be fixed.\r\n\r\nSo perhaps this requirement isnt too bad because it makes bad code looks bad.\r\n\r\nOf course, if we go with this, well have to lint against relative requires in tests.\r\nIt also makes moving things more painful.\r\n\r\n* Prettier\r\n\r\n* Remove @providesModule\r\n\r\n* Fix remaining Haste imports I missed earlier\r\n\r\n* Fix up paths to reflect new flat structure\r\n\r\n* Fix Flow\r\n\r\n* Fix CJS and UMD builds\r\n\r\n* Fix FB bundles\r\n\r\n* Fix RN bundles\r\n\r\n* Prettier\r\n\r\n* Fix lint\r\n\r\n* Fix warning printing and error codes\r\n\r\n* Fix buggy return\r\n\r\n* Fix lint and Flow\r\n\r\n* Use Yarn on CI\r\n\r\n* Unbreak Jest\r\n\r\n* Fix lint\r\n\r\n* Fix aliased originals getting included in DEV\r\n\r\nShouldnt affect correctness (they were ignored) but fixes DEV size regression.\r\n\r\n* Record sizes\r\n\r\n* Fix weird version in package.json\r\n\r\n* Tweak bundle labels\r\n\r\n* Get rid of output option by introducing react-dom/server.node\r\n\r\n* Reconciler should depend on prop-types\r\n\r\n* Update sizes last time\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 13,
                    "deletions": 2,
                    "committedDate": "2017-10-20T19:14:52Z",
                    "changedFiles": 89,
                    "commentsCount": 0,
                    "id": "e779c39dfeb41ae8f6611dc4f9830d1b1ac64f9b",
                    "type": "Commit",
                    "message": "\"Flatten everything (#11304)\n\n* Flatten everything\r\n\r\n* Fix ReactDOMServerNode build\r\n\r\n* Fix native builds\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 28,
                    "deletions": 6,
                    "committedDate": "2017-10-20T12:51:50Z",
                    "changedFiles": 65,
                    "commentsCount": 0,
                    "id": "ab853e6f3ef69a56f042f5aa5c07da881fdb68a0",
                    "type": "Commit",
                    "message": "\"Group event code together and forbid cross-client/server imports (#11298)\n\n* react-dom/src/syntheticEvents => events, and put plugins into it\r\n\r\n* Flatten react-dom/src/shared\r\n\r\n* Split react-dom/src/client/utils into event/ and root client folder\r\n\r\nMakes it clearer what is used by what.\r\n\r\n* Strictly separate modules that can be imported by client and server\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 193,
                    "deletions": 197,
                    "committedDate": "2017-10-19T18:50:24Z",
                    "changedFiles": 145,
                    "commentsCount": 0,
                    "id": "313611572b6567d229367ed20ff63d1bca8610bb",
                    "type": "Commit",
                    "message": "\"Reorganize code structure (#11288)\n\n* Move files and tests to more meaningful places\r\n\r\n* Fix the build\r\n\r\nNow that we import reconciler via react-reconciler, I needed to make a few tweaks.\r\n\r\n* Update sizes\r\n\r\n* Move @preventMunge directive to FB header\r\n\r\n* Revert unintentional change\r\n\r\n* Fix Flow coverage\r\n\r\nI forgot to @flow-ify those files. This uncovered some issues.\r\n\r\n* Prettier, I love you but youre bringing me down\r\nPrettier, I love you but youre bringing me down\r\n\r\nLike a rat in a cage\r\nPulling minimum wage\r\nPrettier, I love you but youre bringing me down\r\n\r\nPrettier, youre safer and youre wasting my time\r\nOur records all show you were filthy but fine\r\nBut they shuttered your stores\r\nWhen you opened the doors\r\nTo the cops who were bored once theyd run out of crime\r\n\r\nPrettier, youre perfect, oh, please dont change a thing\r\nYour mild billionaire mayors now convinced hes a king\r\nSo the boring collect\r\nI mean all disrespect\r\nIn the neighborhood bars Id once dreamt I would drink\r\n\r\nPrettier, I love you but youre freaking me out\r\nTheres a ton of the twist but were fresh out of shout\r\nLike a death in the hall\r\nThat you hear through your wall\r\nPrettier, I love you but youre freaking me out\r\n\r\nPrettier, I love you but youre bringing me down\r\nPrettier, I love you but youre bringing me down\r\nLike a death of the heart\r\nJesus, where do I start?\r\nBut youre still the one pool where Id happily drown\r\n\r\nAnd oh! Take me off your mailing list\r\nFor kids who think it still exists\r\nYes, for those who think it still exists\r\nMaybe Im wrong and maybe youre right\r\nMaybe Im wrong and maybe youre right\r\nMaybe youre right, maybe Im wrong\r\nAnd just maybe youre right\r\n\r\nAnd oh! Maybe mother told you true\r\nAnd therell always be somebody there for you\r\nAnd youll never be alone\r\nBut maybe shes wrong and maybe Im right\r\nAnd just maybe shes wrong\r\nMaybe shes wrong and maybe Im right\r\nAnd if so, heres this song!\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 13760,
                    "deletions": 502,
                    "committedDate": "2017-10-18T23:22:21Z",
                    "changedFiles": 409,
                    "commentsCount": 0,
                    "id": "d9c1dbd61772f8f8ab0cdf389e70463d704c480b",
                    "type": "Commit",
                    "message": "\"Use Yarn Workspaces (#11252)\n\n* Enable Yarn workspaces for packages/*\r\n\r\n* Move src/isomorphic/* into packages/react/src/*\r\n\r\n* Create index.js stubs for all packages in packages/*\r\n\r\nThis makes the test pass again, but breaks the build because npm/ folders arent used yet.\r\nIm not sure if well keep this structure--Ill just keep working and fix the build after it settles down.\r\n\r\n* Put FB entry point for react-dom into packages/*\r\n\r\n* Move src/renderers/testing/* into packages/react-test-renderer/src/*\r\n\r\nNote that this is currently broken because Jest ignores node_modules,\r\nand so Yarn linking makes Jest skip React source when transforming.\r\n\r\n* Remove src/node_modules\r\n\r\nIt is now unnecessary. Some tests fail though.\r\n\r\n* Add a hacky workaround for Jest/Workspaces issue\r\n\r\nJest sees node_modules and thinks its third party code.\r\n\r\nThis is a hacky way to teach Jest to still transform anything in node_modules/react*\r\nif it resolves outside of node_modules (such as to our packages/*) folder.\r\n\r\nIm not very happy with this and we should revisit.\r\n\r\n* Add a fake react-native package\r\n\r\n* Move src/renderers/art/* into packages/react-art/src/*\r\n\r\n* Move src/renderers/noop/* into packages/react-noop-renderer/src/*\r\n\r\n* Move src/renderers/dom/* into packages/react-dom/src/*\r\n\r\n* Move src/renderers/shared/fiber/* into packages/react-reconciler/src/*\r\n\r\n* Move DOM/reconciler tests I previously forgot to move\r\n\r\n* Move src/renderers/native-*/* into packages/react-native-*/src/*\r\n\r\n* Move shared code into packages/shared\r\n\r\nIts not super clear how to organize this properly yet.\r\n\r\n* Add back files that somehow got lost\r\n\r\n* Fix the build\r\n\r\n* Prettier\r\n\r\n* Add missing license headers\r\n\r\n* Fix an issue that caused mocks to get included into build\r\n\r\n* Update other references to src/\r\n\r\n* Re-run Prettier\r\n\r\n* Fix lint\r\n\r\n* Fix weird Flow violation\r\n\r\nI didnt change this file but Flow started complaining.\r\nCaleb said this annotation was unnecessarily using $Abstract though so I removed it.\r\n\r\n* Update sizes\r\n\r\n* Fix stats script\r\n\r\n* Fix packaging fixtures\r\n\r\nUse file: instead of NODE_PATH since NODE_PATH.\r\nNODE_PATH trick only worked because we had no react/react-dom in root node_modules, but now we do.\r\n\r\nfile: dependency only works as I expect in Yarn, so I moved the packaging fixtures to use Yarn and committed lockfiles.\r\nVerified that the page shows up.\r\n\r\n* Fix art fixture\r\n\r\n* Fix reconciler fixture\r\n\r\n* Fix SSR fixture\r\n\r\n* Rename native packages\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1247,
                    "deletions": 2102,
                    "committedDate": "2017-09-26T01:17:44Z",
                    "changedFiles": 427,
                    "commentsCount": 0,
                    "id": "d63249d03488fec1ea92a81ba29f0e87a82feeae",
                    "type": "Commit",
                    "message": "\"Update license headers BSD+Patents -> MIT\n\nDid find and replace in TextMate.\n\n```\nfind: (?:( \\*)( ))?Copyright (?:\\(c\\) )?(\\d{4})\\b.+Facebook[\\s\\S]+(?:this source tree|the same directory)\\.$\nreplace: $1$2Copyright (c) $3-present, Facebook, Inc.\\n$1\\n$1$2This source code is licensed under the MIT license found in the\\n$1$2LICENSE file in the root directory of this source tree.\n```\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 8,
                    "deletions": 8,
                    "committedDate": "2017-08-25T16:15:47Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "0e556fef24e9db468d00b05ef8ddfa0b06b08f0c",
                    "type": "Commit",
                    "message": "\"Adding the correct argument name to documentation tag (#10529)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 368,
                    "deletions": 159,
                    "committedDate": "2017-08-04T17:24:48Z",
                    "changedFiles": 12,
                    "commentsCount": 0,
                    "id": "755724a24c4743b5507590e512cdf2f24d9b8435",
                    "type": "Commit",
                    "message": "\"Implement event-specific pooling for SyntheticEvent (#10237)\n\n* Remove PooledClass from FallbackCompositionState\r\n\r\nThe only module that uses FallbackCompositonState is BeforeInputEventPlugin. The way its structured means there can only be a single instance of FallbackCompositionState at any given time (stored in a local variable at the top-level) so we dont really need pooling here at all. Instead, a single object is now stored in FallbackCompositionState, and access (initializing, reseting, getting data) is gaurded by the exported helper object.\r\n\r\n* Use new FallbackCompositionState API in BeforeInputEventPlugin\r\n\r\n* Implement event-specific pooling in SyntheticEvent\r\n\r\n* Remove PooledClass from TopLevelCallbackBookKeeping\r\n\r\n* Update results.json\r\n\r\n* Add pooled event test fixtures (#1)\r\n\r\n* Fix fixture lint\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 36,
                    "deletions": 13,
                    "committedDate": "2017-06-16T22:14:09Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "00ba97a354e841701b4b83983c3a3904895e7b87",
                    "type": "Commit",
                    "message": "\"Use KeyboardEvent.char in the fallback logic if available (#9792)\n\nWhen a user types an emoji via Touch keyboard in IE, Reacts fallback logic\r\ncreates the `BeforeInput` event based on the `keypress`.  However, the length\r\nof an emoji character (e.g. `\\uD83D\\uDE0A`) is two, so the `which` property\r\ndoes not represent an emoji correctly.\r\n\r\nBecause IEs KeyboardEvent has the `char` property holding an entire emoji,\r\nwe can use it directly instead of converting from the `which`.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 119,
                    "deletions": 191,
                    "committedDate": "2017-04-25T16:24:10Z",
                    "changedFiles": 10,
                    "commentsCount": 0,
                    "id": "a9d0deb8e13e9f0b1ee7d2f28a6eec0e7ad2e41d",
                    "type": "Commit",
                    "message": "\"Consolidate events between EventConstants and BrowserEventEmitter (#9512)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 911,
                    "deletions": 813,
                    "committedDate": "2017-04-20T18:18:33Z",
                    "changedFiles": 168,
                    "commentsCount": 0,
                    "id": "b1768b5a48d1f82e4ef4150e0036c5f846d3758a",
                    "type": "Commit",
                    "message": "\"Prettier 1.2 (#9462)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 12794,
                    "deletions": 11435,
                    "committedDate": "2017-03-14T22:33:27Z",
                    "changedFiles": 328,
                    "commentsCount": 0,
                    "id": "b1b4a2fb252f26fe10d29ba60d85ff89a85ff3ec",
                    "type": "Commit",
                    "message": "\"Merge pull request #9101 from sebmarkbage/prettier\n\nUse Prettier\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 12714,
                    "deletions": 11413,
                    "committedDate": "2017-03-14T00:05:18Z",
                    "changedFiles": 325,
                    "commentsCount": 0,
                    "id": "1843f8716803d380df34a7362d80022352853931",
                    "type": "Commit",
                    "message": "\"Run prettier\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 2973,
                    "deletions": 1895,
                    "committedDate": "2017-03-01T12:32:36Z",
                    "changedFiles": 275,
                    "commentsCount": 0,
                    "id": "8bc11649df767402c262b6c9b67c6dd811d42cd0",
                    "type": "Commit",
                    "message": "\"Merge branch master into remove-stack-dependencies-from-tests\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 615,
                    "deletions": 478,
                    "committedDate": "2017-03-01T02:42:52Z",
                    "changedFiles": 247,
                    "commentsCount": 0,
                    "id": "e452e3374135c116ef687a8bb3a5d277e3cde8fb",
                    "type": "Commit",
                    "message": "\"providesModule -> explicit requires for cross-package dependencies (#9078)\n\n* Add forwarding modules\r\n\r\n* Codemod to use full package path outside of own package\r\n\r\nFiles that require modules from a different package than their own now\r\ndoes so by the npm path name instead of the providesModule.\r\n\r\n* Codemod fbjs module dependencies\r\n\r\n* Fix gulp module mapping config\r\n\r\nThis is a bit lame but because of our module rewrite we need to white\r\nlist all the paths that we dont *dont* want to rewrite.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 165,
                    "deletions": 126,
                    "committedDate": "2016-10-25T19:56:30Z",
                    "changedFiles": 125,
                    "commentsCount": 0,
                    "id": "e3131c1d55d6695c2f0966379535f88b813f912b",
                    "type": "Commit",
                    "message": "\"Merge pull request #8086 from sebmarkbage/fiberdom\n\n[Fiber] Reorganize files for DOM renderer to make overlap between fiber/stack clearer\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 1,
                    "committedDate": "2016-10-25T17:54:14Z",
                    "changedFiles": 116,
                    "commentsCount": 0,
                    "id": "a3fb0310ca6f7cad0707b5a9fd004c19e004186f",
                    "type": "Commit",
                    "message": "\"Reorganize files\n\nThis is just moving a bunch of DOM files.\n\nIt moves things into dom/stack and dom/fiber respectively. The\ndom/stack folder remains split into client/server.\n\nMainly the shared folder is now my best guess for files that\nwe can reuse in fiber. Everything else will get forked or\nreimplemented.\n\nAlso moved the event system out of renderers/shared/stack and\ninto renderers/shared/shared.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 214,
                    "deletions": 4,
                    "committedDate": "2016-09-13T18:15:18Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "a64ca9b697d0808a2966465fea2e658e4f310080",
                    "type": "Commit",
                    "message": "\"BeforeInput is fired with a wrong text at a wrong time on IE (#7107)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 180,
                    "deletions": 201,
                    "committedDate": "2016-08-30T18:03:05Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "f7076b7759c57b95da21ffca892ddbdcf3ffed02",
                    "type": "Commit",
                    "message": "\"Kill keyOf :) (#7615)\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 208,
                    "deletions": 253,
                    "committedDate": "2016-08-30T16:50:16Z",
                    "changedFiles": 16,
                    "commentsCount": 0,
                    "id": "2f9a9dc4c56c1caee250626c54c587c5f233fcab",
                    "type": "Commit",
                    "message": "\"Remove keyMirror in TopLevelTypes (#7597)\n\nThis is the last callsite of keyMirror! It removes 0.5k gzipped :)\r\n\r\nThe only trick with this one is that ReactTestUtils actually iterates over the list of all the events. Instead of duplicating the logic, I used the $Enum feature of flow that lets us statically extract out the type from the dynamic value. Inside of react-dom were no longer requiring the file directly so it doesnt bloat the file size, and we still get to have static typing, best of both worlds!\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1629,
                    "deletions": 982,
                    "committedDate": "2016-01-14T10:38:07Z",
                    "changedFiles": 322,
                    "commentsCount": 0,
                    "id": "209b7522d99a8af36f8d9e06ce622c59b793e5a3",
                    "type": "Commit",
                    "message": "\"update zh-docs14.3 ,fixed confliction\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 283,
                    "deletions": 283,
                    "committedDate": "2015-12-30T07:24:24Z",
                    "changedFiles": 283,
                    "commentsCount": 0,
                    "id": "3b96650e39ddda5ba49245713ef16dbc52d25e9e",
                    "type": "Commit",
                    "message": "\"Merge pull request #5748 from rickbeerendonk/year-agnostic-copyright\n\nYear-agnostic copyright message, like React Native uses, to prevent the need for yearly changes.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 283,
                    "deletions": 283,
                    "committedDate": "2015-12-29T19:20:32Z",
                    "changedFiles": 283,
                    "commentsCount": 0,
                    "id": "bef45b0b1a98ea9b472ba664d955a039cf2f8068",
                    "type": "Commit",
                    "message": "\"Year-agnostic copyright message, like React Native uses, to prevent the need for yearly changes.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 55,
                    "committedDate": "2015-12-10T19:30:40Z",
                    "changedFiles": 55,
                    "commentsCount": 0,
                    "id": "4f7a2766e4c29c2f25c0807ac21318c3963e6aec",
                    "type": "Commit",
                    "message": "\"Merge pull request #5640 from spicyj/no-typechecks\n\nRemove @typechecks\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 55,
                    "committedDate": "2015-12-10T19:26:45Z",
                    "changedFiles": 55,
                    "commentsCount": 0,
                    "id": "46f5251c66dcb0895743db02265c07320d0a6089",
                    "type": "Commit",
                    "message": "\"Remove @typechecks\n\nThese dont really do anything.\n\n```\ncodemod.py -d src --extensions js -m \\s* \\* @typechecks.*?\\n \\n\n```\n\nwith \"yes to all\".\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1808,
                    "deletions": 2291,
                    "committedDate": "2015-11-04T19:41:38Z",
                    "changedFiles": 68,
                    "commentsCount": 0,
                    "id": "35962a00084382b49d1f9e3bd36612925f360e5b",
                    "type": "Commit",
                    "message": "\"Merge pull request #5205 from spicyj/cotree-num\n\nUse incrementing numerical IDs to identify DOM components\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 522,
                    "deletions": 531,
                    "committedDate": "2015-11-04T19:39:43Z",
                    "changedFiles": 23,
                    "commentsCount": 0,
                    "id": "f470cb88f88b4667419f170fcc7971dad4298494",
                    "type": "Commit",
                    "message": "\"Events: Pass native instances up until propagation\n\nNext step: take advantage of having the native instances in EventPropagators instead of converting right back to IDs.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 46,
                    "deletions": 10,
                    "committedDate": "2015-07-09T22:03:37Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "7b1f03f4f8e6ac110565e62035a042cb9a5ca612",
                    "type": "Commit",
                    "message": "\"Merge pull request #4311 from jimfb/fix-input-events\n\nFix event target for input change events.  Fixes #4288\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 46,
                    "deletions": 10,
                    "committedDate": "2015-07-08T00:14:52Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "4b804e485db51b49716736ce2dfcf23d020b6eb2",
                    "type": "Commit",
                    "message": "\"Fix event target for input change events.  Fixes #4288\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1361,
                    "deletions": 1357,
                    "committedDate": "2015-06-03T00:02:39Z",
                    "changedFiles": 218,
                    "commentsCount": 0,
                    "id": "4c3e9650ba6c9ea90956a08542d9fa9b5d72ee88",
                    "type": "Commit",
                    "message": "\"Merge pull request #3998 from PiPeep/comma-dangle\n\nSwitch to using comma-dangle: always-multiline\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1336,
                    "deletions": 1328,
                    "committedDate": "2015-06-02T23:57:26Z",
                    "changedFiles": 214,
                    "commentsCount": 0,
                    "id": "c089eece509012a444dc770afb5b348b47c62d3a",
                    "type": "Commit",
                    "message": "\"Switch to using comma-dangle: always-multiline\n\nThis is a machine-generated codemod, but its pretty safe since it was\ngenerated by hooking into eslints own report.\n\nA few files had to be touched up by hand because there were existing\nformatting issues with nested arrays/objects:\n\nsrc/shared/utils/__tests__/OrderedMap-test.js\nsrc/shared/utils/__tests__/Transaction-test.js\nsrc/shared/utils/__tests__/traverseAllChildren-test.js\nsrc/isomorphic/children/__tests__/ReactChildren-test.js\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 138,
                    "deletions": 51,
                    "committedDate": "2015-05-16T01:39:36Z",
                    "changedFiles": 261,
                    "commentsCount": 0,
                    "id": "52752446760dee0bc7232b4146f5a309ac57f065",
                    "type": "Commit",
                    "message": "\"Merge pull request #3866 from sebmarkbage/coreapi\n\nReorganize Src Directory for Isomorphic React Package\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 138,
                    "deletions": 51,
                    "committedDate": "2015-05-16T01:35:22Z",
                    "changedFiles": 261,
                    "commentsCount": 0,
                    "id": "0b063f8a09dae4b6b1de400ff2d9aba9108647de",
                    "type": "Commit",
                    "message": "\"Reorganize Src Files for Isomorphic React Package\n\nThe new folder structure is organized around major packages that are expected to ship separately in some form.\n\n`/isomorphic`\n\nI moved classic/modern and children utils into a directory called \"isomorphic\" with the main export being ReactIsomorphic. This will eventually become the \"react\" package.\n\nThis includes all the dependencies that you might need to create a component without dependencies on the renderer/reconciler.\n\nThe rest moves into decoupled renderers.\n\n`/renderers/dom/client` - This is the main renderer for DOM.\n\n`/renderers/dom/server` - This is the server-side renderer for HTML strings.\n\n`/addons` and `/test` - Same as before for now.\n\nYoure not supposed to take on a dependency inside another package.\n\nShared code is organized into a \"shared\" directory which is intended to support all the packages in that subdirectory. Meaning that once we swap to CommonJS modules, the only time you should use `..` is to target `../shared/` or `../../shared`.\n\nE.g. `/shared/` is common utils that are used by everything.\n\n`/renderers/shared/` is code that is shared by all renderers, such as the main reconciliation algorithm.\n\nShared code will likely be copied into each package rather than referenced. This allow us to have separate state and allow inlining and deadcode elimination.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 29,
                    "deletions": 32,
                    "committedDate": "2015-02-09T22:32:28Z",
                    "changedFiles": 18,
                    "commentsCount": 0,
                    "id": "d59a039ebdebebf5c98ab96026529f66063979bf",
                    "type": "Commit",
                    "message": "\"Merge pull request #3097 from zpao/upgrade-eslint\n\nUpgrade to newer eslint, use esprima-fb\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 29,
                    "deletions": 32,
                    "committedDate": "2015-02-09T22:27:28Z",
                    "changedFiles": 18,
                    "commentsCount": 0,
                    "id": "dae1dc629272593f342fe22c6c795cb8fdf33d11",
                    "type": "Commit",
                    "message": "\"Upgrade to newer eslint, use esprima-fb\n\nEslint now allows us to use a different parser, which allows us to use\nesprima-fb explicitly. This means we dont have to wait for espree to add\nthings like rest-param parsing. Though we do need eslint to upgrade its rules\nto handle that AST.\n\nI had hoped to enable parsing of our tests but we cant do that until we\nchange esprima-fbs XJS nodes to JSX.\n\nWhile I was here, I also enabled the no-unused-vars rule since eslint\nunderstands template strings. I also made the single quote enforcement\nactually fail instead of just warn.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 283,
                    "deletions": 283,
                    "committedDate": "2015-02-02T19:15:30Z",
                    "changedFiles": 283,
                    "commentsCount": 0,
                    "id": "2aeb8a2a6beb00617a4217f7f8284924fa2ad819",
                    "type": "Commit",
                    "message": "\"Merge pull request #2995 from rickbeerendonk/copyright-2015\n\nUpdate copyright headers for 2015\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 283,
                    "deletions": 283,
                    "committedDate": "2015-01-31T19:18:25Z",
                    "changedFiles": 283,
                    "commentsCount": 0,
                    "id": "3e0750a4ad2444c2df708b144ff0c8af7628881d",
                    "type": "Commit",
                    "message": "\"Update copyright headers for 2015\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 361,
                    "deletions": 315,
                    "committedDate": "2015-01-13T23:27:54Z",
                    "changedFiles": 227,
                    "commentsCount": 0,
                    "id": "54c82da15f6b4717425edbf68e23ae82583a50af",
                    "type": "Commit",
                    "message": "\"Merge pull request #2751 from zpao/eslint-fixup\n\nEslint fixup\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 23,
                    "deletions": 15,
                    "committedDate": "2015-01-13T23:26:33Z",
                    "changedFiles": 10,
                    "commentsCount": 0,
                    "id": "47ee780cafa650a61bd62c4a6c13ac5554efd05c",
                    "type": "Commit",
                    "message": "\"[lint] fix consistent-returns\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 78,
                    "deletions": 51,
                    "committedDate": "2015-01-13T23:26:33Z",
                    "changedFiles": 30,
                    "commentsCount": 0,
                    "id": "e27da9973193a06a138d7098c58723a7f10ed2e5",
                    "type": "Commit",
                    "message": "\"[lint] Fix majority of issues eslint found\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 228,
                    "deletions": 228,
                    "committedDate": "2015-01-13T23:26:32Z",
                    "changedFiles": 227,
                    "commentsCount": 0,
                    "id": "df64a67b7f930f90423e194637af624cdc155526",
                    "type": "Commit",
                    "message": "\"codemod \"use strict\" to use strict for better linting\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 568,
                    "deletions": 371,
                    "committedDate": "2014-12-12T01:08:26Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "80ed4d870a628af57dfc6e45bf6d513084f677d7",
                    "type": "Commit",
                    "message": "\"Merge pull request #2690 from salier/before-input\n\nCombine BeforeInput and Composition event plugins\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2014-12-10T16:36:39Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "9ad0e1d846a4fe51f2397333d1df3e0b72d28067",
                    "type": "Commit",
                    "message": "\"Update BeforeInputEventPlugin.js\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 569,
                    "deletions": 372,
                    "committedDate": "2014-12-10T16:32:53Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "ddaf215b03cee506c907474578c950367b344062",
                    "type": "Commit",
                    "message": "\"Combine BeforeInput and Composition event plugins\n\nIn order to improve support for Chinese and Japanese IME input in\nInternet Explorer, use a fallback composition state to determine\ninserted text. IE composition events are mostly okay, except for\ncertain punctuation characters that are ignored. Using the fallback, we\ncan detect these characters.\n\nThe fallback is also useful for emitting `beforeInput` events, so it\nmakes sense to simply combine these plugins.\n\nThis change also incorporates a recent change to the Google Input Tools\nbrowser extension that exposes a `data` field via the `detail` object\non the custom composition events it emits.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 6666,
                    "deletions": 6599,
                    "committedDate": "2014-11-05T14:30:37Z",
                    "changedFiles": 392,
                    "commentsCount": 0,
                    "id": "b5bcaba77fbe53cafd7c5f6b76752b09791caadf",
                    "type": "Commit",
                    "message": "\"Merge branch master into docs-namespace-in-jsx\n\n* master: (113 commits)\n  Remove esprima-fb and use Syntax from jstransform\n  Update React.renderToString argument type in docs\n  [traverseAllChildren] fix out-of-scope var use.\n  Use double quote for transformed `displayName` and `data-*`\n  Remove unrelated comment\n  Fix typo in If/Else JSX doc.\n  Cleanup a couple unused variables\n  Use dump cache and remove factory from ReactElement-test\n  Update deprecated propTypes\n  Bring in jsfiddle integration script, add harmony\n  Extending period in which click events are ignored\n  React.renderComponent --> React.render\n  Followup fix for React.PropTypes.node\n  Add comma for readability in tutorial\n  Drop internal uses of .type on the class\n  Drop Legacy Factories Around Classes\n  Drop ReactDOM from internal DOM extensions\n  Added comma to increase readability.\n  Add 0.12 starter kit\n  Change the date and the link url to match the proper roundup\n  ...\n\nConflicts:\n\tdocs/docs/02.1-jsx-in-depth.md\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1374,
                    "deletions": 3374,
                    "committedDate": "2014-10-10T23:58:45Z",
                    "changedFiles": 271,
                    "commentsCount": 0,
                    "id": "5d3b12bb3bd6a092cf00ede07b8255a8399c2e58",
                    "type": "Commit",
                    "message": "\"Merge pull request #2312 from zpao/license-update\n\nUpdate Licenses\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 1374,
                    "deletions": 3374,
                    "committedDate": "2014-10-10T20:34:07Z",
                    "changedFiles": 271,
                    "commentsCount": 0,
                    "id": "dcf415c2b91ce52fd5d4dd02b70875ba9d33290f",
                    "type": "Commit",
                    "message": "\"BSD + PATENTS\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 8,
                    "deletions": 3,
                    "committedDate": "2014-08-06T23:41:56Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "f71455fb319d1daf5a04cc03357fcd185d9f72ec",
                    "type": "Commit",
                    "message": "\"Fire onBeforeUpdate for space on Android\n\nWe deliberately skip the event, but Android Chrome\ndoesnt fire the keypress, so this is wrong.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 848,
                    "deletions": 844,
                    "committedDate": "2014-03-30T19:53:26Z",
                    "changedFiles": 36,
                    "commentsCount": 0,
                    "id": "468007612f4a6dabb228618d9a3274f067fc2c51",
                    "type": "Commit",
                    "message": "\"Merge branch master of github.com:facebook/react\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 14,
                    "deletions": 1,
                    "committedDate": "2014-03-28T19:33:10Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "807e3dc42375fbc15c41c847a38acfd518fba7a1",
                    "type": "Commit",
                    "message": "\"BeforeInputEventPlugin: Support Opera <= 12\n\nAdd support for Opera <= 12 (Presto) in `BeforeInputEventPlugin`.\n\nIt turns out that Opera 12 has a `TextEvent` in `window`, but doesnt actually fire any input events. Even `input` apparently doesnt fire. Fall back to keypress handling in this case.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 45,
                    "deletions": 7,
                    "committedDate": "2014-03-25T20:05:44Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "5476f9168beadda74506d37fd779e7e4bca0bc1c",
                    "type": "Commit",
                    "message": "\"Repair spacebar textInput\n\nBrowsers that natively support the `textInput` event appear to have a bug: when preventing default behavior for a `textInput` event occurring for a spacebar keypress, the character is prevented from being inserted **but the browser scrolls down**.\n\nMinimal repro example: http://jsfiddle.net/salier/bX4fw/\n\nThis is ridiculous, since scrolling makes no sense when the user is focused in a textinput or contenteditable. Preventing default at the `textInput` stage should mean to prevent the character from being inserted, and should have no impact at all on scrolling behavior. I have filed this as a Chromium bug (https://code.google.com/p/chromium/issues/detail?id=355103) but Im not going to hold out much hope that theyll fix it.\n\nTo resolve this, Im special-casing the spacebar character at the plugin level, in `BeforeInputEventPlugin`. I looked for ways to do this at the component level, but it seems to me that this is simply a browser bug and its cleaner to handle it there.\n\nIn browsers that can use the native `textInput` event, Im checking the code of the pressed key. If its the spacebar, we dispatch the synthetic event as if there were no native `textInput` event -- as if we were running Firefox. Then, if the synthetic event is not canceled and we make it through to the native `textInput` event, bail if the character data is a space character.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            },
            {
                "c": {
                    "additions": 234,
                    "deletions": 2,
                    "committedDate": "2014-03-25T20:05:44Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "116ee058ebd76071a8aefcd95254f772ec18605f",
                    "type": "Commit",
                    "message": "\"TextInputEventPlugin, SyntheticTextInputEvent\n\nThis diff introduces `TextInputEventPlugin` and `SyntheticTextInputEvent`, which are based on Webkits native `textInput` event.\n\nIn Chrome, Safari, and Opera, the `textInput` event fires prior to the insertion of character data into the document. For normal typing, for example, thevent sequence is: `keydown`, `keypress`, `textInput`, `input`, `keyup`. The `textInput` event contains a `data` field corresponding to the character data that will actually be inserted.\n\nThere is also a `beforeinput` event described by http://www.w3.org/TR/DOM-Level-3-Events/#event-type-beforeinput, and this is essentially that event, so it may make sense to rename the plugin.\n\nThis event is especially useful because it solves a number of issues we cant currently handle with only keypress and composition events:\n\n  - **Windows Chrome: Trailing characters discarded in Korean IME.** For instance, `\uc548\ub155\ud558\uc138\uc694` becomes `\uc548\ub155\ud558\uc138` with the final character discarded by the final `compositionend` event. The `textInput` event fires correctly with the final character.\n  - **Windows Chrome: Special characters discarded in IME.** Certain ideographs are discarded in IME mode. In Japanese, typing the ideographic space character is not represented by keypress but //is// represented by the subsequent `textInput`. This issue also applies to punctuation characters in Chinese.\n  - **OSX Chrome: Characters from palette discarded.** Inserting characters from the OSX character palette fails, since no keypress is fired.\n\nThe plugin is useful for Firefox and IE. For these, we record inserted characters via keypress and compositionend events and dispatch the synthetic event with these characters as the `data` field to match the native `textInput` event.\n\n  - Firefox has no corresponding `textInput` event and has not yet implemented `beforeinput`.\n  - IE has a native `textinput` event, but it fires after the DOM mutation has already occurred, so it isnt very useful as an analog to the Webkit version. Im just not going to bother with it.\""
                },
                "f": {
                    "path": "src/browser/eventPlugins/BeforeInputEventPlugin.js",
                    "name": "BeforeInputEventPlugin.js",
                    "id": "BeforeInputEventPlugin.js",
                    "type": "File"
                }
            }
        ]
    },
    {
        "question": "give me all the commits for React.js file?",
        "number": 6,
        "category": 2,
        "query": "MATCH (f:File {name: \"React.js\"})<-[:changed]-(c:Commit)\nRETURN c",
        "result": [
            {
                "c": {
                    "additions": 283,
                    "deletions": 285,
                    "committedDate": "2023-11-02T20:13:21Z",
                    "changedFiles": 24,
                    "commentsCount": 0,
                    "id": "ce2bc58a9f6f3b0bfc8c738a0d8e2a5f3a332ff5",
                    "type": "Commit",
                    "message": "\"[activity] rename unstable_Offscreen to unstable_Activity (#27640)\n\n`Activity` is the current candidate name. This PR starts the rename work\r\nby renaming the exported unstable component name.\r\n\r\nNOTE: downstream consumers need to rename the import when updating to\r\nthis commit.\""
                }
            },
            {
                "c": {
                    "additions": 40,
                    "deletions": 39,
                    "committedDate": "2023-10-04T18:51:36Z",
                    "changedFiles": 28,
                    "commentsCount": 0,
                    "id": "bfefb228422f7264a29b3a6b98ec95e05925e80e",
                    "type": "Commit",
                    "message": "\"Upgrade Server Actions to canary (#27459)\n\nUpgrades the stability of Server Actions from experimental to canary.\r\n\r\n- Turns on enableAsyncActions and enableFormActions\r\n- Removes \"experimental_\" prefix from useOptimistic, useFormStatus, and\r\nuseFormState\""
                }
            },
            {
                "c": {
                    "additions": 245,
                    "deletions": 1258,
                    "committedDate": "2023-09-29T22:24:05Z",
                    "changedFiles": 30,
                    "commentsCount": 0,
                    "id": "c7ba8c098889b6dc47fa9c807bbba3975a658584",
                    "type": "Commit",
                    "message": "\"Enforce that the \"react-server\" build of \"react\" is used (#27436)\n\nI do this by simply renaming the secret export name in the \"subset\"\r\nbundle and this renamed version is what the FlightServer uses.\r\n\r\nThis requires us to be more diligent about always using the correct\r\ninstance of \"react\" in our tests so theres a bunch of clean up for\r\nthat.\""
                }
            },
            {
                "c": {
                    "additions": 662,
                    "deletions": 231,
                    "committedDate": "2023-08-17T17:26:14Z",
                    "changedFiles": 34,
                    "commentsCount": 0,
                    "id": "ac1a16c67e268fcb2c52e91717cbc918c7c24446",
                    "type": "Commit",
                    "message": "\"Add Postpone API (#27238)\n\nThis adds an experimental `unstable_postpone(reason)` API.\r\n\r\nCurrently we dont have a way to model effectively an Infinite Promise.\r\nI.e. something that suspends but never resolves. The reason this is\r\nuseful is because you might have something else that unblocks it later.\r\nE.g. by updating in place later, or by client rendering.\r\n\r\nOn the client this works to model as an Infinite Promise (in fact,\r\nthats what this implementation does). However, in Fizz and Flight that\r\ndoesnt work because the stream needs to end at some point. We dont\r\nhave any way of knowing that were suspended on infinite promises. Its\r\nnot enough to tag the promises because you could await those and thus\r\ncreating new promises. The only way we really have to signal this\r\nthrough a series of indirections like async functions, is by throwing.\r\nIts not 100% safe because these values can be caught but its the best\r\nwe can do.\r\n\r\nEffectively `postpone(reason)` behaves like a built-in [Catch\r\nBoundary](https://github.com/facebook/react/pull/26854). Its like\r\n`raise(Postpone, reason)` except its built-in so it needs to be able to\r\nbe encoded and caught by Suspense boundaries.\r\n\r\nIn Flight and Fizz these behave pretty much the same as errors. Flight\r\njust forwards it to retrigger on the client. In Fizz they just trigger\r\nclient rendering which itself might just postpone again or fill in the\r\nvalue. The difference is how they get logged.\r\n\r\nIn Flight and Fizz they log to `onPostpone(reason)` instead of\r\n`onError(error)`. This log is meant to help find deopts on the server\r\nlike finding places where you fall back to client rendering. The reason\r\nthat you pass in is for that purpose to help the reason for any deopts.\r\n\r\nI do track the stack trace in DEV but I dont currently expose it to\r\n`onPostpone`. This seems like a limitation. It might be better to expose\r\nthe Postpone object which is an Error object but thats more of an\r\nimplementation detail. I could also pass it as a second argument.\r\n\r\nOn the client after hydration they dont get passed to\r\n`onRecoverableError`. Theres no global `onPostpone` API to capture\r\npostponed things on the client just like theres no `onError`. At that\r\npoint its just assumed to be intentional. It doesnt have any `digest`\r\nor reason passed to the client since its not logged.\r\n\r\nThere are some hacky solutions that currently just tries to reuse as\r\nmuch of the existing code as possible but should be more properly\r\nimplemented.\r\n- Fiber is currently just converting it to a fake Promise object so that\r\nit behaves like an infinite Promise.\r\n- Fizz is encoding the magic digest string `\"POSTPONE\"` in the HTML so\r\nwe know to ignore it but it should probably just be something neater\r\nthat doesnt share namespace with digests.\r\n\r\nNext I plan on using this in the `/static` entry points for additional\r\nfeatures.\r\n\r\nWhy \"postpone\"? Its basically a synonym to \"defer\" but we plan on using\r\n\"defer\" for other purposes and its overloaded anyway.\""
                }
            },
            {
                "c": {
                    "additions": 24,
                    "deletions": 21,
                    "committedDate": "2023-07-06T18:09:53Z",
                    "changedFiles": 18,
                    "commentsCount": 0,
                    "id": "eb2c2f7c2cf2652a168c2b433d2989131c69754b",
                    "type": "Commit",
                    "message": "\"rename SuspenseList export to unstable_SuspenseList (#27061)\n\n## Summary\r\n\r\nas we began [discussing\r\nyesterday](https://github.com/facebook/react/pull/27056#discussion_r1253282784),\r\n`SuspenseList` is not actually stable yet, and should likely be exported\r\nwith the `unstable_` prefix.\r\n\r\nthe conversation yesterday began discussing this in the context of the\r\nfb-specific packages, but changing it there without updating everywhere\r\nelse leads to test failures, so here the change is made across packages.\r\n\r\n## How did you test this change?\r\n\r\n```\r\nyarn flow dom-browser\r\nyarn test\r\n```\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 3023,
                    "committedDate": "2023-06-27T16:45:46Z",
                    "changedFiles": 30,
                    "commentsCount": 0,
                    "id": "80d9a40114bb43c07d021e8254790852f450bd2b",
                    "type": "Commit",
                    "message": "\"Remove useMutableSource (#27011)\n\n## Summary\r\n\r\nThis PR cleans up `useMutableSource`. This has been blocked by a\r\nremaining dependency internally at Meta, but that has now been deleted.\r\n\r\n<!--\r\nExplain the **motivation** for making this change. What existing problem\r\ndoes the pull request solve?\r\n-->\r\n\r\n## How did you test this change?\r\n\r\n```\r\nyarn flow\r\nyarn lint\r\nyarn test --prod\r\n```\r\n\r\n<!--\r\nDemonstrate the code is solid. Example: The exact commands you ran and\r\ntheir output, screenshots / videos if the pull request changes the user\r\ninterface.\r\nHow exactly did you verify that your PR solves the issue you wanted to\r\nsolve?\r\n  If you leave this empty, your PR will very likely be closed.\r\n-->\""
                }
            },
            {
                "c": {
                    "additions": 65,
                    "deletions": 69,
                    "committedDate": "2023-05-03T18:26:00Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "b7972822b5887d05ae772ef757a453265b4b7aec",
                    "type": "Commit",
                    "message": "\"useOptimisticState -> useOptimistic (#26772)\n\nDrop the \"state\". Just \"useOptimistic\". Its cleaner.\r\n\r\nThis is still an experimental API. May not be the final name.\""
                }
            },
            {
                "c": {
                    "additions": 846,
                    "deletions": 66,
                    "committedDate": "2023-05-01T17:19:20Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "491aec5d6113ce5bae7c10966bc38a4a8fc091a8",
                    "type": "Commit",
                    "message": "\"Implement experimental_useOptimisticState (#26740)\n\nThis adds an experimental hook tentatively called useOptimisticState.\r\n(The actual name needs some bikeshedding.)\r\n\r\nThe headline feature is that you can use it to implement optimistic\r\nupdates. If you set some optimistic state during a transition/action,\r\nthe state will be automatically reverted once the transition completes.\r\n\r\nAnother feature is that the optimistic updates will be continually\r\nrebased on top of the latest state.\r\n\r\nIts easiest to explain with examples; well publish documentation as\r\nthe API gets closer to stabilizing. See tests for now.\r\n\r\nTechnically the use cases for this hook are broader than just optimistic\r\nupdates; you could use it implement any sort of \"pending\" state, such as\r\nthe ones exposed by useTransition and useFormStatus. But we expect\r\npeople will most often reach for this hook to implement the optimistic\r\nupdate pattern; simpler cases are covered by those other hooks.\""
                }
            },
            {
                "c": {
                    "additions": 176,
                    "deletions": 171,
                    "committedDate": "2022-12-14T20:08:29Z",
                    "changedFiles": 26,
                    "commentsCount": 0,
                    "id": "84a0a171ea0ecd25e287bd3d3dd30e932beb4677",
                    "type": "Commit",
                    "message": "\"Rename experimental useEvent to useEffectEvent (#25881)\n\nWe originally had grand plans for using this Event concept for more but\r\nnow its only meant to be used in combination with effects.\r\n\r\nIts an Event in the FRP terms, that is triggered from an Effect.\r\nTechnically it can also be from another function that itself is\r\ntriggered from an existing side-effect but thats kind of an advanced\r\ncase.\r\n\r\nThe canonical case is an effect that triggers an event:\r\n\r\n```js\r\nconst onHappened = useEffectEvent(() => ...);\r\nuseEffect(() => {\r\n  onHappened();\r\n}, []);\r\n```\""
                }
            },
            {
                "c": {
                    "additions": 325,
                    "deletions": 279,
                    "committedDate": "2022-10-24T03:20:52Z",
                    "changedFiles": 51,
                    "commentsCount": 0,
                    "id": "e7c5af45ceb8fa2b64d39ec68345254ce9abd65e",
                    "type": "Commit",
                    "message": "\"Update cache() and use() to the canary aka next channel (#25502)\n\nTesting what it would look like to move this to the `next` channel.\""
                }
            },
            {
                "c": {
                    "additions": 6,
                    "deletions": 3,
                    "committedDate": "2022-10-23T02:58:30Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "caa84c8da0aed390ec25783e577d91711dfd6bcc",
                    "type": "Commit",
                    "message": "\"Revert fetch instrumentation to only RSC (#25540)\n\nRevert fetch instrumentation so that it only affects RSC by applying it\r\nonly in the react-server condition of \"react\".\r\n\r\nThis helps make the rollout a little smoother because these affects\r\nexisting libraries that fetch during client components, and then gets\r\nforever cached. We need to implement the GC first.\r\n\r\nI havent fully implemented the SSR part anyway.\r\n\r\nThe main problem that we discovered is that `\"react\"` and\r\n`\"react/react.shared-subset\"` have separate dispatchers in an\r\nenvironment that runs both Fizz and Flight. Thats intentional and\r\nsometimes a feature. However, in this case it means that we instrument\r\nfetch twice and when you run Flight inside Fizz, that fetch goes into\r\nboth caches when its supposed to only see the inner one. Im not sure\r\nhow to solve that atm.\""
                }
            },
            {
                "c": {
                    "additions": 335,
                    "deletions": 1,
                    "committedDate": "2022-10-19T22:37:00Z",
                    "changedFiles": 19,
                    "commentsCount": 0,
                    "id": "65e32e58b6057db1fdfed95a942fad4fc96da191",
                    "type": "Commit",
                    "message": "\"Add fetch Instrumentation to Dedupe Fetches (#25516)\n\n* Add fetch instrumentation in cached contexts\r\n\r\n* Avoid unhandled rejection errors for Promises that we intentionally ignore\r\n\r\nIn the final passes, we ignore the newly generated Promises and use\r\nthe previous ones. This ensures that if those generate errors, that we\r\nintentionally ignore those.\r\n\r\n* Add extra fetch properties if there were any\""
                }
            },
            {
                "c": {
                    "additions": 356,
                    "deletions": 60,
                    "committedDate": "2022-10-18T20:55:06Z",
                    "changedFiles": 8,
                    "commentsCount": 0,
                    "id": "8e2bde6f2751aa6335f3cef488c05c3ea08e074a",
                    "type": "Commit",
                    "message": "\"Add cache() API (#25506)\n\nLike memo() but longer lived.\""
                }
            },
            {
                "c": {
                    "additions": 133,
                    "deletions": 107,
                    "committedDate": "2022-10-04T01:59:33Z",
                    "changedFiles": 33,
                    "commentsCount": 0,
                    "id": "0a3072278ee5fb46ddb58e6f5ba9e2b78f6f715a",
                    "type": "Commit",
                    "message": "\"Flow: complete types first migration (#25389)\n\nThis complete the \"types first\" migration and enables the config everywhere.\""
                }
            },
            {
                "c": {
                    "additions": 1027,
                    "deletions": 38,
                    "committedDate": "2022-09-14T18:39:06Z",
                    "changedFiles": 26,
                    "commentsCount": 0,
                    "id": "c91a1e03be54733a7dbfcb5663d7a9e8606ab1c1",
                    "type": "Commit",
                    "message": "\"experimental_useEvent (#25229)\n\nThis commit adds a new hook `useEvent` per the RFC [here](https://github.com/reactjs/rfcs/pull/220), gated as experimental. \r\n\r\nCo-authored-by: Rick Hanlon <rickhanlonii@gmail.com>\r\nCo-authored-by: Rick Hanlon <rickhanlonii@fb.com>\r\nCo-authored-by: Lauren Tan <poteto@users.noreply.github.com>\""
                }
            },
            {
                "c": {
                    "additions": 1398,
                    "deletions": 439,
                    "committedDate": "2022-08-25T18:12:07Z",
                    "changedFiles": 33,
                    "commentsCount": 0,
                    "id": "b6978bc38f6788c7e73982b9fd2771aabdf36f15",
                    "type": "Commit",
                    "message": "\"experimental_use(promise) (#25084)\n\n* Internal `act`: Unwrapping resolved promises\r\n\r\nThis update our internal implementation of `act` to support Reacts new\r\nbehavior for unwrapping promises. Like we did with Scheduler, when \r\nsomething suspends, it will yield to the main thread so the microtasks\r\ncan run, then continue in a new task.\r\n\r\nI need to implement the same behavior in the public version of `act`,\r\nbut there are some additional considerations so Ill do that in a\r\nseparate commit.\r\n\r\n* Move throwException to after work loop resumes\r\n\r\nthrowException is the function that finds the nearest boundary and\r\nschedules it for a second render pass. We should only call it right \r\nbefore we unwind the stack \u2014 not if we receive an immediate ping and\r\nrender the fiber again.\r\n\r\nThis was an oversight in 8ef3a7c that I didnt notice because it happens\r\nto mostly work, anyway. What made me notice the mistake is that\r\nthrowException also marks the entire render phase as suspended\r\n(RootDidSuspend or RootDidSuspendWithDelay), which is only supposed to\r\nbe happen if we show a fallback. One consequence was that, in the \r\nRootDidSuspendWithDelay case, the entire commit phase was blocked,\r\nbecause thats the exit status we use to block a bad fallback\r\nfrom appearing.\r\n\r\n* Use expando to check whether promise has resolved\r\n\r\nAdd a `status` expando to a thrown thenable to track when its value has\r\nresolved.\r\n\r\nIn a later step, well also use `value` and `reason` expandos to track\r\nthe resolved value.\r\n\r\nThis is not part of the official JavaScript spec \u2014 think of\r\nit as an extension of the Promise API, or a custom interface that is a\r\nsuperset of Thenable. However, its inspired by the terminology used\r\nby `Promise.allSettled`.\r\n\r\nThe intent is that this will be a public API \u2014 Suspense implementations\r\ncan set these expandos to allow React to unwrap the value synchronously\r\nwithout waiting a microtask.\r\n\r\n* Scaffolding for `experimental_use` hook\r\n\r\nSets up a new experimental hook behind a feature flag, but does not\r\nimplement it yet.\r\n\r\n* use(promise)\r\n\r\nAdds experimental support to Fiber for unwrapping the value of a promise\r\ninside a component. It is not yet implemented for Server Components, \r\nbut that is planned.\r\n\r\nIf promise has already resolved, the value can be unwrapped\r\n\"immediately\" without showing a fallback. The trick we use to implement\r\nthis is to yield to the main thread (literally suspending the work\r\nloop), wait for the microtask queue to drain, then check if the promise\r\nresolved in the meantime. If so, we can resume the last attempted fiber\r\nwithout unwinding the stack. This functionality was implemented in \r\nprevious commits.\r\n\r\nAnother feature is that the promises do not need to be cached between\r\nattempts. Because we assume idempotent execution of components, React\r\nwill track the promises that were used during the previous attempt and\r\nreuse the result. You shouldnt rely on this property, but during\r\ninitial render it mostly just works. Updates are trickier, though,\r\nbecause if you used an uncached promise, we have no way of knowing \r\nwhether the underlying data has changed, so we have to unwrap the\r\npromise every time. It will still work, but its inefficient and can\r\nlead to unnecessary fallbacks if it happens during a discrete update.\r\n\r\nWhen we implement this for Server Components, this will be less of an\r\nissue because there are no updates in that environment. However, its\r\nstill better for performance to cache data requests, so the same\r\nprinciples largely apply.\r\n\r\nThe intention is that this will eventually be the only supported way to\r\nsuspend on arbitrary promises. Throwing a promise directly will\r\nbe deprecated.\""
                }
            },
            {
                "c": {
                    "additions": 143,
                    "deletions": 1,
                    "committedDate": "2022-08-23T08:36:02Z",
                    "changedFiles": 21,
                    "commentsCount": 0,
                    "id": "9e67e7a31582079263665fac0391220b99d8bb86",
                    "type": "Commit",
                    "message": "\"Scaffolding for useMemoCache hook (#25123)\n\n* Scaffolding for useMemoCache hook\r\n* cleanup leftovers from copy/paste of use() diff\r\n\r\nCo-authored-by: Andrew Clark <git@andrewclark.io>\""
                }
            },
            {
                "c": {
                    "additions": 1242,
                    "deletions": 90,
                    "committedDate": "2022-03-08T12:55:32Z",
                    "changedFiles": 53,
                    "commentsCount": 0,
                    "id": "d5f1b067c8bbb826b823d0354a28ba31078b70c0",
                    "type": "Commit",
                    "message": "\"[ServerContext] Flight support for ServerContext (#23244)\n\n* Flight side of server context\r\n\r\n* 1 more test\r\n\r\n* rm unused function\r\n\r\n* flow+prettier\r\n\r\n* flow again =)\r\n\r\n* duplicate ReactServerContext across packages\r\n\r\n* store default value when lazily initializing server context\r\n\r\n* .\r\n\r\n* better comment\r\n\r\n* derp... missing import\r\n\r\n* rm optional chaining\r\n\r\n* missed feature flag\r\n\r\n* React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED ??\r\n\r\n* add warning if non ServerContext passed into useServerContext\r\n\r\n* pass context in as array of arrays\r\n\r\n* make importServerContext nott pollute the global context state\r\n\r\n* merge main\r\n\r\n* remove useServerContext\r\n\r\n* dont rely on object getters in ReactServerContext and disallow JSX\r\n\r\n* add symbols to devtools + rename globalServerContextRegistry to just ContextRegistry\r\n\r\n* gate test case as experimental\r\n\r\n* feedback\r\n\r\n* remove unions\r\n\r\n* Lint\r\n\r\n* fix oopsies (tests/lint/mismatching arguments/signatures\r\n\r\n* lint again\r\n\r\n* replace-fork\r\n\r\n* remove extraneous change\r\n\r\n* rebase\r\n\r\n* 1 more test\r\n\r\n* rm unused function\r\n\r\n* flow+prettier\r\n\r\n* flow again =)\r\n\r\n* duplicate ReactServerContext across packages\r\n\r\n* store default value when lazily initializing server context\r\n\r\n* .\r\n\r\n* better comment\r\n\r\n* derp... missing import\r\n\r\n* rm optional chaining\r\n\r\n* missed feature flag\r\n\r\n* React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED ??\r\n\r\n* add warning if non ServerContext passed into useServerContext\r\n\r\n* pass context in as array of arrays\r\n\r\n* make importServerContext nott pollute the global context state\r\n\r\n* merge main\r\n\r\n* remove useServerContext\r\n\r\n* dont rely on object getters in ReactServerContext and disallow JSX\r\n\r\n* add symbols to devtools + rename globalServerContextRegistry to just ContextRegistry\r\n\r\n* gate test case as experimental\r\n\r\n* feedback\r\n\r\n* remove unions\r\n\r\n* Lint\r\n\r\n* fix oopsies (tests/lint/mismatching arguments/signatures\r\n\r\n* lint again\r\n\r\n* replace-fork\r\n\r\n* remove extraneous change\r\n\r\n* rebase\r\n\r\n* reinline\r\n\r\n* rebase\r\n\r\n* add back changes lost due to rebase being hard\r\n\r\n* emit chunk for provider\r\n\r\n* remove case for React provider type\r\n\r\n* update type for SomeChunk\r\n\r\n* enable flag with experimental\r\n\r\n* add missing types\r\n\r\n* fix flow type\r\n\r\n* missing type\r\n\r\n* t: any\r\n\r\n* revert extraneous type change\r\n\r\n* better type\r\n\r\n* better type\r\n\r\n* feedback\r\n\r\n* change import to type import\r\n\r\n* test?\r\n\r\n* test?\r\n\r\n* remove react-dom\r\n\r\n* remove react-native-renderer from react-server-native-relay/package.json\r\n\r\n* gate change in FiberNewContext, getComponentNameFromType, use switch statement in FlightServer\r\n\r\n* getComponentNameFromTpe: server context type gated and use displayName if available\r\n\r\n* fallthrough\r\n\r\n* lint....\r\n\r\n* POP\r\n\r\n* lint\""
                }
            },
            {
                "c": {
                    "additions": 139,
                    "deletions": 6,
                    "committedDate": "2022-02-11T16:42:55Z",
                    "changedFiles": 15,
                    "commentsCount": 0,
                    "id": "a6987bee730052dccdddd4645e15b1ce458fd9a6",
                    "type": "Commit",
                    "message": "\"add <TracingMarker> component boilerplate (#23275)\n\n- Add Tracing Marker component type to React exports\r\n- Add reconciler work tag\r\n- Add devtools work tag\r\n- Add boilerplate for the cache to render children\r\n\r\nNo functionality yet\""
                }
            },
            {
                "c": {
                    "additions": 9,
                    "deletions": 9,
                    "committedDate": "2021-11-01T22:26:42Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "5cccacd131242bdea2c2fe4b33fac50d2e3132b4",
                    "type": "Commit",
                    "message": "\"Upgrade useId to alpha channel (#22674)\""
                }
            },
            {
                "c": {
                    "additions": 22,
                    "deletions": 1790,
                    "committedDate": "2021-11-01T22:02:39Z",
                    "changedFiles": 39,
                    "commentsCount": 0,
                    "id": "75f3ddebfa0d9885ce8df42571cf0c09ad6c0a3b",
                    "type": "Commit",
                    "message": "\"Remove experimental useOpaqueIdentifier API (#22672)\n\nuseId is the updated version of this API.\""
                }
            },
            {
                "c": {
                    "additions": 1819,
                    "deletions": 77,
                    "committedDate": "2021-11-01T20:30:44Z",
                    "changedFiles": 38,
                    "commentsCount": 0,
                    "id": "ebf9ae8579230e7b1ed0b1d243e1cf802f56938b",
                    "type": "Commit",
                    "message": "\"useId (#22644)\n\n* Add useId to dispatcher\r\n\r\n* Initial useId implementation\r\n\r\nIds are base 32 strings whose binary representation corresponds to the\r\nposition of a node in a tree.\r\n\r\nEvery time the tree forks into multiple children, we add additional bits\r\nto the left of the sequence that represent the position of the child\r\nwithin the current level of children.\r\n\r\n    00101       00010001011010101\r\n    \u2570\u2500\u252c\u2500\u256f       \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\n  Fork 5 of 20       Parent id\r\n\r\nThe leading 0s are important. In the above example, you only need 3 bits\r\nto represent slot 5. However, you need 5 bits to represent all the forks\r\nat the current level, so we must account for the empty bits at the end.\r\n\r\nFor this same reason, slots are 1-indexed instead of 0-indexed.\r\nOtherwise, the zeroth id at a level would be indistinguishable from\r\nits parent.\r\n\r\nIf a node has only one child, and does not materialize an id (i.e. does\r\nnot contain a useId hook), then we dont need to allocate any space in\r\nthe sequence. Its treated as a transparent indirection. For example,\r\nthese two trees produce the same ids:\r\n\r\n<>                          <>\r\n  <Indirection>               <A />\r\n    <A />                     <B />\r\n  </Indirection>            </>\r\n  <B />\r\n</>\r\n\r\nHowever, we cannot skip any materializes an id. Otherwise, a parent id\r\nthat does not fork would be indistinguishable from its child id. For\r\nexample, this tree does not fork, but the parent and child must have\r\ndifferent ids.\r\n\r\n<Parent>\r\n  <Child />\r\n</Parent>\r\n\r\nTo handle this scenario, every time we materialize an id, we allocate a\r\nnew level with a single slot. You can think of this as a fork with only\r\none prong, or an array of children with length 1.\r\n\r\nIts possible for the the size of the sequence to exceed 32 bits, the\r\nmax size for bitwise operations. When this happens, we make more room by\r\nconverting the right part of the id to a string and storing it in an\r\noverflow variable. We use a base 32 string representation, because 32 is\r\nthe largest power of 2 that is supported by toString(). We want the base\r\nto be large so that the resulting ids are compact, and we want the base\r\nto be a power of 2 because every log2(base) bits corresponds to a single\r\ncharacter, i.e. every log2(32) = 5 bits. That means we can lop bits off\r\nthe end 5 at a time without affecting the final result.\r\n\r\n* Incremental hydration\r\n\r\nStores the tree context on the dehydrated Suspense boundarys state\r\nobject so it resume where it left off.\r\n\r\n* Add useId to react-debug-tools\r\n\r\n* Add selective hydration test\r\n\r\nDemonstrates that selective hydration works and ids are preserved even\r\nafter subsequent client updates.\""
                }
            },
            {
                "c": {
                    "additions": 1482,
                    "deletions": 199,
                    "committedDate": "2021-10-21T21:11:42Z",
                    "changedFiles": 29,
                    "commentsCount": 0,
                    "id": "fa9bea0c41ccfef5b528ef9b5517607f9f94c52a",
                    "type": "Commit",
                    "message": "\"Initial implementation of cache cleanup (#22510)\n\nThis is an initial, partial implementation of a cleanup mechanism for the experimental Cache API. The idea is that consumers of the Cache API can register to be informed when a given Cache instance is no longer needed so that they can perform associated cleanup tasks to free resources stored in the cache. A canonical example would be cancelling pending network requests.\r\n\r\nAn overview of the high-level changes:\r\n\r\n* Changes the `Cache` type from a Map of cache instances to be an object with the original Map of instances, a reference count (to count roughly \"active references\" to the cache instances - more below), and an AbortController.\r\n* Adds a new public API, `unstable_getCacheSignal(): AbortSignal`, which is callable during render. It returns an AbortSignal tied to the lifetime of the cache - developers can listen for the abort event on the signal, which React now triggers when a given cache instance is no longer referenced. \r\n  * Note that `AbortSignal` is a web standard that is supported by other platform APIs; for example a signal can be passed to `fetch()` to trigger cancellation of an HTTP request.\r\n* Implements the above - triggering the abort event - by handling passive mount/unmount for HostRoot and CacheComponent fiber nodes.\r\n\r\nCases handled:\r\n* Aborted transitions: we clean up a new cache created for an aborted transition\r\n* Suspense: we retain a fresh cache instance until a suspended tree resolves\r\n\r\nFor follow-ups:\r\n* When a subsequent cache refresh is issued before a previous refresh completes, the refreshes are queued. Fresh cache instances for previous refreshes in the queue should be cleared, retaining only the most recent cache. I plan to address this in a follow-up PR.\r\n* If a refresh is cancelled, the fresh cache should be cleaned up.\""
                }
            },
            {
                "c": {
                    "additions": 9,
                    "deletions": 15,
                    "committedDate": "2021-10-19T21:32:54Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "02f411578a8e58af8ec28e385f6b0dcb768cdc41",
                    "type": "Commit",
                    "message": "\"Upgrade useInsertionEffect to stable (#22589)\n\n@huozhi tried this out and says its working as expected. I think we\r\ncan go ahead and move this into the stable channel, so that it is\r\navailable in the React 18 alpha releases.\""
                }
            },
            {
                "c": {
                    "additions": 3732,
                    "deletions": 16,
                    "committedDate": "2021-09-22T03:38:24Z",
                    "changedFiles": 37,
                    "commentsCount": 0,
                    "id": "82c8fa90be86fc0afcbff2dc39486579cff1ac9a",
                    "type": "Commit",
                    "message": "\"Add back useMutableSource temporarily (#22396)\n\nRecoil uses useMutableSource behind a flag. I thought this was fine\r\nbecause Recoil isnt used in any concurrent roots, so the behavior\r\nwould be the same, but it turns out that it is used by concurrent\r\nroots in a few places.\r\n\r\nIm not expecting it to be hard to migrate to useSyncExternalStore, but\r\nto de-risk the change Im going to roll it out gradually with a flag. In\r\nthe meantime, Ive added back the useMutableSource API.\""
                }
            },
            {
                "c": {
                    "additions": 14,
                    "deletions": 3907,
                    "committedDate": "2021-09-20T04:11:50Z",
                    "changedFiles": 37,
                    "commentsCount": 0,
                    "id": "8209de269531767b33d8db26eda41db38bfb6a27",
                    "type": "Commit",
                    "message": "\"Delete useMutableSource implementation (#22292)\n\nThis API was replaced by useSyncExternalStore\""
                }
            },
            {
                "c": {
                    "additions": 862,
                    "deletions": 6,
                    "committedDate": "2021-09-14T14:27:09Z",
                    "changedFiles": 20,
                    "commentsCount": 0,
                    "id": "263cfa6ecb9879ecb629d4e04a8c26422b4c4ff9",
                    "type": "Commit",
                    "message": "\"[Experimental] Add useInsertionEffect (#21913)\""
                }
            },
            {
                "c": {
                    "additions": 311,
                    "deletions": 61,
                    "committedDate": "2021-09-07T17:20:24Z",
                    "changedFiles": 17,
                    "commentsCount": 0,
                    "id": "77912d9a05d7a90287fabdec76486f25869b2981",
                    "type": "Commit",
                    "message": "\"Wire up the native API for useSyncExternalStore (#22237)\n\nAdds useSyncExternalStore to the internal dispatcher, and exports\r\nthe native API from the React package without yet implementing it.\""
                }
            },
            {
                "c": {
                    "additions": 423,
                    "deletions": 1004,
                    "committedDate": "2021-06-22T21:25:07Z",
                    "changedFiles": 44,
                    "commentsCount": 0,
                    "id": "06f7b4f43a93eae9111cfbd972ab1ae1148f6afb",
                    "type": "Commit",
                    "message": "\"`act` should work without mock Scheduler (#21714)\n\nCurrently, in a React 18 root, `act` only works if you mock the\r\nScheduler package. This was because we didnt want to add additional\r\nchecks at runtime.\r\n\r\nBut now that the `act` testing API is dev-only, we can simplify its\r\nimplementation.\r\n\r\nNow when an update is wrapped with `act`, React will bypass Scheduler\r\nentirely and push its tasks onto a special internal queue. Then, when\r\nthe outermost `act` scope exists, well flush that queue.\r\n\r\nI also removed the \"wrong act\" warning, because the plan is to move\r\n`act` to an isomorphic entry point, simlar to `startTransition`. Thats\r\nnot directly related to this PR, but I didnt want to bother\r\nre-implementing that warning only to immediately remove it.\r\n\r\nIll add the isomorphic API in a follow up.\r\n\r\nNote that the internal version of `act` that we use in our own tests\r\nstill depends on mocking the Scheduler package, because it needs to work\r\nin production. Im planning to move that implementation to a shared\r\n(internal) module, too.\""
                }
            },
            {
                "c": {
                    "additions": 212,
                    "deletions": 40,
                    "committedDate": "2021-06-01T19:46:08Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "e16d61c3000e2de6217d06b9afad162e883f73c4",
                    "type": "Commit",
                    "message": "\"[Offscreen] Mount/unmount layout effects (#21386)\n\n* [Offscreen] Mount/unmount layout effects\r\n\r\nExposes the Offscreen component type and implements basic support for\r\nmount/unmounting layout effects when the visibility is toggled.\r\n\r\nMostly it works the same way as hidden Suspense trees, which use the\r\nsame internal fiber type. I had to add an extra bailout, though, that\r\ndoesnt apply to the Suspense case but does apply to Offscreen\r\ncomponents: a hidden Offscreen tree will eventually render at low\r\npriority, and when we it does, its `subtreeTag` will have effects\r\nscheduled on it. So I added a check to the layout phase where, if the\r\nsubtree is hidden, we skip over the subtree entirely. An alternate\r\ndesign would be to clear the subtree flags in the render phase, but I\r\nprefer doing it this way since its harder to mess up.\r\n\r\nWe also need an API to enable the same thing for passive effects. This\r\nis not yet implemented.\r\n\r\n* Add test starting from hidden\r\n\r\nCo-authored-by: Rick Hanlon <rickhanlonii@gmail.com>\""
                }
            },
            {
                "c": {
                    "additions": 12,
                    "deletions": 1092,
                    "committedDate": "2021-02-05T20:36:55Z",
                    "changedFiles": 41,
                    "commentsCount": 0,
                    "id": "4ecf11977c46966d3deedcdc71f1280a34607d1d",
                    "type": "Commit",
                    "message": "\"Remove the Fundamental internals (#20745)\""
                }
            },
            {
                "c": {
                    "additions": 2387,
                    "deletions": 59,
                    "committedDate": "2020-12-18T18:57:24Z",
                    "changedFiles": 39,
                    "commentsCount": 0,
                    "id": "efc57e5cbbd618f3c98d941c48eec859026c2dcb",
                    "type": "Commit",
                    "message": "\"Add built-in Suspense cache with support for invalidation (refreshing) (#20456)\""
                }
            },
            {
                "c": {
                    "additions": 363,
                    "deletions": 156,
                    "committedDate": "2020-12-03T03:44:56Z",
                    "changedFiles": 37,
                    "commentsCount": 0,
                    "id": "e23673b511a2eab6ddcb848a4150105c954f289a",
                    "type": "Commit",
                    "message": "\"[Flight] Add getCacheForType() to the dispatcher (#20315)\n\n* Remove react/unstable_cache\r\n\r\nWere probably going to make it available via the dispatcher. Lets remove this for now.\r\n\r\n* Add readContext() to the dispatcher\r\n\r\nOn the server, it will be per-request.\r\n\r\nOn the client, there will be some way to shadow it.\r\n\r\nFor now, I provide it on the server, and throw on the client.\r\n\r\n* Use readContext() from react-fetch\r\n\r\nThis makes it work on the server (but not on the client until we implement it there.)\r\n\r\nUpdated the test to use Server Components. Now it passes.\r\n\r\n* Fixture: Add fetch from a Server Component\r\n\r\n* readCache -> getCacheForType<T>\r\n\r\n* Add React.unstable_getCacheForType\r\n\r\n* Add a feature flag\r\n\r\n* Fix Flow\r\n\r\n* Add react-suspense-test-utils and port tests\r\n\r\n* Remove extra Map lookup\r\n\r\n* Unroll async/await because build system\r\n\r\n* Add some error coverage and retry\r\n\r\n* Add unstable_getCacheForType to Flight entry\""
                }
            },
            {
                "c": {
                    "additions": 39,
                    "deletions": 1627,
                    "committedDate": "2020-10-31T06:03:45Z",
                    "changedFiles": 61,
                    "commentsCount": 0,
                    "id": "56e9feead0f91075ba0a4f725c9e4e343bca1c67",
                    "type": "Commit",
                    "message": "\"Remove Blocks (#20138)\n\n* Remove Blocks\r\n\r\n* Remove Flight Server Runtime\r\n\r\nTheres no need for this now that the JSResource is part of the bundler\r\nprotocol. Might need something for Webpack plugin specifically later.\r\n\r\n* Devtools\""
                }
            },
            {
                "c": {
                    "additions": 41,
                    "deletions": 200,
                    "committedDate": "2020-08-31T16:16:49Z",
                    "changedFiles": 12,
                    "commentsCount": 0,
                    "id": "1f38dcff67d12828be771403e183652f5e93909a",
                    "type": "Commit",
                    "message": "\"Remove withSuspenseConfig (#19724)\n\nRemoves `withSuspenseConfig` and migrates relevant tests to\r\n`startTransition` instead.\r\n\r\nWe only had one caller in www, which Ive removed.\""
                }
            },
            {
                "c": {
                    "additions": 242,
                    "deletions": 0,
                    "committedDate": "2020-08-26T15:34:17Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "5564f2c95bb61b446f93dc5c519740bdb39e1989",
                    "type": "Commit",
                    "message": "\"Add React.startTransition (#19696)\n\n* Add React.startTransition\r\n\r\n* Export startTransition from index.js as well\""
                }
            },
            {
                "c": {
                    "additions": 125,
                    "deletions": 12325,
                    "committedDate": "2020-08-05T14:13:29Z",
                    "changedFiles": 92,
                    "commentsCount": 0,
                    "id": "b61174fb7b09580c1ec2a8f55e73204b706d2935",
                    "type": "Commit",
                    "message": "\"Remove the deprecated React Flare event system (#19520)\""
                }
            },
            {
                "c": {
                    "additions": 136,
                    "deletions": 172,
                    "committedDate": "2020-07-16T15:21:21Z",
                    "changedFiles": 14,
                    "commentsCount": 0,
                    "id": "9102719baacb64738e9235bc80d3d7d9918cc74c",
                    "type": "Commit",
                    "message": "\"Tidy up React Scope API (#19352)\""
                }
            },
            {
                "c": {
                    "additions": 303,
                    "deletions": 69,
                    "committedDate": "2020-05-12T03:02:08Z",
                    "changedFiles": 27,
                    "commentsCount": 0,
                    "id": "8b9c4d1688333865e702fcd65ad2ab7d83b3c33c",
                    "type": "Commit",
                    "message": "\"Expose LegacyHidden type and disable <div hidden /> API in new fork (#18891)\n\n* Expose LegacyHidden type\r\n\r\nI will use this internally at Facebook to migrate away from\r\n<div hidden />. The end goal is to migrate to the Offscreen type, but\r\nthat has different semantics. This is an incremental step.\r\n\r\n* Disable <div hidden /> API in new fork\r\n\r\nMigrates to the unstable_LegacyHidden type instead. The old fork does\r\nnot support the new component type, so I updated the tests to use an\r\nindirection that picks the correct API. I will remove this once the\r\nLegacyHidden (and/or Offscreen) type has landed in both implementations.\r\n\r\n* Add gated warning for `<div hidden />` API\r\n\r\nOnly exists so we can detect callers in www and migrate them to the new\r\nAPI. Should not visible to anyone outside React Core team.\""
                }
            },
            {
                "c": {
                    "additions": 1050,
                    "deletions": 19,
                    "committedDate": "2020-04-16T02:10:15Z",
                    "changedFiles": 33,
                    "commentsCount": 0,
                    "id": "22dc2e42bdc00d87fc19c5e75fc7c0b3fdcdc572",
                    "type": "Commit",
                    "message": "\"Add experimental DebugTracing logger for internal use (#18531)\""
                }
            },
            {
                "c": {
                    "additions": 1370,
                    "deletions": 9,
                    "committedDate": "2020-04-07T00:17:27Z",
                    "changedFiles": 24,
                    "commentsCount": 0,
                    "id": "3278d242184a13add3f25f683b77ef9a6a2305f3",
                    "type": "Commit",
                    "message": "\"Add useOpaqueIdentifier Hook (#17322)\n\n* Add useOpaqueIdentifier Hook\r\n\r\nWe currently use unique IDs in a lot of places. Examples are:\r\n  * `<label for=\"ID\">`\r\n  * `aria-labelledby`\r\n\r\nThis can cause some issues:\r\n  1. If we server side render and then hydrate, this could cause an\r\n     hydration ID mismatch\r\n  2. If we server side render one part of the page and client side\r\n     render another part of the page, the ID for one part could be\r\n     different than the ID for another part even though they are\r\n     supposed to be the same\r\n  3. If we conditionally render something with an ID ,  this might also\r\n     cause an ID mismatch because the ID will be different on other\r\n     parts of the page\r\n\r\nThis PR creates a new hook `useUniqueId` that generates a different\r\nunique ID based on whether the hook was called on the server or client.\r\nIf the hook is called during hydration, it generates an opaque object\r\nthat will rerender the hook so that the IDs match.\r\n\r\nCo-authored-by: Andrew Clark <git@andrewclark.io>\""
                }
            },
            {
                "c": {
                    "additions": 153,
                    "deletions": 139,
                    "committedDate": "2020-03-21T22:22:01Z",
                    "changedFiles": 92,
                    "commentsCount": 0,
                    "id": "c5d2fc7127654e43de59fff865b74765a103c4a5",
                    "type": "Commit",
                    "message": "\"Move some files out of /shared and rename to upper case (#18363)\n\n* Rename lower case isomorphic default exports modules to upper case named exports\r\n\r\nWere somewhat inconsistent here between e.g. ReactLazy and memo.\r\n\r\nLets pick one.\r\n\r\nThis also moves the responder, fundamental, scope creators from shared\r\nsince theyre isomorphic and same as the other creators.\r\n\r\n* Move some files that are specific to the react-reconciler from shared\r\n\r\nIndividual renderers are allowed to deep require into the reconciler.\r\n\r\n* Move files specific to react-dom from shared\r\n\r\nreact-interactions is right now dom specific (it wasnt before) so we can\r\ntype check it together with other dom stuff. Avoids the need for\r\na shared ReactDOMTypes to be checked by RN for example.\r\n\r\n* Move ReactWorkTags to the reconciler\r\n\r\n* Move createPortal to export from reconciler\r\n\r\nOtherwise Noop cant access it since its not allowed deep requires.\""
                }
            },
            {
                "c": {
                    "additions": 927,
                    "deletions": 88,
                    "committedDate": "2020-03-17T20:22:19Z",
                    "changedFiles": 18,
                    "commentsCount": 0,
                    "id": "90f8fe6f5509cab7d6d280b4ed17181697f394e9",
                    "type": "Commit",
                    "message": "\"add jsx-runtime and jsx-dev-runtime (#18299)\n\nThis PR adds the jsx-runtime and jsx-dev-runtime modules for the JSX Babel Plugin. WWW still relies on jsx/jsxs/jsxDEV from the \"react\" module, so once we refactor the code to point to the runtime modules we will remove jsx/jsxs/jsxDEV from the \"react\" module.\""
                }
            },
            {
                "c": {
                    "additions": 2062,
                    "deletions": 27,
                    "committedDate": "2020-03-11T19:34:39Z",
                    "changedFiles": 24,
                    "commentsCount": 0,
                    "id": "322cdcd3abfaca985a001a12247f02c5d31d311e",
                    "type": "Commit",
                    "message": "\"useMutableSource hook (#18000)\n\nuseMutableSource hook\r\n\r\nuseMutableSource() enables React components to safely and efficiently read from a mutable external source in Concurrent Mode. The API will detect mutations that occur during a render to avoid tearing and it will automatically schedule updates when the source is mutated.\r\n\r\nRFC: reactjs/rfcs#147\""
                }
            },
            {
                "c": {
                    "additions": 150,
                    "deletions": 95,
                    "committedDate": "2020-03-03T20:46:24Z",
                    "changedFiles": 29,
                    "commentsCount": 0,
                    "id": "d2158d6ccbcbd998d1cd1c06ac6c6682cbeafd04",
                    "type": "Commit",
                    "message": "\"Fix flow types (#18204)\n\n* Added missing @flow pragma to React.js\r\n\r\n* Fixed useContext() return type definition\r\n\r\n* Fixed previously masked Flow errors in DevTools and react-interactions packages\r\n\r\n* Added displayName to internal Context Flow type\r\n\r\n* Removed Flow generic annotations for createResponder\r\n\r\nThis seems to cause a parsing error. (Not sure why.) The API is deprecated anyway so Im being lazy for now and just adding a .\""
                }
            },
            {
                "c": {
                    "additions": 1073,
                    "deletions": 670,
                    "committedDate": "2020-02-25T21:54:27Z",
                    "changedFiles": 62,
                    "commentsCount": 0,
                    "id": "60016c448bb7d19fc989acd05dda5aca2e124381",
                    "type": "Commit",
                    "message": "\"Export React as Named Exports instead of CommonJS (#18106)\n\n* Add options for forked entry points\r\n\r\nWe currently fork .fb.js entry points. This adds a few more options.\r\n\r\n.modern.fb.js - experimental FB builds\r\n.classic.fb.js - stable FB builds\r\n.fb.js - if no other FB build, use this for FB builds\r\n.experimental.js - experimental builds\r\n.stable.js - stable builds\r\n.js - used if no other override exists\r\n\r\nThis will be used to have different ES exports for different builds.\r\n\r\n* Switch React to named exports\r\n\r\n* Export named exports from the export point itself\r\n\r\nWe need to re-export the Flow exported types so we can use them in our code.\r\n\r\nWe dont want to use the Flow types from upstream since it doesnt have the non-public APIs that we have.\r\n\r\nThis should be able to use export * but I dont know why it doesnt work.\r\n\r\nThis actually enables Flow typing of React which was just \"any\" before.\r\nThis exposed some Flow errors that needs fixing.\r\n\r\n* Create forks for the react entrypoint\r\n\r\nNone of our builds expose all exports and they all differ in at least one\r\nway, so we need four forks.\r\n\r\n* Set esModule flag to false\r\n\r\nWe dont want to emit the esModule compatibility flag on our CommonJS\r\noutput. For now we treat our named exports as if theyre CommonJS.\r\n\r\nThis is a potentially breaking change for scheduler (but all those apis\r\nare unstable), react-is and use-subscription. However, it seems unlikely\r\nthat anyone would rely on this since these only have named exports.\r\n\r\n* Remove unused Feature Flags\r\n\r\n* Let jest observe the stable fork for stable tests\r\n\r\nThis lets it do the negative test by ensuring that the right tests fail.\r\n\r\nHowever, this in turn will make other tests that are not behind\r\n__EXPERIMENTAL__ fail. So I need to do that next.\r\n\r\n* Put all tests that depend on exports behind __EXPERIMENTAL__\r\n\r\nSince theres no way to override the exports using feature flags\r\nin .intern.js anymore we cant use these APIs in stable.\r\n\r\nThe tradeoff here is that we can either enable the negative tests on\r\n\"stable\" that means experimental are expected to fail, or we can disable\r\ntests on stable. This is unfortunate since some of these APIs now run on\r\na \"stable\" config at FB instead of the experimental.\r\n\r\n* Switch ReactDOM to named exports\r\n\r\nSame strategy as React.\r\n\r\nI moved the ReactDOMFB runtime injection to classic.fb.js\r\n\r\nSince we only fork the entrypoint, the `/testing` entrypoint needs to\r\nbe forked too to re-export the same things plus `act`. This is a bit\r\nunfortunate. If it becomes a pattern we can consider forking in the\r\nmodule resolution deeply.\r\n\r\nfix flow\r\n\r\n* Fix ReactDOM Flow Types\r\n\r\nNow that ReactDOM is Flow type checked we need to fix up its types.\r\n\r\n* Configure jest to use stable entry for ReactDOM in non-experimental\r\n\r\n* Remove additional FeatureFlags that are no longer needed\r\n\r\nThese are only flagging the exports and no implementation details so we\r\ncan control them fully through the export overrides.\""
                }
            },
            {
                "c": {
                    "additions": 88,
                    "deletions": 88,
                    "committedDate": "2020-02-21T07:56:40Z",
                    "changedFiles": 24,
                    "commentsCount": 0,
                    "id": "65bbda7f169394005252b46a5992ece5a2ffadad",
                    "type": "Commit",
                    "message": "\"Rename Chunks API to Blocks (#18086)\n\nSounds like this is the name were going with. This also helps us\r\ndistinguish it from other \"chunking\" implementation details.\""
                }
            },
            {
                "c": {
                    "additions": 167,
                    "deletions": 112,
                    "committedDate": "2020-01-20T15:00:18Z",
                    "changedFiles": 14,
                    "commentsCount": 0,
                    "id": "a209a97ed742ced488d7edf4fc2dcbf316ba13cb",
                    "type": "Commit",
                    "message": "\"Add feature flag around React.createFactory (#17873)\""
                }
            },
            {
                "c": {
                    "additions": 556,
                    "deletions": 60,
                    "committedDate": "2019-12-18T18:25:43Z",
                    "changedFiles": 23,
                    "commentsCount": 0,
                    "id": "7dc9745427046d462506e9788878ba389e176b8a",
                    "type": "Commit",
                    "message": "\"[Flight] Chunks API (#17398)\n\n* Add feature flags\r\n\r\n* Add Chunk type and constructor\r\n\r\n* Wire up Chunk support in the reconciler\r\n\r\n* Update reconciler to reconcile Chunks against the render method\r\n\r\nThis allows the query and args to be updated.\r\n\r\n* Drop the ref. Chunks cannot have refs anyway.\r\n\r\n* Add Chunk checks in more missing cases\r\n\r\n* Rename secondArg\r\n\r\n* Add test and fix lazy chunks\r\n\r\nNot really a supported use case but for consistency I guess.\r\n\r\n* Fix fragment test\""
                }
            },
            {
                "c": {
                    "additions": 215,
                    "deletions": 1304,
                    "committedDate": "2019-12-18T10:24:46Z",
                    "changedFiles": 63,
                    "commentsCount": 0,
                    "id": "9fe1031244903e442de179821f1d383a9f2a59f2",
                    "type": "Commit",
                    "message": "\"[react-interactions] Rename Flare APIs to deprecated and remove from RN (#17644)\""
                }
            },
            {
                "c": {
                    "additions": 47,
                    "deletions": 9,
                    "committedDate": "2019-10-18T21:24:13Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "c47f59331ee94b1d04f974f075373d368a8c8ab3",
                    "type": "Commit",
                    "message": "\"Move SuspenseList to experimental package (#17130)\n\nAlso moves `withSuspenseConfig`\""
                }
            },
            {
                "c": {
                    "additions": 544,
                    "deletions": 19,
                    "committedDate": "2019-10-18T19:48:43Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "685ed561f22ea062281a4c570c7067e6020457c4",
                    "type": "Commit",
                    "message": "\"Migrate useDeferredValue and useTransition (#17058)\n\nMigrated useDeferredValue and useTransition from Facebooks www repo into ReactFiberHooks.\""
                }
            },
            {
                "c": {
                    "additions": 459,
                    "deletions": 94,
                    "committedDate": "2019-08-29T11:06:51Z",
                    "changedFiles": 22,
                    "commentsCount": 0,
                    "id": "bd79be9b687156067416ffe5219e49a11bd0f1e7",
                    "type": "Commit",
                    "message": "\"[react-core] Add experimental React Scope component API (#16587)\""
                }
            },
            {
                "c": {
                    "additions": 1143,
                    "deletions": 1193,
                    "committedDate": "2019-08-01T18:08:54Z",
                    "changedFiles": 39,
                    "commentsCount": 0,
                    "id": "42794557ca44a8c05c71aab698d44d1294236538",
                    "type": "Commit",
                    "message": "\"[Flare] Tweaks to Flare system design and API (#16264)\""
                }
            },
            {
                "c": {
                    "additions": 3418,
                    "deletions": 4039,
                    "committedDate": "2019-07-23T22:46:44Z",
                    "changedFiles": 59,
                    "commentsCount": 0,
                    "id": "509889119360ed83ca6ef3f83bcf01e5aa7dcd81",
                    "type": "Commit",
                    "message": "\"[Flare] Redesign core event system (#16163)\""
                }
            },
            {
                "c": {
                    "additions": 898,
                    "deletions": 40,
                    "committedDate": "2019-07-19T21:20:28Z",
                    "changedFiles": 35,
                    "commentsCount": 0,
                    "id": "2c4d61e1022ae383dd11fe237f6df8451e6f0310",
                    "type": "Commit",
                    "message": "\"Adds experimental fundamental interface (#16049)\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 240,
                    "committedDate": "2019-07-12T22:41:47Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "8d413bf2c3679befe8c6b56733b7c6f6e467ec07",
                    "type": "Commit",
                    "message": "\"Remove React.error and React.warn (#16126)\n\n* Remove React.error/React.warn with React.getComponentStack\""
                }
            },
            {
                "c": {
                    "additions": 58,
                    "deletions": 58,
                    "committedDate": "2019-06-28T00:11:11Z",
                    "changedFiles": 31,
                    "commentsCount": 0,
                    "id": "9b0bd43550206e04bfe9ca695e5981eff0e2d03f",
                    "type": "Commit",
                    "message": "\"[Flare] Re-label Flare flag (#16014)\""
                }
            },
            {
                "c": {
                    "additions": 31,
                    "deletions": 43,
                    "committedDate": "2019-06-21T09:12:56Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "4f92fbce5cc409436ec7625ac08d3a709a4d8f31",
                    "type": "Commit",
                    "message": "\"[Flare] Move createEvent back to React object (#15943)\""
                }
            },
            {
                "c": {
                    "additions": 421,
                    "deletions": 116,
                    "committedDate": "2019-06-21T02:12:40Z",
                    "changedFiles": 29,
                    "commentsCount": 0,
                    "id": "720db4cbe675e80820ec81abab499492309b9252",
                    "type": "Commit",
                    "message": "\"[Flare] Add useEvent hook implementation (#15927)\n\n* [Flare] Add useEvent hook implementation\r\n\r\nValidate hooks have decendent event components\r\n\r\nFew fixes and displayName changes\r\n\r\nFix more responder bugs\r\n\r\nUpdate error codes\r\n\r\n* Add another test\r\n\r\n* Address feedback\""
                }
            },
            {
                "c": {
                    "additions": 977,
                    "deletions": 15,
                    "committedDate": "2019-06-20T02:34:28Z",
                    "changedFiles": 16,
                    "commentsCount": 0,
                    "id": "76864f7ff729f8293e8e772da7ad8416d7def6b3",
                    "type": "Commit",
                    "message": "\"Add SuspenseList Component (#15902)\n\n* Add SuspenseList component type\r\n\r\n* Push SuspenseContext for SuspenseList\r\n\r\n* Force Suspense boundaries into their fallback state\r\n\r\nIn the \"together\" mode, we do a second render pass that forces the\r\nfallbacks to stay in place, if not all can unsuspend at once.\r\n\r\n* Add test\r\n\r\n* Transfer thennables to the SuspenseList\r\n\r\nThis way, we end up retrying the SuspenseList in case the nested boundary\r\nthat just suspended doesnt actually get mounted with this set of\r\nthennables. This happens when the second pass renders the fallback\r\ndirectly without first attempting to render the content.\r\n\r\n* Add warning for unsupported displayOrder\r\n\r\n* Add tests for nested sibling boundaries and nested lists\r\n\r\n* Fix nested SuspenseList forwarding thennables\r\n\r\n* Rename displayOrder to revealOrder\r\n\r\nDisplay order has some \"display list\" connotations making it sound like\r\na z-index thing.\r\n\r\nReveal indicates that this isnt really about when something gets rendered\r\nor is ready to be rendered. Its about when content that is already there\r\ngets to be revealed.\r\n\r\n* Add test for avoided boundaries\r\n\r\n* Make SuspenseList a noop in legacy mode\r\n\r\n* Use an explicit suspense list state object\r\n\r\nThis will be used for more things in the directional case.\""
                }
            },
            {
                "c": {
                    "additions": 318,
                    "deletions": 290,
                    "committedDate": "2019-06-18T22:41:00Z",
                    "changedFiles": 20,
                    "commentsCount": 0,
                    "id": "689beef6f5d0adab166f5eb0aac59eba6100677a",
                    "type": "Commit",
                    "message": "\"[Flare] Move unstable_createEventComponent to ReactDOM (#15890)\""
                }
            },
            {
                "c": {
                    "additions": 831,
                    "deletions": 86,
                    "committedDate": "2019-05-16T23:51:18Z",
                    "changedFiles": 18,
                    "commentsCount": 0,
                    "id": "9c6de716d028f17736d0892d8a3d8f3ac2cb62bd",
                    "type": "Commit",
                    "message": "\"Add withSuspenseConfig API (#15593)\n\n* Add suspendIfNeeded API and a global scope to track it\r\n\r\nAdds a \"current\" suspense config that gets applied to all updates scheduled\r\nduring the current scope.\r\n\r\nI suspect we might want to add other types of configurations to the \"batch\"\r\nso I called it the \"batch config\".\r\n\r\nThis works across renderers/roots but they wont actually necessarily go\r\ninto the same batch.\r\n\r\n* Add the suspenseConfig to all updates created during this scope\r\n\r\n* Compute expiration time based on the timeout of the suspense config\r\n\r\n* Track if there was a processed suspenseConfig this render pass\r\n\r\nWell use this info to suspend a commit for longer when necessary.\r\n\r\n* Mark suspended states that should be avoided as a separate flag\r\n\r\nThis lets us track which renders we want to suspend for a short time vs\r\na longer time if possible.\r\n\r\n* Suspend until the full expiration time if something asked to suspend\r\n\r\n* Reenable an old test that we can now repro again\r\n\r\n* Suspend the commit even if it is complete if there is a minimum delay\r\n\r\nThis can be used to implement spinners that dont flicker if the data\r\nand rendering is really fast.\r\n\r\n* Default timeoutMs to low pri expiration if not provided\r\n\r\nThis is a required argument in the type signature but people may not\r\nsupply it and this is a user facing object.\r\n\r\n* Rename to withSuspenseConfig and drop the default config\r\n\r\nThis allow opting out of suspending in some nested scope.\r\n\r\nA lot of time when you use this function youll use it with high level\r\nhelpers. Those helpers often want to accept some additional configuration\r\nfor suspense and if it should suspend at all. The easiest way is to just\r\nhave the api accept null or a suspense config and pass it through. However,\r\nthen you have to remember that calling suspendIfNeeded has a default.\r\n\r\nIt gets simpler by just saying tat you can pass the config. You can have\r\nyour own default in user space.\r\n\r\n* Track the largest suspense config expiration separately\r\n\r\nThis ensures that if weve scheduled lower pri work that doesnt have a\r\nsuspenseConfig, we dont consider its expiration as the timeout.\r\n\r\n* Add basic tests for functionality using each update mechanism\r\n\r\n* Fix issue when newly created avoided boundary doesnt suspend with delay\r\n\r\n* Add test for loading indicator with minLoadingDurationMs option\""
                }
            },
            {
                "c": {
                    "additions": 118,
                    "deletions": 686,
                    "committedDate": "2019-05-13T23:10:00Z",
                    "changedFiles": 15,
                    "commentsCount": 0,
                    "id": "83fc258f2914c1a7c14c7b98ee362934576f266b",
                    "type": "Commit",
                    "message": "\"Remove <ConcurrentMode /> (#15532)\n\nUse createSyncRoot instead.\""
                }
            },
            {
                "c": {
                    "additions": 75,
                    "deletions": 59,
                    "committedDate": "2019-05-07T19:36:42Z",
                    "changedFiles": 12,
                    "commentsCount": 0,
                    "id": "89d8d1435ffc61fd5201636a84c53806130ef4b8",
                    "type": "Commit",
                    "message": "\"Add React.unstable_createEventComponent (#15580)\n\nAPI for creating event components from event responders.\""
                }
            },
            {
                "c": {
                    "additions": 659,
                    "deletions": 12,
                    "committedDate": "2019-04-07T19:02:34Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "745baf2e061bdb7a07b511fa6fd8c1c5e8106313",
                    "type": "Commit",
                    "message": "\"Provide new jsx transform target for reactjs/rfcs#107 (#15141)\n\n* adding jsx function\r\n\r\n* add more feature flag defaults\r\n\r\n* flip ReactElement order back\""
                }
            },
            {
                "c": {
                    "additions": 244,
                    "deletions": 0,
                    "committedDate": "2019-03-21T21:44:08Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "f161ee2eb7e78d6cb3d3878fe1812ac1057fedc6",
                    "type": "Commit",
                    "message": "\"React.warn() and React.error() (#15170)\""
                }
            },
            {
                "c": {
                    "additions": 128,
                    "deletions": 132,
                    "committedDate": "2019-03-21T16:18:34Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "56035dac645af75c1a8aa8deba2bcf89b14a5aa4",
                    "type": "Commit",
                    "message": "\"unstable_Profiler -> Profiler (#15172)\""
                }
            },
            {
                "c": {
                    "additions": 32,
                    "deletions": 107,
                    "committedDate": "2019-01-23T21:28:09Z",
                    "changedFiles": 27,
                    "commentsCount": 0,
                    "id": "6cb26774e27e03c7d5d6e4601bcee979a004fe91",
                    "type": "Commit",
                    "message": "\"Enable hooks! (#14679)\n\n* Turned enableHooks feature flag on everywhere\r\n* Removed useHooks feature flag from tests (now that its on by default)\r\n* Remove useHooks feature flag entirely\""
                }
            },
            {
                "c": {
                    "additions": 249,
                    "deletions": 2,
                    "committedDate": "2019-01-14T22:53:22Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "edb1f595649b013a59a18f43c03a57035ddea19e",
                    "type": "Commit",
                    "message": "\"Support configurable labels for custom hooks (#14559)\n\n* react-debug-tools accepts currentDispatcher ref as param\r\n\r\n* ReactDebugHooks injected dispatcher ref is optional\r\n\r\n* Support custom values for custom hooks\r\n\r\n* PR feedback:\r\n\r\n1. Renamed useDebugValueLabel hook to useDebugValue\r\n2. Wrapped useDebugValue internals in if-DEV so that it could be removed from production builds.\r\n\r\n* PR feedback:\r\n\r\n1. Fixed some minor typos\r\n2. Added inline comment explaining the purpose of  rollupDebugValues()\r\n3. Refactored rollupDebugValues() to use a for loop rather than filter()\r\n4. Improve check for useDebugValue hook to lessen the chance of a false positive\r\n5. Added optional formatter function param to useDebugValue\r\n\r\n* Nitpick renamed a method\""
                }
            },
            {
                "c": {
                    "additions": 32,
                    "deletions": 32,
                    "committedDate": "2019-01-10T13:37:50Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "b4ad8e947150a1a0b486a388e2d4762d3eee51ee",
                    "type": "Commit",
                    "message": "\"rename useImperativeMethods -> useImperativeHandle (#14565)\""
                }
            },
            {
                "c": {
                    "additions": 22,
                    "deletions": 275,
                    "committedDate": "2018-11-27T21:05:13Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "c2a2d8a539bf02e40c43d36adc2826e228f30955",
                    "type": "Commit",
                    "message": "\"Remove useMutationEffect (#14336)\n\nuseMutationEffect has problems (namely, refs arent attached at the time that it runs) and were not positive its necessary. useLayoutEffect runs at the same time as componentDidMount/Update so its sufficient for all existing use cases; it can be used in any case that useEffect happens too late. Until we figure out what we want to do, lets delete it.\""
                }
            },
            {
                "c": {
                    "additions": 12,
                    "deletions": 5,
                    "committedDate": "2018-11-23T14:10:57Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "7475120ce7bdeb7a5666d64c636efb1f4a951b9a",
                    "type": "Commit",
                    "message": "\"Prevent deopts from modifying exports object in stable builds (#14309)\""
                }
            },
            {
                "c": {
                    "additions": 64,
                    "deletions": 39,
                    "committedDate": "2018-10-29T18:26:54Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "5fc84efacce66272928815e8a6c83a341af9160e",
                    "type": "Commit",
                    "message": "\"Skip updating effect tag when skipping effect\n\nFor example, if you have `useEffect(..., [])`, theres no need to set .effectTag to `Update | Passive` on updates.\""
                }
            },
            {
                "c": {
                    "additions": 966,
                    "deletions": 253,
                    "committedDate": "2018-10-29T18:26:53Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "11d0781eea7dfa65e0ea9e54d18ff937122f9524",
                    "type": "Commit",
                    "message": "\"Defer useEffect until after paint\n\nEffects scheduled by useEffect should not fire until after the browser\nhas had a chance to paint. However, they should be fired before any\nsubsequent mutations.\n\nAlso adds useMutationEffect and useLayoutEffect. useMutationEffect fires\nduring the host update phase. useLayoutEffect fires during the post-\nupdate phase (the same phase as componentDidMount\nand componentDidUpdate).\""
                }
            },
            {
                "c": {
                    "additions": 25,
                    "deletions": 9,
                    "committedDate": "2018-10-29T18:26:53Z",
                    "changedFiles": 12,
                    "commentsCount": 0,
                    "id": "105f2de545dc9e374ed4ac55b3628eeeb555f4a6",
                    "type": "Commit",
                    "message": "\"Put hooks behind feature flag\""
                }
            },
            {
                "c": {
                    "additions": 2075,
                    "deletions": 31,
                    "committedDate": "2018-10-29T18:26:53Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "7bee9fbdd49aa5b9365a94b0ddf6db04bc1bf51c",
                    "type": "Commit",
                    "message": "\"Initial hooks implementation\n\nIncludes:\n- useState\n- useContext\n- useEffect\n- useRef\n- useReducer\n- useCallback\n- useMemo\n- useAPI\""
                }
            },
            {
                "c": {
                    "additions": 31,
                    "deletions": 7,
                    "committedDate": "2018-10-24T20:45:07Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "275e76e83bc2be5dc0be9185ff747f383969289a",
                    "type": "Commit",
                    "message": "\"Enable stable concurrent APIs flag for 16.7 alpha (#13928)\n\n* Add enableStableConcurrentModeAPIs feature flag\r\n\r\n* Conditionally name concurrent API based on enableStableConcurrentModeAPIs flag\""
                }
            },
            {
                "c": {
                    "additions": 42,
                    "deletions": 45,
                    "committedDate": "2018-10-23T05:40:05Z",
                    "changedFiles": 16,
                    "commentsCount": 0,
                    "id": "d75c69e0cf2a842adc47edab87ca5103411e6949",
                    "type": "Commit",
                    "message": "\"Remove unstable_ prefix from Suspense (#13922)\n\nWe are using it with lazy and the combination Suspense + lazy seems pretty\r\nstable. maxDuration is not but thats only enabled when youre in\r\nConcurrentMode which is still unstable.\""
                }
            },
            {
                "c": {
                    "additions": 83,
                    "deletions": 83,
                    "committedDate": "2018-10-20T16:46:23Z",
                    "changedFiles": 16,
                    "commentsCount": 0,
                    "id": "769b1f270e1251d9dbdce0fcbd9e92e502d059b8",
                    "type": "Commit",
                    "message": "\"pure -> memo (#13905)\""
                }
            },
            {
                "c": {
                    "additions": 326,
                    "deletions": 362,
                    "committedDate": "2018-10-10T16:02:04Z",
                    "changedFiles": 30,
                    "commentsCount": 0,
                    "id": "8af6728c6f105d37f9c0006288a6d1ac3903dc71",
                    "type": "Commit",
                    "message": "\"Enable Suspense + rename Placeholder (#13799)\n\n* Enable Suspense\r\n\r\n* <unstable_Placeholder delayMs> => <unstable_Suspense maxDuration>\r\n\r\n* Update suspense fixture\""
                }
            },
            {
                "c": {
                    "additions": 433,
                    "deletions": 70,
                    "committedDate": "2018-09-27T22:25:38Z",
                    "changedFiles": 10,
                    "commentsCount": 0,
                    "id": "a0733fe13d598303f45b9d27c84ce0ec40d09021",
                    "type": "Commit",
                    "message": "\"pure (#13748)\n\n* pure\r\n\r\nA higher-order component version of the `React.PureComponent` class.\r\nDuring an update, the previous props are compared to the new props. If\r\nthey are the same, React will skip rendering the component and\r\nits children.\r\n\r\nUnlike userspace implementations, `pure` will not add an additional\r\nfiber to the tree.\r\n\r\nThe first argument must be a functional component; it does not work\r\nwith classes.\r\n\r\n`pure` uses shallow comparison by default, like `React.PureComponent`.\r\nA custom comparison can be passed as the second argument.\r\n\r\nCo-authored-by: Andrew Clark <acdlite@fb.com>\r\nCo-authored-by: Sophie Alpert <sophiebits@fb.com>\r\n\r\n* Warn if first argument is not a functional component\""
                }
            },
            {
                "c": {
                    "additions": 211,
                    "deletions": 170,
                    "committedDate": "2018-09-26T16:13:02Z",
                    "changedFiles": 29,
                    "commentsCount": 0,
                    "id": "0dc0ddc1ef5f90fe48b58f1a1ba753757961fc74",
                    "type": "Commit",
                    "message": "\"Rename AsyncMode -> ConcurrentMode (#13732)\n\n* Rename AsyncMode -> ConcurrentMode\""
                }
            },
            {
                "c": {
                    "additions": 62,
                    "deletions": 0,
                    "committedDate": "2018-08-16T16:43:32Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "fe959eea731b4de0c970f753dfa9d0f6b010b63d",
                    "type": "Commit",
                    "message": "\"React.lazy (#13398)\n\nLazily starts loading a component the first time its rendered. The\r\nimplementation is fairly simple and could be left to userspace, but since\r\nthis is an important use case, theres value in standardization.\""
                }
            },
            {
                "c": {
                    "additions": 91,
                    "deletions": 44,
                    "committedDate": "2018-07-13T01:45:37Z",
                    "changedFiles": 17,
                    "commentsCount": 0,
                    "id": "659a29cecf74301532354261369e9048aac6e20f",
                    "type": "Commit",
                    "message": "\"Reorganize how shared internals are accessed (#13201)\n\n* Reorganize how shared internals are accessed\r\n\r\n* Update forks.js\""
                }
            },
            {
                "c": {
                    "additions": 135,
                    "deletions": 127,
                    "committedDate": "2018-07-04T02:47:00Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "88d7ed8bfbccd860c3e309da39d356d0a3127aa7",
                    "type": "Commit",
                    "message": "\"React.Timeout -> React.Placeholder (#13105)\n\nChanged the API to match what weve been using in our latest discussions.\r\n\r\nOur tentative plans are for <Placeholder> to automatically hide the timed-out\r\nchildren, instead of removing them, so their state is not lost. This part is\r\nnot yet implemented. Well likely have a lower level API that does not include\r\nthe hiding behavior. This is also not yet implemented.\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 1,
                    "committedDate": "2018-05-16T21:02:34Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "d6f304e88952b895a9e1c69483081d2d9ef56979",
                    "type": "Commit",
                    "message": "\"Remove Timeout export on React object unless enableSuspense flag (#12833)\""
                }
            },
            {
                "c": {
                    "additions": 1561,
                    "deletions": 76,
                    "committedDate": "2018-05-11T01:09:10Z",
                    "changedFiles": 25,
                    "commentsCount": 0,
                    "id": "6565795377d1d2c79a7708766f1af9e1a87517de",
                    "type": "Commit",
                    "message": "\"Suspense (#12279)\n\n* Timeout component\r\n\r\nAdds Timeout component. If a promise is thrown from inside a Timeout component,\r\nReact will suspend the in-progress render from committing. When the promise\r\nresolves, React will retry. If the render is suspended for longer than the\r\nmaximum threshold, the Timeout switches to a placeholder state.\r\n\r\nThe timeout threshold is defined as the minimum of:\r\n- The expiration time of the current render\r\n- The `ms` prop given to each Timeout component in the ancestor path of the\r\nthrown promise.\r\n\r\n* Add a test for nested fallbacks\r\n\r\nCo-authored-by: Andrew Clark <acdlite@fb.com>\r\n\r\n* Resume on promise rejection\r\n\r\nReact should resume rendering regardless of whether it resolves\r\nor rejects.\r\n\r\n* Wrap Suspense code in feature flag\r\n\r\n* Children of a Timeout must be strict mode compatible\r\n\r\nAsync is not required for Suspense, but strict mode is.\r\n\r\n* Simplify list of pending work\r\n\r\nSome of this was added with \"soft expiration\" in mind, but now with our revised\r\nmodel for how soft expiration will work, this isnt necessary.\r\n\r\nIt would be nice to remove more of this, but I think the list itself is inherent\r\nbecause we need a way to track the start times, for <Timeout ms={ms} />.\r\n\r\n* Only use the Timeout update queue to store promises, not for state\r\n\r\nIt already worked this way in practice.\r\n\r\n* Wrap more Suspense-only paths in the feature flag\r\n\r\n* Attach promise listener immediately on suspend\r\n\r\nInstead of waiting for commit phase.\r\n\r\n* Infer approximate start time using expiration time\r\n\r\n* Remove list of pending priority levels\r\n\r\nWe can replicate almost all the functionality by tracking just five\r\nseparate levels: the highest/lowest priority pending levels, the\r\nhighest/lowest priority suspended levels, and the lowest pinged level.\r\n\r\nWe lose a bit of granularity, in that if there are multiple levels of\r\npending updates, only the first and last ones are known. But in practice\r\nthis likely isnt a big deal.\r\n\r\nThese heuristics are almost entirely isolated to a single module and\r\ncan be adjusted later, without API changes, if necessary.\r\n\r\nNon-IO-bound work is not affected at all.\r\n\r\n* ReactFiberPendingWork -> ReactFiberPendingPriority\r\n\r\n* Renaming method names from \"pending work\" to \"pending priority\"\r\n\r\n* Get rid of SuspenseThenable module\r\n\r\nIdk why I thought this was neccessary\r\n\r\n* Nits based on Sebastians feedback\r\n\r\n* More naming nits + comments\r\n\r\n* Add test for hiding a suspended tree to unblock\r\n\r\n* Revert change to expiration time rounding\r\n\r\nThis means you have to account for the start time approximation\r\nheuristic when writing Suspense tests, but thats going to be\r\ntrue regardless.\r\n\r\nWhen updating the tests, I also made a fix related to offscreen\r\npriority. We should never timeout inside a hidden tree.\r\n\r\n* palceholder -> placeholder\""
                }
            },
            {
                "c": {
                    "additions": 1451,
                    "deletions": 53,
                    "committedDate": "2018-05-10T22:25:32Z",
                    "changedFiles": 31,
                    "commentsCount": 0,
                    "id": "fc3777b1fe295fd2661f1974f5587d214791f04b",
                    "type": "Commit",
                    "message": "\"Add Profiler component for collecting new render timing info (#12745)\n\nAdd a new component type, Profiler, that can be used to collect new render time metrics. Since this is a new, experimental API, it will be exported as React.unstable_Profiler initially.\r\n\r\nMost of the functionality for this component has been added behind a feature flag, enableProfileModeMetrics. When the feature flag is disabled, the component will just render its children with no additional behavior. When the flag is enabled, React will also collect timing information and pass it to the onRender function (as described below).\""
                }
            },
            {
                "c": {
                    "additions": 368,
                    "deletions": 2,
                    "committedDate": "2018-03-14T20:07:58Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "bc70441c8b3fa85338283af3eeb47b5d15e9dbfe",
                    "type": "Commit",
                    "message": "\"RFC #30: React.forwardRef implementation (#12346)\n\nAdded React.forwardRef support to react-reconciler based renders and the SSR partial renderer.\""
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 1,
                    "committedDate": "2018-02-10T16:41:33Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "29e8924c70856bef9b11e0c74a450140bfcce773",
                    "type": "Commit",
                    "message": "\"Move ReactContext source to React package (#12205)\""
                }
            },
            {
                "c": {
                    "additions": 146,
                    "deletions": 21,
                    "committedDate": "2018-02-06T20:19:49Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "8dc8f88d5ae9fb96934ba43e3842b5dcf4074afd",
                    "type": "Commit",
                    "message": "\"Adds createRef() as per RFC (#12162)\n\n* Adds createRef() as per RFC\""
                }
            },
            {
                "c": {
                    "additions": 326,
                    "deletions": 350,
                    "committedDate": "2018-01-30T21:06:12Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "28aa084ad84a681be1c45def2f4b4c0dd8a43871",
                    "type": "Commit",
                    "message": "\"Switch to JSX API for context (#12123)\n\n* Switch to JSX API for context\r\n\r\n80% sure this will be the final API. Merging this now so we can get this\r\ninto the next www sync in preparation for 16.3.\r\n\r\n* Promote context to a stable API\""
                }
            },
            {
                "c": {
                    "additions": 131,
                    "deletions": 145,
                    "committedDate": "2018-01-30T03:11:59Z",
                    "changedFiles": 19,
                    "commentsCount": 0,
                    "id": "9ea55516e674c2de63b9f7829e3c459f3cb3cf78",
                    "type": "Commit",
                    "message": "\"Replace unstable_AsyncComponent with unstable_AsyncMode (#12117)\n\n* Replace unstable_AsyncComponent with Unstable_AsyncMode\r\n\r\nMirrors the StrictMode API and uses the new Mode type of work.\r\n\r\n* internalContextTag -> mode\r\n\r\nChange this now that we have a better name\r\n\r\n* Unstable_ -> unstable_\""
                }
            },
            {
                "c": {
                    "additions": 1607,
                    "deletions": 108,
                    "committedDate": "2018-01-25T03:36:22Z",
                    "changedFiles": 21,
                    "commentsCount": 0,
                    "id": "87ae211ccd8d61796cfdef138d1e12fb7a74f85d",
                    "type": "Commit",
                    "message": "\"New context API (#11818)\n\n* New context API\r\n\r\nIntroduces a declarative context API that propagates updates even when\r\nshouldComponentUpdate returns false.\r\n\r\n* Fuzz tester for context\r\n\r\n* Use ReactElement for provider and consumer children\r\n\r\n* Unify more branches in createFiberFromElement\r\n\r\n* Compare context values using Object.is\r\n\r\nSame semantics as PureComponent/shallowEqual.\r\n\r\n* Add support for Provider and Consumer to server-side renderer\r\n\r\n* Store providers on global stack\r\n\r\nRather than using a linked list stored on the context type. The global\r\nstack can be reset in case of an interruption or error, whereas with the\r\nlinked list implementation, youd need to keep track of every\r\ncontext type.\r\n\r\n* Put new context API behind a feature flag\r\n\r\nWell enable this in www only for now.\r\n\r\n* Store nearest provider on context object\r\n\r\n* Handle reentrancy in server renderer\r\n\r\nContext stack should be per server renderer instance.\r\n\r\n* Bailout of consumer updates using bitmask\r\n\r\nThe context type defines an optional function that compares two context\r\nvalues, returning a bitfield. A consumer may specify the bits it needs\r\nfor rendering. If a providers context changes, and the consumers bits\r\ndo not intersect with the changed bits, we can skip the consumer.\r\n\r\nThis is similar to how selectors are used in Redux but fast enough to do\r\nwhile scanning the tree. The only user code involved is the function\r\nthat computes the changed bits. But thats only called once per provider\r\nupdate, not for every consumer.\r\n\r\n* Store current value and changed bits on context object\r\n\r\nThere are fewer providers than consumers, so better to do this work\r\nat the provider.\r\n\r\n* Use maximum of 31 bits for bitmask\r\n\r\nThis is the largest integer size in V8 on 32-bit systems. Warn in\r\ndevelopment if too large a number is used.\r\n\r\n* ProviderComponent -> ContextProvider, ConsumerComponent -> ContextConsumer\r\n\r\n* Inline Object.is\r\n\r\n* Warn if multiple renderers concurrently render the same context provider\r\n\r\nLets see if we can get away with not supporting this for now. If it\r\nturns out that its needed, we can fall back to backtracking the\r\nfiber return path.\r\n\r\n* Nits that came up during review\""
                }
            },
            {
                "c": {
                    "additions": 278,
                    "deletions": 69,
                    "committedDate": "2018-01-25T01:49:43Z",
                    "changedFiles": 13,
                    "commentsCount": 0,
                    "id": "be51e6a41c096f33acf92a693026b80c98e7ddeb",
                    "type": "Commit",
                    "message": "\"Opt into unsafe lifecycle warnings without async tree (#12083)\n\nAdded new StrictMode component for enabling async warnings (without enabling async rendering). This component can be used in the future to help with other warnings (eg compilation, Fabric).\""
                }
            },
            {
                "c": {
                    "additions": 521,
                    "deletions": 508,
                    "committedDate": "2017-11-30T12:08:58Z",
                    "changedFiles": 21,
                    "commentsCount": 0,
                    "id": "3c977dea6b96f6a9bb39f09886848da870748441",
                    "type": "Commit",
                    "message": "\"react: convert var to let/const (#11715)\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 19,
                    "committedDate": "2017-11-27T21:09:15Z",
                    "changedFiles": 9,
                    "commentsCount": 0,
                    "id": "f6894dc48be2e389ffae03cea736122a971e3f76",
                    "type": "Commit",
                    "message": "\"Set fragment export flags to true (#11672)\""
                }
            },
            {
                "c": {
                    "additions": 147,
                    "deletions": 181,
                    "committedDate": "2017-11-22T18:08:22Z",
                    "changedFiles": 10,
                    "commentsCount": 0,
                    "id": "1cb6199d22af6f6ba2f55e4db18ed2f4216aaaf2",
                    "type": "Commit",
                    "message": "\" Consolidate all symbols in a single file (#11629)\n\n* Consolidate all symbols in a single file\r\n\r\nThis reduces the code duplication as we have quite a few now.\r\n\r\n* Record sizes\""
                }
            },
            {
                "c": {
                    "additions": 189,
                    "deletions": 139,
                    "committedDate": "2017-11-06T14:14:48Z",
                    "changedFiles": 18,
                    "commentsCount": 0,
                    "id": "46f7b0d9451c2ac6f5ec5efd2c12ba77a4e054d9",
                    "type": "Commit",
                    "message": "\"Fix dead code elimination for feature flags (#11453)\n\n* Fix dead code elimination for feature flags\r\n\r\nTurning flags into named exports fixes dead code elimination.\r\n\r\nThis required some restructuring of how we verify that flag types match up. I used the Check<> trick combined with import typeof, as suggested by @calebmer.\r\n\r\nFor www, we can no longer re-export `require(ReactFeatureFlags)` directly, and instead destructure it. This means flags have to be known at init time. This is already the case so its not a problem. In fact it may be better since it removes extra property access in tight paths.\r\n\r\nFor things that we *want* to be dynamic on www (currently, only performance flag) we can export a function to toggle it, and then put it on the secret exports. In fact this is better than just letting everyone mutate the flag at arbitrary times since we can provide, e.g., a ref counting interface to it.\r\n\r\n* Record sizes\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 359,
                    "committedDate": "2017-11-02T20:32:48Z",
                    "changedFiles": 179,
                    "commentsCount": 0,
                    "id": "45c1ff348e1c7d03567f5bba6cb32cffa9222972",
                    "type": "Commit",
                    "message": "\"Remove unnecessary use strict in the source (#11433)\n\n* Remove use strict from ES modules\r\n\r\n* Delete unused file\r\n\r\nThis was unused since Stack.\""
                }
            },
            {
                "c": {
                    "additions": 3236,
                    "deletions": 3439,
                    "committedDate": "2017-11-02T19:50:03Z",
                    "changedFiles": 234,
                    "commentsCount": 0,
                    "id": "21d0c115238b4f38837020cf83e0c657d8c01c9f",
                    "type": "Commit",
                    "message": "\"Convert the Source to ES Modules (#11389)\n\n* Update transforms to handle ES modules\r\n\r\n* Update Jest to handle ES modules\r\n\r\n* Convert react package to ES modules\r\n\r\n* Convert react-art package to ES Modules\r\n\r\n* Convert react-call-return package to ES Modules\r\n\r\n* Convert react-test-renderer package to ES Modules\r\n\r\n* Convert react-cs-renderer package to ES Modules\r\n\r\n* Convert react-rt-renderer package to ES Modules\r\n\r\n* Convert react-noop-renderer package to ES Modules\r\n\r\n* Convert react-dom/server to ES modules\r\n\r\n* Convert react-dom/{client,events,test-utils} to ES modules\r\n\r\n* Convert react-dom/shared to ES modules\r\n\r\n* Convert react-native-renderer to ES modules\r\n\r\n* Convert react-reconciler to ES modules\r\n\r\n* Convert events to ES modules\r\n\r\n* Convert shared to ES modules\r\n\r\n* Remove CommonJS support from transforms\r\n\r\n* Move ReactDOMFB entry point code into react-dom/src\r\n\r\nThis is clearer because we can use ES imports in it.\r\n\r\n* Fix Rollup shim configuration to work with ESM\r\n\r\n* Fix incorrect comment\r\n\r\n* Exclude external imports without side effects\r\n\r\n* Fix ReactDOM FB build\r\n\r\n* Remove TODOs I don\u2019t intend to fix yet\""
                }
            },
            {
                "c": {
                    "additions": 631,
                    "deletions": 600,
                    "committedDate": "2017-11-01T00:43:55Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "0e15ff5669271f5f5956e30a4fe1ae5963778e89",
                    "type": "Commit",
                    "message": "\"Put React.Fragment under a feature flag (#11421)\n\n* Put React.Fragment under a feature flag\r\n\r\n* Dont export undefined Fragment\""
                }
            },
            {
                "c": {
                    "additions": 1120,
                    "deletions": 149,
                    "committedDate": "2017-10-31T00:52:40Z",
                    "changedFiles": 10,
                    "commentsCount": 0,
                    "id": "4ce5da7aee90a373f2f36d1beb559097af30952e",
                    "type": "Commit",
                    "message": "\"Add Fragment as a named export to React (#10783)\n\n* Add Fragment as a named export to React\r\n\r\n* Remove extra tests for Fragment\r\n\r\n* Change React.Fragment export to be a string #fragment\r\n\r\n* Fix fragment special case to work with 1 child\r\n\r\n* Add single child test for fragment export\r\n\r\n* Move fragment definition to ReactEntry.js and render components for key warning tests\r\n\r\n* Inline createFiberFromElementType into createFiberFromElement\r\n\r\n* Update reconciliation to special case fragments\r\n\r\n* Use same semantics as implicit childsets for ReactFragment\r\n\r\n* Add more fragment state preservation tests\r\n\r\n* Export symbol instead of string for fragments\r\n\r\n* Fix rebase breakages\r\n\r\n* Re-apply prettier at 1.2.2\r\n\r\n* Merge branches in updateElement\r\n\r\n* Remove unnecessary check\r\n\r\n* Re-use createFiberFromFragment for fragment case\r\n\r\n* Simplyify branches by adding type field to fragment fiber\r\n\r\n* Move branching logic for fragments to broader methods when possible.\r\n\r\n* Add more tests for fragments\r\n\r\n* Address Dans feedback\r\n\r\n* Move REACT_FRAGMENT_TYPE into __DEV__ block for DCE\r\n\r\n* Change hex representation of REACT_FRAGMENT_TYPE to follow convention\r\n\r\n* Remove unnecessary branching and isArray checks\r\n\r\n* Update test for preserving children state when keys are same\r\n\r\n* Fix updateSlot bug and add more tests\r\n\r\n* Make fragment tests more robust by using ops pattern\r\n\r\n* Update jsx element validator to allow numbers and symbols\r\n\r\n* Remove type field from fragment fiber\r\n\r\n* Fork reconcileChildFibers instead of recursing\r\n\r\n* Use ternary if condition\r\n\r\n* Revamp fragment test suite:\r\n\r\n- Add more coverage to fragment tests\r\n- Use better names\r\n- Remove useless Fragment component inside tests\r\n- Remove useless tests so that tests are more concise\r\n\r\n* Check output of renderer in fragment tests to ensure no silly business despite states being preserved\r\n\r\n* Finish implementation of fragment reconciliation with desired behavior\r\n\r\n* Add reverse render direction for fragment tests\r\n\r\n* Remove unneeded fragment branch in updateElement\r\n\r\n* Add more test cases for ReactFragment\r\n\r\n* Handle childless fragment in reconciler\r\n\r\n* Support fragment flattening in SSR\r\n\r\n* Clean up ReactPartialRenderer\r\n\r\n* Warn when non-key and children props are passed to fragments\r\n\r\n* Add non-null key check back to updateSlots arrays case\r\n\r\n* Add test for positional reconciliation in fragments\r\n\r\n* Add warning for refs in fragments with stack trace\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 0,
                    "committedDate": "2017-10-27T16:38:59Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "cc54b6f48a532bf2073e8f7d888c6a3fcf416b63",
                    "type": "Commit",
                    "message": "\"Add a shim for React 16.0.0 future compatibility (#11388)\""
                }
            },
            {
                "c": {
                    "additions": 485,
                    "deletions": 500,
                    "committedDate": "2017-10-25T18:07:54Z",
                    "changedFiles": 87,
                    "commentsCount": 0,
                    "id": "087c48bb36b88ef0b5bbca2b9b70a52d8d413102",
                    "type": "Commit",
                    "message": "\"Reorder imports (#11359)\n\n* Reorder imports\r\n\r\n* Record sizes\""
                }
            },
            {
                "c": {
                    "additions": 1180,
                    "deletions": 1809,
                    "committedDate": "2017-10-24T23:55:00Z",
                    "changedFiles": 262,
                    "commentsCount": 0,
                    "id": "1eed302d346bfb8f5db8d88b0e7096d8999d3548",
                    "type": "Commit",
                    "message": "\"Drop Haste (#11303)\n\n* Use relative paths in packages/react\r\n\r\n* Use relative paths in packages/react-art\r\n\r\n* Use relative paths in packages/react-cs\r\n\r\n* Use relative paths in other packages\r\n\r\n* Fix as many issues as I can\r\n\r\nThis uncovered an interesting problem where ./b from package/src/a would resolve to a different instantiation of package/src/b in Jest.\r\n\r\nEither this is a showstopper or we can solve it by completely fobbidding remaining /src/.\r\n\r\n* Fix all tests\r\n\r\nIt seems we cant use relative requires in tests anymore. Otherwise Jest becomes confused between real file and symlink.\r\nhttps://github.com/facebook/jest/issues/3830\r\n\r\nThis seems bad... Except that we already *dont* want people to create tests that import individual source files.\r\nAll existing cases of us doing so are actually TODOs waiting to be fixed.\r\n\r\nSo perhaps this requirement isnt too bad because it makes bad code looks bad.\r\n\r\nOf course, if we go with this, well have to lint against relative requires in tests.\r\nIt also makes moving things more painful.\r\n\r\n* Prettier\r\n\r\n* Remove @providesModule\r\n\r\n* Fix remaining Haste imports I missed earlier\r\n\r\n* Fix up paths to reflect new flat structure\r\n\r\n* Fix Flow\r\n\r\n* Fix CJS and UMD builds\r\n\r\n* Fix FB bundles\r\n\r\n* Fix RN bundles\r\n\r\n* Prettier\r\n\r\n* Fix lint\r\n\r\n* Fix warning printing and error codes\r\n\r\n* Fix buggy return\r\n\r\n* Fix lint and Flow\r\n\r\n* Use Yarn on CI\r\n\r\n* Unbreak Jest\r\n\r\n* Fix lint\r\n\r\n* Fix aliased originals getting included in DEV\r\n\r\nShouldnt affect correctness (they were ignored) but fixes DEV size regression.\r\n\r\n* Record sizes\r\n\r\n* Fix weird version in package.json\r\n\r\n* Tweak bundle labels\r\n\r\n* Get rid of output option by introducing react-dom/server.node\r\n\r\n* Reconciler should depend on prop-types\r\n\r\n* Update sizes last time\""
                }
            },
            {
                "c": {
                    "additions": 193,
                    "deletions": 197,
                    "committedDate": "2017-10-19T18:50:24Z",
                    "changedFiles": 145,
                    "commentsCount": 0,
                    "id": "313611572b6567d229367ed20ff63d1bca8610bb",
                    "type": "Commit",
                    "message": "\"Reorganize code structure (#11288)\n\n* Move files and tests to more meaningful places\r\n\r\n* Fix the build\r\n\r\nNow that we import reconciler via react-reconciler, I needed to make a few tweaks.\r\n\r\n* Update sizes\r\n\r\n* Move @preventMunge directive to FB header\r\n\r\n* Revert unintentional change\r\n\r\n* Fix Flow coverage\r\n\r\nI forgot to @flow-ify those files. This uncovered some issues.\r\n\r\n* Prettier, I love you but youre bringing me down\r\nPrettier, I love you but youre bringing me down\r\n\r\nLike a rat in a cage\r\nPulling minimum wage\r\nPrettier, I love you but youre bringing me down\r\n\r\nPrettier, youre safer and youre wasting my time\r\nOur records all show you were filthy but fine\r\nBut they shuttered your stores\r\nWhen you opened the doors\r\nTo the cops who were bored once theyd run out of crime\r\n\r\nPrettier, youre perfect, oh, please dont change a thing\r\nYour mild billionaire mayors now convinced hes a king\r\nSo the boring collect\r\nI mean all disrespect\r\nIn the neighborhood bars Id once dreamt I would drink\r\n\r\nPrettier, I love you but youre freaking me out\r\nTheres a ton of the twist but were fresh out of shout\r\nLike a death in the hall\r\nThat you hear through your wall\r\nPrettier, I love you but youre freaking me out\r\n\r\nPrettier, I love you but youre bringing me down\r\nPrettier, I love you but youre bringing me down\r\nLike a death of the heart\r\nJesus, where do I start?\r\nBut youre still the one pool where Id happily drown\r\n\r\nAnd oh! Take me off your mailing list\r\nFor kids who think it still exists\r\nYes, for those who think it still exists\r\nMaybe Im wrong and maybe youre right\r\nMaybe Im wrong and maybe youre right\r\nMaybe youre right, maybe Im wrong\r\nAnd just maybe youre right\r\n\r\nAnd oh! Maybe mother told you true\r\nAnd therell always be somebody there for you\r\nAnd youll never be alone\r\nBut maybe shes wrong and maybe Im right\r\nAnd just maybe shes wrong\r\nMaybe shes wrong and maybe Im right\r\nAnd if so, heres this song!\""
                }
            },
            {
                "c": {
                    "additions": 75,
                    "deletions": 1769,
                    "committedDate": "2017-05-30T14:35:30Z",
                    "changedFiles": 12,
                    "commentsCount": 0,
                    "id": "fedb2ff8ecd96d11ff3f609fbffa76848203f255",
                    "type": "Commit",
                    "message": "\"Remove createClass, PropTypes, DOM factories, and createMixin from React object (#9788)\""
                }
            },
            {
                "c": {
                    "additions": 161,
                    "deletions": 108,
                    "committedDate": "2017-05-23T16:35:42Z",
                    "changedFiles": 15,
                    "commentsCount": 0,
                    "id": "964c263d8fc6e7119f5773f7fa857c9985db40cf",
                    "type": "Commit",
                    "message": "\"Downgrade deprecation warnings from errors to warnings (#9650)\n\n* Initial regeneration of results.json\r\n\r\n**what is the change?:**\r\nWe ran `yarn build` and updated the perf. stats record.\r\n\r\n**why make this change?:**\r\nSome commits have landed without updating this. By getting an initial update, I can run the build script again after my changes and see any size regressions.\r\n\r\n* Downgrade deprecation warnings from errors to warnings\r\n\r\n**what is the change?:**\r\nSwapping out `warning` module for a fork that uses `console.warn`.\r\nIt looks like we were using the `warning` module for deprecation notices, *but* there is also a deprecated module designed specifically for deprecation notices.\r\n\r\nHowever, we could not find any place that it was currently used.\r\n\r\nSince Reacts build process is not 100% clear to me, I assume it could still be used somewhere by something and just updated it along with other deprecation notices.\r\n\r\nWe might consider a follow-up diff that does some clean up here;\r\n - remove deprecated module if its unused, OR\r\n - use deprecated module for all our current deprecation warnings\r\n\r\n**why make this change?:**\r\n- We have had complaints about noisy warnings, in particular after introducing new deprecations\r\n- They potentially cause CI failures\r\n- Deprecations are not really time-sensitive, can ship without breaking your app, etc.\r\n\r\nFor more context - https://github.com/facebook/react/issues/9395\r\n\r\n**test plan:**\r\n`npm run test`\r\nand unit tests for the new modules\r\nand manual testing (WIP)\r\n\r\n**issue:**\r\nhttps://github.com/facebook/react/issues/9395\r\n\r\n* Add lowPriorityWarning to ReactExternals\r\n\r\n**what is the change?:**\r\nWe wont bundle lowPriorityWarning with the rest of React when building for Facebook.\r\nNOTE: A parallel commit will introduce an internal implementation of lowPriorityWarning in Facebooks codebase, to compensate. Will post a comment with the diff number once that is up.\r\n\r\n**why make this change?:**\r\nSo that the sync between github and Facebook can go more smoothly!\r\n\r\n**test plan:**\r\nWe will see when I run the sync! But this is a reasonable first step imo.\r\n\r\n**issue:**\r\nhttps://github.com/facebook/react/issues/9398\r\n\r\n* Make state mutations an error, not low-pri warning\r\n\r\n**what is the change?:**\r\nEven though this is a \"deprecation\" warning, we still want to use console.error for it.\r\n\r\n**why make this change?:**\r\n- Its not likely to come up now, hopefully, because this warning has been present for some time\r\n- This will cause real issues in production if ignored\r\n\r\n**test plan:**\r\n`yarn test` - we did fix one test which failed bc of this change\r\n\r\n**issue:**\r\nhttps://github.com/facebook/react/issues/9398\r\n\r\n* Fix test of assigning to this.state that was only passing in fiber\r\n\r\n**what is the change?:**\r\nupdated a unit test for assigning directly to state; it once again raises an error and not a warning.\r\n\r\n**why make this change?:**\r\nSo that tests pass\r\n\r\n**test plan:**\r\n REACT_DOM_JEST_USE_FIBER=1 yarn run test\r\n\r\n**issue:**\r\n\r\n* Update results.json\""
                }
            },
            {
                "c": {
                    "additions": 12,
                    "deletions": 4,
                    "committedDate": "2017-04-25T01:45:43Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "e71b3087c81d95c3e7d3f015d0db60436c95fe6c",
                    "type": "Commit",
                    "message": "\"Added stack renderer to react-test-renderer bundle temporarily (#9514)\n\nAlso fixed an error in a temporary export property that had been added to the React object\""
                }
            },
            {
                "c": {
                    "additions": 123,
                    "deletions": 16,
                    "committedDate": "2017-04-24T15:08:17Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "86dd083f455f71369b4c1bf1e798dd2fd5a3c9c4",
                    "type": "Commit",
                    "message": "\"Move ReactDOMFactories into separate package (#8356)\n\n- Update examples to no longer use React.DOM\r\n- Add package and documentation entries for react-addons-dom-factories\r\n- Update dom-factories readme\r\n- Set up proxy to intercept React.DOM usage\r\n- Update ReactDOM children tests to use createElement\r\n- Add more specific warning assertion for React DOM factories\r\n- Do not use expectDev in ReactDOMFactories tests\""
                }
            },
            {
                "c": {
                    "additions": 755,
                    "deletions": 341,
                    "committedDate": "2017-04-19T23:45:31Z",
                    "changedFiles": 24,
                    "commentsCount": 0,
                    "id": "66f2097f33a3084c79aa536e11d3ca09195bc320",
                    "type": "Commit",
                    "message": "\"Shallow renderer and test utils bundles (#9426)\n\nShallow renderer and test utils bundles\r\n\r\nAdds new bundles introduced with React 15.5 release to master (and 16 alpha)\r\n\r\nreact-dom/test-utils:\r\n\r\nThis new bundle contains what used to be react-addons-test-utils. This bundle shares things from react-dom rather than duplicates them.\r\n\r\nA temporary createRenderer method has been left behind as a way to access the new shallow renderer. This is for the ReactNative release cycle only and should be going away before the final release.\r\n\r\nreact-test-renderer/shallow:\r\n\r\nThis new shallow renderer is almost entirely stand-alone (in that it doesnt use the React reconciler or scheduler). The only touch points are ReactElement and prop/context validation. This renderer is stack and fiber compatible.\""
                }
            },
            {
                "c": {
                    "additions": 734,
                    "deletions": 1397,
                    "committedDate": "2017-04-11T21:28:03Z",
                    "changedFiles": 59,
                    "commentsCount": 0,
                    "id": "2beec2f308e27dbe902a8d68e1fc9f3d70ee9372",
                    "type": "Commit",
                    "message": "\"createClass + PropTypes + checkPropTypes warnings (#9399)\n\n(Temporarily) re-adds getters with deprecation warnings for React.PropTypes, React.checkPropTypes, and React.createClass.\r\n\r\n* 08bd020: Replace all references to React.PropTypes with prop-types to avoid triggering our own warning message.\r\n* ef5b5c6: Removed several references to React.createClass that appeared after rebasing this branch. (reviewed by @flarnie)\r\n* 524ce20: Added getters for createClass and PropTypes to the main React isomorphic object, behind one-time warning messages. (reviewed by @spicyj)\r\n* db48f54: Fixed Rollup bundles to inline prop-types and create-react-class for UMD builds only. (reviewed by @spicyj, @trueadm )\r\n* cf49cfd: Updated tests-passing.txt to remove tests that were deleted in this branch.\r\n* d34109a: Responses to PR feedback from @spicyj. (Added package.json dependencies to packages/react and packages/react-dom. Renamed a var. Expanded on an inline comment.)\r\n* 488c8d2: Added warning for moved package to React.checkPropTypes accessor too and updated build script.\r\n* 83bcb29: Wordsmithing for deprecation notices (added fb.me links).\r\n* afdc9d2: Tweaked legacy module inlining to remove order-of-deps constraint\r\n* d1348b9: Removed $FlowFixMe.\r\n* 7dbc3e7: More wordsmithing of deprecation notices based on Dans feedback.\""
                }
            },
            {
                "c": {
                    "additions": 33,
                    "deletions": 43,
                    "committedDate": "2017-04-11T00:06:32Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "957fbc92b123030c389bf8b4b874522bdf2db72c",
                    "type": "Commit",
                    "message": "\"react-create-class -> create-react-class\""
                }
            },
            {
                "c": {
                    "additions": 46,
                    "deletions": 15,
                    "committedDate": "2017-04-11T00:03:05Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "646e7863348a427e1ed9163a9a96fa759112f102",
                    "type": "Commit",
                    "message": "\"Warn once when attempting to access React.createClass\n\nShould still be undefined.\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 2073,
                    "committedDate": "2017-04-11T00:03:05Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "5cfaa7cf68564b8d96c94fa0d45e7feb6dc80895",
                    "type": "Commit",
                    "message": "\"Delete createClass\n\nRemove createClass from isomorphic package\""
                }
            },
            {
                "c": {
                    "additions": 509,
                    "deletions": 398,
                    "committedDate": "2017-04-07T21:07:10Z",
                    "changedFiles": 48,
                    "commentsCount": 0,
                    "id": "72196da82915bee400edb1599d4223926aa2a8a0",
                    "type": "Commit",
                    "message": "\"Replace shims with explicit React access from the renderers for shared global state (#9366)\n\n* Remove non-existent /lib/ from souce files\r\n\r\n* Replace all shims with explicit access\r\n\r\nThis deletes shims and changes to access require(react).__DO_NOT_USE__ from renderers for global shared state.\r\n\r\nI cloned flattenChildren() and traverseAllChildren() because they relied on CurrentOwner but were used both from Stack and Isomorphic. The stack implementations will die, and the isomorphic ones can be changed to be optimized for Children specifically in the future.\r\n\r\nI also deleted UMD shims because they are now unnecessary. I moved the internals assignment to main modules since theyre now used in tests, and made them direct UMD entry points.\""
                }
            },
            {
                "c": {
                    "additions": 12794,
                    "deletions": 11435,
                    "committedDate": "2017-03-14T22:33:27Z",
                    "changedFiles": 328,
                    "commentsCount": 0,
                    "id": "b1b4a2fb252f26fe10d29ba60d85ff89a85ff3ec",
                    "type": "Commit",
                    "message": "\"Merge pull request #9101 from sebmarkbage/prettier\n\nUse Prettier\""
                }
            },
            {
                "c": {
                    "additions": 12714,
                    "deletions": 11413,
                    "committedDate": "2017-03-14T00:05:18Z",
                    "changedFiles": 325,
                    "commentsCount": 0,
                    "id": "1843f8716803d380df34a7362d80022352853931",
                    "type": "Commit",
                    "message": "\"Run prettier\""
                }
            },
            {
                "c": {
                    "additions": 2973,
                    "deletions": 1895,
                    "committedDate": "2017-03-01T12:32:36Z",
                    "changedFiles": 275,
                    "commentsCount": 0,
                    "id": "8bc11649df767402c262b6c9b67c6dd811d42cd0",
                    "type": "Commit",
                    "message": "\"Merge branch master into remove-stack-dependencies-from-tests\""
                }
            },
            {
                "c": {
                    "additions": 615,
                    "deletions": 478,
                    "committedDate": "2017-03-01T02:42:52Z",
                    "changedFiles": 247,
                    "commentsCount": 0,
                    "id": "e452e3374135c116ef687a8bb3a5d277e3cde8fb",
                    "type": "Commit",
                    "message": "\"providesModule -> explicit requires for cross-package dependencies (#9078)\n\n* Add forwarding modules\r\n\r\n* Codemod to use full package path outside of own package\r\n\r\nFiles that require modules from a different package than their own now\r\ndoes so by the npm path name instead of the providesModule.\r\n\r\n* Codemod fbjs module dependencies\r\n\r\n* Fix gulp module mapping config\r\n\r\nThis is a bit lame but because of our module rewrite we need to white\r\nlist all the paths that we dont *dont* want to rewrite.\""
                }
            },
            {
                "c": {
                    "additions": 312,
                    "deletions": 277,
                    "committedDate": "2017-02-23T22:37:19Z",
                    "changedFiles": 16,
                    "commentsCount": 0,
                    "id": "f3c2d9f308eeee49d9c580c063ec7a109e9ad635",
                    "type": "Commit",
                    "message": "\"Merge pull request #9004 from acdlite/proptypescheck\n\nAPI for checking external objects against React prop types\""
                }
            },
            {
                "c": {
                    "additions": 23,
                    "deletions": 20,
                    "committedDate": "2017-02-23T19:14:15Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "03ed3437c988f294045770bf403839603ce00ae9",
                    "type": "Commit",
                    "message": "\"Fix build config\n\nReactDebugCurrentFrame is shared state.\n\ncheckPropTypes should be imported via the main React export,\nnot imported directly.\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 26,
                    "committedDate": "2017-02-10T20:27:02Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "77c7792556e4697636d1eb5dc34042566185c26c",
                    "type": "Commit",
                    "message": "\"Remove React.__spread\""
                }
            },
            {
                "c": {
                    "additions": 32,
                    "deletions": 47,
                    "committedDate": "2017-02-02T20:24:39Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "7e8068b9840dd98813787736385919683ddf2002",
                    "type": "Commit",
                    "message": "\"Move component base classes into a single file (#8918)\""
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 1,
                    "committedDate": "2017-01-24T06:18:23Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "2be0583ed37ffc22fefe61292a12daee083e6ed9",
                    "type": "Commit",
                    "message": "\"Update deprecation wording to be less aggressive\""
                }
            },
            {
                "c": {
                    "additions": 19,
                    "deletions": 7,
                    "committedDate": "2017-01-24T06:18:23Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "2b7814f713629d3f629ea9d74f349b77369fdae3",
                    "type": "Commit",
                    "message": "\"Deprecate React.createMixin\n\nThis API was never fully implemented. Since mixins are no longer considered part of the future React API, it will be removed.\""
                }
            },
            {
                "c": {
                    "additions": 219,
                    "deletions": 28,
                    "committedDate": "2016-07-06T20:24:44Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "c8fbdac22717e91d1f1638a932eed3ce4cc39ff7",
                    "type": "Commit",
                    "message": "\"Add React.PureComponent (#7195)\n\nThis provides an easy way to indicate that components should only rerender when given new props, like PureRenderMixin. If you rely on mutation in your React components, you can continue to use `React.Component`.\r\n\r\nInheriting from `React.PureComponent` indicates to React that your component doesnt need to rerender when the props are unchanged. Well compare the old and new props before each render and short-circuit if theyre unchanged. Its like an automatic shouldComponentUpdate.\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 2,
                    "committedDate": "2016-05-22T09:01:21Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "d955ee9fae71e2037e9c876e2ab8cb537a8c7e43",
                    "type": "Commit",
                    "message": "\"Move ReactElementValidator to __DEV__ block (#6830)\n\nIt saves some more bytes in production mode.\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 129,
                    "committedDate": "2016-04-20T02:35:30Z",
                    "changedFiles": 8,
                    "commentsCount": 0,
                    "id": "6c885d28c51ea30af0d8a4031dedcea98ef4114c",
                    "type": "Commit",
                    "message": "\"Remove duplicates and move files out of native/vendor\n\nMoving the event plugins into their dedicated folder\n\nRemoving the ExecutionEnvironment override. I will just have to fix where needed. Probably related to the Chrome debugger?\""
                }
            },
            {
                "c": {
                    "additions": 4377,
                    "deletions": 0,
                    "committedDate": "2016-04-20T02:35:30Z",
                    "changedFiles": 35,
                    "commentsCount": 0,
                    "id": "f463b731ee5fce75ccf1df43d6174527016a0379",
                    "type": "Commit",
                    "message": "\"Copy files from the react-native repo\""
                }
            },
            {
                "c": {
                    "additions": 44,
                    "deletions": 11,
                    "committedDate": "2016-04-08T00:30:44Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "516c1d809ea56dbd109f54712efea6923ac76ee6",
                    "type": "Commit",
                    "message": "\"Merge pull request #6444 from zpao/re__spreadwarn\n\nAdd back React.__spread and make it warn\""
                }
            },
            {
                "c": {
                    "additions": 43,
                    "deletions": 13,
                    "committedDate": "2016-04-08T00:30:23Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "fc1cfb6225f5c3af6843515363db63ed3dcbb824",
                    "type": "Commit",
                    "message": "\"Make React.__spread warn\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 0,
                    "committedDate": "2016-04-07T23:16:37Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "f02d87bdb55ebd84943c5da5d6de92e3488fa2bc",
                    "type": "Commit",
                    "message": "\"Revert \"Merge pull request #6431 from sebmarkbage/killspread\"\n\nThis reverts commit a37e4e94fcae9424094378349dc11bafe1e47973, reversing\nchanges made to 411951d5b8a4a467adc213d4533c87a7c3b06bf8.\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 3,
                    "committedDate": "2016-04-07T01:42:45Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "a37e4e94fcae9424094378349dc11bafe1e47973",
                    "type": "Commit",
                    "message": "\"Merge pull request #6431 from sebmarkbage/killspread\n\nKill React.__spread\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 3,
                    "committedDate": "2016-04-07T00:08:50Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "a142fd257803a218b5b9b2e76c327f0421b9b8b6",
                    "type": "Commit",
                    "message": "\"Kill React.__spread\n\nThis was only for a JSTransform related experiment that is now\ndead along with JSTransform.\""
                }
            },
            {
                "c": {
                    "additions": 123,
                    "deletions": 150,
                    "committedDate": "2016-04-04T17:21:39Z",
                    "changedFiles": 45,
                    "commentsCount": 0,
                    "id": "80bff5397bf854750dbe7c286f61654ea58938c5",
                    "type": "Commit",
                    "message": "\"Merge pull request #6376 from zpao/object.assign\n\nUse object-assign instead of our own dated \"polyfill\"\""
                }
            },
            {
                "c": {
                    "additions": 123,
                    "deletions": 150,
                    "committedDate": "2016-04-04T16:53:25Z",
                    "changedFiles": 45,
                    "commentsCount": 0,
                    "id": "1573baaee8ba1c9cd84145b01effcb5eb80503fb",
                    "type": "Commit",
                    "message": "\"Use Object.assign directly and inject object-assign at compile\""
                }
            },
            {
                "c": {
                    "additions": 38,
                    "deletions": 26,
                    "committedDate": "2016-03-24T23:01:51Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "6a8ebfc41842fb200c87a919478dcd3aa95be0d7",
                    "type": "Commit",
                    "message": "\"Merge pull request #6331 from zpao/isonpmorphic\n\nMake Browserify-specific modules to remove DOM dependencies from npm package\""
                }
            },
            {
                "c": {
                    "additions": 38,
                    "deletions": 26,
                    "committedDate": "2016-03-24T22:28:52Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "d17091ddebf317173eb30e3ab4a8e28e124c8f50",
                    "type": "Commit",
                    "message": "\"Make Browserify-specific modules to remove DOM dependencies from npm package\""
                }
            },
            {
                "c": {
                    "additions": 1629,
                    "deletions": 982,
                    "committedDate": "2016-01-14T10:38:07Z",
                    "changedFiles": 322,
                    "commentsCount": 0,
                    "id": "209b7522d99a8af36f8d9e06ce622c59b793e5a3",
                    "type": "Commit",
                    "message": "\"update zh-docs14.3 ,fixed confliction\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 42,
                    "committedDate": "2016-01-13T23:41:03Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "fcc63e1fff7709d8cc749a6a54f788b0a5ab0983",
                    "type": "Commit",
                    "message": "\"Merge pull request #5832 from jimfb/cleanup-top-level-dom-api\n\nRemove DOM functions from top-level isomorphic API\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 42,
                    "committedDate": "2016-01-12T07:57:08Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "2e1fb4b52972711199d5065625251642f7d75c29",
                    "type": "Commit",
                    "message": "\"Remove DOM functions from top-level isomorphic API\""
                }
            },
            {
                "c": {
                    "additions": 283,
                    "deletions": 283,
                    "committedDate": "2015-12-30T07:24:24Z",
                    "changedFiles": 283,
                    "commentsCount": 0,
                    "id": "3b96650e39ddda5ba49245713ef16dbc52d25e9e",
                    "type": "Commit",
                    "message": "\"Merge pull request #5748 from rickbeerendonk/year-agnostic-copyright\n\nYear-agnostic copyright message, like React Native uses, to prevent the need for yearly changes.\""
                }
            },
            {
                "c": {
                    "additions": 283,
                    "deletions": 283,
                    "committedDate": "2015-12-29T19:20:32Z",
                    "changedFiles": 283,
                    "commentsCount": 0,
                    "id": "bef45b0b1a98ea9b472ba664d955a039cf2f8068",
                    "type": "Commit",
                    "message": "\"Year-agnostic copyright message, like React Native uses, to prevent the need for yearly changes.\""
                }
            },
            {
                "c": {
                    "additions": 64,
                    "deletions": 0,
                    "committedDate": "2015-11-18T00:48:08Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "c07b304c76ac9cdc4bae875391e7902cf0e8e2f3",
                    "type": "Commit",
                    "message": "\"Merge pull request #5381 from kevinrobinson/react-dom-server-package\n\nAdd additional secret property to build artifact for react-dom-server\""
                }
            },
            {
                "c": {
                    "additions": 64,
                    "deletions": 0,
                    "committedDate": "2015-11-03T21:39:58Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "45c612ed7a56b91f4c1d056c824de54673a2c241",
                    "type": "Commit",
                    "message": "\"Add additional secret property and build for react-dom-server\n\nUpdate eslintrc, travis build and add task to Gruntfile\""
                }
            },
            {
                "c": {
                    "additions": 96,
                    "deletions": 20,
                    "committedDate": "2015-09-09T05:33:08Z",
                    "changedFiles": 10,
                    "commentsCount": 0,
                    "id": "69ab7145bc36a500195ccf0e2937ded21520582f",
                    "type": "Commit",
                    "message": "\"Merge pull request #4814 from zpao/build-react-dom-browser-2\n\nBuild react dom browser 2\""
                }
            },
            {
                "c": {
                    "additions": 23,
                    "deletions": 8,
                    "committedDate": "2015-09-08T23:30:05Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "c0270a167397f7083f77012d43180cc22bbae13e",
                    "type": "Commit",
                    "message": "\"Merge pull request #4798 from zpao/pull-out-version\n\nMove version to standalone module in preparation for reuse\""
                }
            },
            {
                "c": {
                    "additions": 63,
                    "deletions": 0,
                    "committedDate": "2015-09-09T05:18:44Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "b2ca3349c27b57b1e9462944cbe4aaaf76783d2b",
                    "type": "Commit",
                    "message": "\"Actually build react-dom file with the build\""
                }
            },
            {
                "c": {
                    "additions": 23,
                    "deletions": 8,
                    "committedDate": "2015-09-08T17:18:41Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "58d62989bd4e8da32e58db35a96868ef2258c2c9",
                    "type": "Commit",
                    "message": "\"Move version to standalone module in preparation for reuse\""
                }
            },
            {
                "c": {
                    "additions": 70,
                    "deletions": 75,
                    "committedDate": "2015-09-01T21:40:48Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "4b9c349fd057b3c4b1a0fab5fbdf5bd0c625db8d",
                    "type": "Commit",
                    "message": "\"Merge pull request #4702 from spicyj/react-mod-depr\n\nAdd deprecation warnings to React module\""
                }
            },
            {
                "c": {
                    "additions": 48,
                    "deletions": 57,
                    "committedDate": "2015-09-01T21:36:41Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "c04d02e5e8de18436ac95037ab856ac5ba7d29b9",
                    "type": "Commit",
                    "message": "\"Add warnings to React module\""
                }
            },
            {
                "c": {
                    "additions": 7,
                    "deletions": 7,
                    "committedDate": "2015-08-03T21:24:24Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "3f6bca7b1638ee940bb01989377abc9864edb6fe",
                    "type": "Commit",
                    "message": "\"0.14.0-beta3\""
                }
            },
            {
                "c": {
                    "additions": 7,
                    "deletions": 7,
                    "committedDate": "2015-07-31T04:29:09Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "681bbb629fa80a67fa79ced11e5a4cad6c1878fe",
                    "type": "Commit",
                    "message": "\"0.14.0-beta2\""
                }
            },
            {
                "c": {
                    "additions": 10,
                    "deletions": 10,
                    "committedDate": "2015-07-23T18:27:25Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "d16481d0e7d23771c5d94e5a0eeaf64e02f07979",
                    "type": "Commit",
                    "message": "\"Merge pull request #4453 from spicyj/react-dom\n\nRename ReactDOMClient to ReactDOM\""
                }
            },
            {
                "c": {
                    "additions": 10,
                    "deletions": 10,
                    "committedDate": "2015-07-22T02:30:09Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "6c20271488d8abfa82dda14fd8d2a947549c21d7",
                    "type": "Commit",
                    "message": "\"Rename ReactDOMClient to ReactDOM\n\nThis closer matches the npm package name and (I assume) is what we want to call it internally.\""
                }
            },
            {
                "c": {
                    "additions": 7,
                    "deletions": 7,
                    "committedDate": "2015-07-03T08:46:35Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "b4e74e38e43ac53af8acd62c78c9213be0194245",
                    "type": "Commit",
                    "message": "\"Bump version to beta1\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2015-05-27T23:47:35Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "8471cc5f47bac0dbfd6b3123775fc28757db0ed3",
                    "type": "Commit",
                    "message": "\"0.14.0-alpha3\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2015-05-20T20:37:42Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "b687a229530dc304fbb74018027156968258c295",
                    "type": "Commit",
                    "message": "\"0.14.0-alpha2\""
                }
            },
            {
                "c": {
                    "additions": 138,
                    "deletions": 51,
                    "committedDate": "2015-05-16T01:39:36Z",
                    "changedFiles": 261,
                    "commentsCount": 0,
                    "id": "52752446760dee0bc7232b4146f5a309ac57f065",
                    "type": "Commit",
                    "message": "\"Merge pull request #3866 from sebmarkbage/coreapi\n\nReorganize Src Directory for Isomorphic React Package\""
                }
            },
            {
                "c": {
                    "additions": 138,
                    "deletions": 51,
                    "committedDate": "2015-05-16T01:35:22Z",
                    "changedFiles": 261,
                    "commentsCount": 0,
                    "id": "0b063f8a09dae4b6b1de400ff2d9aba9108647de",
                    "type": "Commit",
                    "message": "\"Reorganize Src Files for Isomorphic React Package\n\nThe new folder structure is organized around major packages that are expected to ship separately in some form.\n\n`/isomorphic`\n\nI moved classic/modern and children utils into a directory called \"isomorphic\" with the main export being ReactIsomorphic. This will eventually become the \"react\" package.\n\nThis includes all the dependencies that you might need to create a component without dependencies on the renderer/reconciler.\n\nThe rest moves into decoupled renderers.\n\n`/renderers/dom/client` - This is the main renderer for DOM.\n\n`/renderers/dom/server` - This is the server-side renderer for HTML strings.\n\n`/addons` and `/test` - Same as before for now.\n\nYoure not supposed to take on a dependency inside another package.\n\nShared code is organized into a \"shared\" directory which is intended to support all the packages in that subdirectory. Meaning that once we swap to CommonJS modules, the only time you should use `..` is to target `../shared/` or `../../shared`.\n\nE.g. `/shared/` is common utils that are used by everything.\n\n`/renderers/shared/` is code that is shared by all renderers, such as the main reconciliation algorithm.\n\nShared code will likely be copied into each package rather than referenced. This allow us to have separate state and allow inlining and deadcode elimination.\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2015-05-11T05:36:50Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "7839e072313db4a21c246bb1e35e1f510139bb12",
                    "type": "Commit",
                    "message": "\"0.14.0-alpha1\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 2,
                    "committedDate": "2015-04-22T16:45:26Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "4f285b7ba07b3153a0b9b61c35fc05da37ebdd9e",
                    "type": "Commit",
                    "message": "\"Merge pull request #3676 from zpao/rm-withContext\n\nRemove withContext from top-level API\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 2,
                    "committedDate": "2015-04-16T22:58:27Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "5297ff66cf8f9b6459d6cf73d4e3a54cc010b34d",
                    "type": "Commit",
                    "message": "\"Remove withContext from top-level API\""
                }
            },
            {
                "c": {
                    "additions": 428,
                    "deletions": 428,
                    "committedDate": "2015-04-20T18:02:29Z",
                    "changedFiles": 141,
                    "commentsCount": 0,
                    "id": "088d71c7c1eaef9a14ccccabe05b73a57c755703",
                    "type": "Commit",
                    "message": "\"Merge pull request #3693 from reedloden/swap-http-to-https\n\nSSL/TLSize all the things! (convert http:// to https:// where appropriate)\""
                }
            },
            {
                "c": {
                    "additions": 428,
                    "deletions": 428,
                    "committedDate": "2015-04-18T23:49:32Z",
                    "changedFiles": 141,
                    "commentsCount": 0,
                    "id": "3e8951e8c7dcb44035c8524c0fd82967652d41dd",
                    "type": "Commit",
                    "message": "\"SSL/TLSize all the things! (convert http:// to https:// where appropriate)\n\nUpdate links to use https:// where it is supported. Theres probably a lot\nmore that could be fixed, but these are the core ones I found (especially\nthe download links in order to prevent MITM attacks). Note that there are\nsome fb.me links that will redirect to http:// even while accessed over\nhttps://, but this seemed like the best way to fix those for now.\n\nNOTE: Only non-third-party files were modified. There are references to\nhttp:// URLs in vendored/third-party files, but seems appropriate to fix\nupstream for those rather than editing the files.\n\nAlso, copy one image locally to the blog, as it was hotlinking to a site\nthat did not support https://.\n\nLast, use youtube-nocookie.com instead of youtube.com for video embeds,\nas the former doesnt try to set a cookie on load (privacy enhancement).\""
                }
            },
            {
                "c": {
                    "additions": 5,
                    "deletions": 26,
                    "committedDate": "2015-04-10T20:54:57Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "88fb106c39545fdfea71e56f55418b8058e6b3e6",
                    "type": "Commit",
                    "message": "\"Merge pull request #3646 from facebook/revert-3580-2402-warn-multiple-copies-of-react-on-same-page\n\nRevert \"Warn when multiple instances of React are loaded on the same page\"\""
                }
            },
            {
                "c": {
                    "additions": 5,
                    "deletions": 26,
                    "committedDate": "2015-04-10T19:34:04Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "8fa15080b2eafa0ab998f0e3745971af40e13e69",
                    "type": "Commit",
                    "message": "\"Revert \"Warn when multiple instances of React are loaded on the same page\"\""
                }
            },
            {
                "c": {
                    "additions": 26,
                    "deletions": 5,
                    "committedDate": "2015-04-09T02:18:44Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "f1cd867323c420c577f82628ba498637a3d6e5f7",
                    "type": "Commit",
                    "message": "\"Merge pull request #3580 from robertknight/2402-warn-multiple-copies-of-react-on-same-page\n\nWarn when multiple instances of React are loaded on the same page\""
                }
            },
            {
                "c": {
                    "additions": 26,
                    "deletions": 5,
                    "committedDate": "2015-04-03T10:46:58Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "8ad58ae45a4fd3a5def5732fc377f1351950c4dd",
                    "type": "Commit",
                    "message": "\"Warn when multiple instances of React are loaded on the same page\n\nThis causes a variety of hard-to-debug issues.\nSee #2402 for examples.\n\nFixes #2402\""
                }
            },
            {
                "c": {
                    "additions": 8,
                    "deletions": 35,
                    "committedDate": "2015-03-19T21:15:26Z",
                    "changedFiles": 8,
                    "commentsCount": 0,
                    "id": "7fe5a3aadd308961d5557ba1060eaca14a22f825",
                    "type": "Commit",
                    "message": "\"Merge pull request #3442 from spicyj/kill-initializeTouchEvents\n\nKill React.initializeTouchEvents for good\""
                }
            },
            {
                "c": {
                    "additions": 8,
                    "deletions": 35,
                    "committedDate": "2015-03-17T21:12:26Z",
                    "changedFiles": 8,
                    "commentsCount": 0,
                    "id": "9c4c2f58ea103f84c055d2241c0f178c79d90fd9",
                    "type": "Commit",
                    "message": "\"Kill React.initializeTouchEvents for good\n\nNow that #1169 is fixed, the only thing this is used for is to determine whether `onTouchTap` causes touch listeners to be added. The only internal uses of TapEventPlugin are where touch events are already initialized (so this doesnt make a difference) and we dont support `onTouchTap` as part of the public API so this should be safe.\""
                }
            },
            {
                "c": {
                    "additions": 10,
                    "deletions": 10,
                    "committedDate": "2015-03-17T21:14:57Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "26664315a61af6a39441387be8bd5f45c0dbed2a",
                    "type": "Commit",
                    "message": "\"Merge pull request #3438 from spicyj/lint\n\nLint fixes\""
                }
            },
            {
                "c": {
                    "additions": 10,
                    "deletions": 10,
                    "committedDate": "2015-03-17T20:30:15Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "c34fa7f3d22d04a7089fc8930b06be9e73f4b0d5",
                    "type": "Commit",
                    "message": "\"Lint fixes\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 2,
                    "committedDate": "2015-03-10T22:36:27Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "53f92bf8587b64e0803b66b8bf7f337add2e75a3",
                    "type": "Commit",
                    "message": "\"Fix comma splice and line length\""
                }
            },
            {
                "c": {
                    "additions": 12,
                    "deletions": 0,
                    "committedDate": "2015-03-10T22:35:09Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "645a6caaf5606af9d8479000426e9cb94aeada3b",
                    "type": "Commit",
                    "message": "\"Merge pull request #3323 from jonhester/ie8-compat-mode\n\nwarn if IE8 is in compatibility mode\""
                }
            },
            {
                "c": {
                    "additions": 9,
                    "deletions": 7,
                    "committedDate": "2015-03-05T18:53:12Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "65c4aeaa3a8fb80be4f6f9f3d978601aad678b9f",
                    "type": "Commit",
                    "message": "\"use warning module instead of console.debug\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 4,
                    "committedDate": "2015-03-10T22:06:35Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "e313616be7a6525924e8b822772fa0669e756472",
                    "type": "Commit",
                    "message": "\"Bump version so we can get back to work\""
                }
            },
            {
                "c": {
                    "additions": 10,
                    "deletions": 0,
                    "committedDate": "2015-03-05T13:48:28Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "a999ac1ac30bd7ec9db152027fc480ea34652b5d",
                    "type": "Commit",
                    "message": "\"warn if IE8 is in compatibility mode\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 4,
                    "committedDate": "2015-03-03T19:46:01Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "21b41480a531199ff48034c513288765950409d4",
                    "type": "Commit",
                    "message": "\"v0.13.0-rc2\""
                }
            },
            {
                "c": {
                    "additions": 371,
                    "deletions": 27,
                    "committedDate": "2015-03-02T20:15:20Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "ecc4ad569a5730748f00a5cceb118629fa01235b",
                    "type": "Commit",
                    "message": "\"Merge pull request #3266 from sebmarkbage/cloneelement\n\nAdd cloneElement Implementation\""
                }
            },
            {
                "c": {
                    "additions": 371,
                    "deletions": 27,
                    "committedDate": "2015-02-26T09:17:05Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "4adcee69a04058a4858837752e7e8f011bb652f9",
                    "type": "Commit",
                    "message": "\"Add cloneElement Implementation\n\nThis is a new version of cloneWithProps but this one is moving out of\nadd-ons. Unlike cloneWithProps, this one doesnt have special logic for\nstyle, className and children.\n\nThis one also preserves the original ref. This is critical when upgrading\nfrom a mutative pattern where a child might have a ref on it.\n\nIt also preserves context, which is similar to how context would work when\nit is parent based. It also ensures that were compatible with the old\nmutative pattern which makes updates easier.\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 4,
                    "committedDate": "2015-02-22T21:26:13Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "06126ad3f4d063e89b3168abce79c9cd9961831c",
                    "type": "Commit",
                    "message": "\"v0.13.0-rc1\""
                }
            },
            {
                "c": {
                    "additions": 6,
                    "deletions": 4,
                    "committedDate": "2015-02-14T02:28:03Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "5126cee0f521e2e546e37560df2fe3967039a034",
                    "type": "Commit",
                    "message": "\"v0.13.0-beta.2\""
                }
            },
            {
                "c": {
                    "additions": 22,
                    "deletions": 8,
                    "committedDate": "2015-02-03T06:07:28Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "50c38bbc7598f1537c2928d370de78acce6a81c1",
                    "type": "Commit",
                    "message": "\"Merge pull request #3023 from sebmarkbage/devtoolsfix\n\nExpose ReactReconciler\""
                }
            },
            {
                "c": {
                    "additions": 22,
                    "deletions": 8,
                    "committedDate": "2015-02-03T02:15:31Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "e67ff7ee78620448badba2cf8ac3af6ee2893d6f",
                    "type": "Commit",
                    "message": "\"Expose ReactReconciler\n\nThis can be used by devtools to monkey patch the reconciler and therefore\nget notified whenever any internal instance is updated.\""
                }
            },
            {
                "c": {
                    "additions": 283,
                    "deletions": 283,
                    "committedDate": "2015-02-02T19:15:30Z",
                    "changedFiles": 283,
                    "commentsCount": 0,
                    "id": "2aeb8a2a6beb00617a4217f7f8284924fa2ad819",
                    "type": "Commit",
                    "message": "\"Merge pull request #2995 from rickbeerendonk/copyright-2015\n\nUpdate copyright headers for 2015\""
                }
            },
            {
                "c": {
                    "additions": 283,
                    "deletions": 283,
                    "committedDate": "2015-01-31T19:18:25Z",
                    "changedFiles": 283,
                    "commentsCount": 0,
                    "id": "3e0750a4ad2444c2df708b144ff0c8af7628881d",
                    "type": "Commit",
                    "message": "\"Update copyright headers for 2015\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2015-01-28T05:13:35Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "5bd078508a1beb500b801eb7de9488927a874376",
                    "type": "Commit",
                    "message": "\"v0.13.0-beta.1\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 0,
                    "committedDate": "2015-01-27T18:39:25Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "61c4497d58690b179588d87defa7d9499e3a58f7",
                    "type": "Commit",
                    "message": "\"Merge pull request #2959 from sebmarkbage/createmixin\n\nWe dont currently have a way to trace the origin of a mixin\""
                }
            },
            {
                "c": {
                    "additions": 14,
                    "deletions": 14,
                    "committedDate": "2015-01-27T18:39:07Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "b3f96d97f954188049854ed4599cbd77158c3ae3",
                    "type": "Commit",
                    "message": "\"Merge pull request #2957 from sebmarkbage/renamecomponent\n\nRename ReactComponentBase -> ReactComponent\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 0,
                    "committedDate": "2015-01-27T17:36:14Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "295ef0063b933e13b2ddd541c108b386b35b648b",
                    "type": "Commit",
                    "message": "\"We dont currently have a way to trace the origin of a mixin\n\nThis makes it more difficult to find bugs in mixins both dynamically\nand using a static type system.\n\nWe also dont have a way to find these to be upgraded to a new mixin\nsyntax if we needed to.\n\nThis hook is currently an optional noop but could be made required to\ncreate a mixin class.\""
                }
            },
            {
                "c": {
                    "additions": 14,
                    "deletions": 14,
                    "committedDate": "2015-01-27T17:22:07Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "c3c98084b94a359adbfcf84b88b3c901aade50b9",
                    "type": "Commit",
                    "message": "\"Rename ReactComponentBase -> ReactComponent\n\nWe freed up this internal name by removing the internal base class.\nWere now free to use this name as it was intended.\n\nReactDOMComponent and ReactCompositeComponent are still confusing as\ntheyre internal but well rename them later.\""
                }
            },
            {
                "c": {
                    "additions": 191,
                    "deletions": 305,
                    "committedDate": "2015-01-24T02:06:50Z",
                    "changedFiles": 14,
                    "commentsCount": 0,
                    "id": "1c90efbf7cc982dcecaa2044f18d27df5ae876a1",
                    "type": "Commit",
                    "message": "\"Merge pull request #2923 from sebmarkbage/dropcomponentmixin\n\nReplace ReactComponentMixin with ReactReconciler\""
                }
            },
            {
                "c": {
                    "additions": 191,
                    "deletions": 305,
                    "committedDate": "2015-01-24T01:27:42Z",
                    "changedFiles": 14,
                    "commentsCount": 0,
                    "id": "690409a91239e04a38f3f819f8c5b13a6c60b114",
                    "type": "Commit",
                    "message": "\"Replace ReactComponentMixin with ReactReconciler\n\nInstead of putting the shared code in a base class method, we use a wrapper\ncall around all invokations. That way theyre free to add code before AND\nafter the non-shared code.\n\nThat way we ensure that component extensions dont need to implement\nReactComponentMixin and do super() calls into it. This helps to create a\ntighter API for custom component extensions.\n\nThis provides the first step towards moving these methods to static\nmethods which allows to use a different dispatch mechanism instead of\nvirtual method calls. E.g. pattern matching.\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 4,
                    "committedDate": "2015-01-23T03:13:55Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "8616a6f60e8eeaba9988a4ade56a59cb3c4ea73d",
                    "type": "Commit",
                    "message": "\"Merge pull request #2919 from sebmarkbage/removecreateref\n\nRemove React.createRef API\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 4,
                    "committedDate": "2015-01-23T03:11:11Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "a3a464c8fcd2fc9d04a5765f41f56315c12de44a",
                    "type": "Commit",
                    "message": "\"Remove React.createRef API\n\nThis API was removed so this wont work.\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2015-01-16T18:33:42Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "deae575dae1295572b9f8694232eab68c2c6a84e",
                    "type": "Commit",
                    "message": "\"v0.13.0-alpha.2\""
                }
            },
            {
                "c": {
                    "additions": 361,
                    "deletions": 315,
                    "committedDate": "2015-01-13T23:27:54Z",
                    "changedFiles": 227,
                    "commentsCount": 0,
                    "id": "54c82da15f6b4717425edbf68e23ae82583a50af",
                    "type": "Commit",
                    "message": "\"Merge pull request #2751 from zpao/eslint-fixup\n\nEslint fixup\""
                }
            },
            {
                "c": {
                    "additions": 228,
                    "deletions": 228,
                    "committedDate": "2015-01-13T23:26:32Z",
                    "changedFiles": 227,
                    "commentsCount": 0,
                    "id": "df64a67b7f930f90423e194637af624cdc155526",
                    "type": "Commit",
                    "message": "\"codemod \"use strict\" to use strict for better linting\""
                }
            },
            {
                "c": {
                    "additions": 363,
                    "deletions": 68,
                    "committedDate": "2015-01-13T19:00:56Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "d138f9a35ba9b639d9ec0cb59b58146f6e657a68",
                    "type": "Commit",
                    "message": "\"Merge pull request #2805 from sebmarkbage/baseclass1\n\nIntroducing ReactComponentBase base class\""
                }
            },
            {
                "c": {
                    "additions": 363,
                    "deletions": 68,
                    "committedDate": "2015-01-13T18:54:19Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "ff032dc8576fec0bf6dbeeaf5d53325c2010d284",
                    "type": "Commit",
                    "message": "\"Introducing ReactComponentBase base class\n\nThis is the base class that will be used by ES6 classes.\n\nIm only moving setState and forceUpdate to this base class and the other\nfunctions are disabled for modern classes as were intending to deprecate\nthem. The base classes only have getters that warn if accessed. Its as if\nthey didnt exist.\n\nReactClass now extends ReactComponentBase but also adds the deprecated\nmethods. They are not yet fully deprecated on the ReactClass API.\n\nI added some extra tests to composite component which we werent testing\nto avoid regressions.\n\nI also added some test for ES6 classes. These are not testing the new\nstate initialization process. Thats coming in a follow up.\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 5,
                    "committedDate": "2014-12-23T20:04:23Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "3fec78638deb5926b25063dc9f3fe8eef5140751",
                    "type": "Commit",
                    "message": "\"v0.13.0-alpha.1\n\nBumping version numbers so we can push to npm.\""
                }
            },
            {
                "c": {
                    "additions": 105,
                    "deletions": 8,
                    "committedDate": "2014-12-22T21:05:49Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "e0725341cf1046d54c186a66c74ee7f986d4f36a",
                    "type": "Commit",
                    "message": "\"Merge pull request #2646 from jsfb/getDOMNode-becomes-findDOMNode\n\nAdded findDOMNode, as we move toward deprecating getDOMNode\""
                }
            },
            {
                "c": {
                    "additions": 105,
                    "deletions": 8,
                    "committedDate": "2014-12-18T21:55:44Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "b46a6ce4bb8d6087ed424764f41fe4b8e248b3b4",
                    "type": "Commit",
                    "message": "\"Added findDOMNode, as we move toward deprecating getDOMNode\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 88,
                    "committedDate": "2014-12-14T22:33:16Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "42ae61d0653fe2a7709c68c818bb0ef1f46b1552",
                    "type": "Commit",
                    "message": "\"Merge pull request #2655 from zpao/rm-deprecated\n\nRemove deprecated methods since 0.12 shipped\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 88,
                    "committedDate": "2014-12-14T22:19:44Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "c46dadea55728a5c782861c15ed4989221c0674e",
                    "type": "Commit",
                    "message": "\"Remove deprecated methods since 0.12 shipped\""
                }
            },
            {
                "c": {
                    "additions": 7,
                    "deletions": 5,
                    "committedDate": "2014-12-08T20:22:06Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "ba95ce7b6f366c60afdefa7d2cc0f508a443d702",
                    "type": "Commit",
                    "message": "\"Merge pull request #2677 from zpao/lint-internal\n\nFix new lint errors\""
                }
            },
            {
                "c": {
                    "additions": 7,
                    "deletions": 5,
                    "committedDate": "2014-12-08T20:18:41Z",
                    "changedFiles": 5,
                    "commentsCount": 0,
                    "id": "739baa90927d06e7e2267c65b1221931a20784a4",
                    "type": "Commit",
                    "message": "\"Fix new lint errors\n\nWell get to lint parity soon and then not need to do this.\""
                }
            },
            {
                "c": {
                    "additions": 140,
                    "deletions": 113,
                    "committedDate": "2014-11-15T20:30:42Z",
                    "changedFiles": 14,
                    "commentsCount": 0,
                    "id": "230115da9210f389e60f7eb0e402de1a06b5f269",
                    "type": "Commit",
                    "message": "\"Make ReactTextComponent properly injectable\n\nReactTextComponents implementation is DOM-specific; instead of flattenChildren creating the ReactTextComponent instances, ReactNativeComponent now takes care of having ReactTextComponent injected and creating the component instance. I also renamed ReactTextComponent to ReactDOMTextComponent and moved it to browser/ui/ where it belongs. ReactDOMTextComponent no longer inherits directly from ReactComponent and instead implements construct and {mount,receive,unmount}Component directly.\n\nThis diff removes `ReactTestUtils.isTextComponent` which should have previously never returned true when using public APIs.\n\nTest Plan: jest, use ballmer-peak example.\""
                }
            },
            {
                "c": {
                    "additions": 236,
                    "deletions": 10,
                    "committedDate": "2014-11-06T03:28:12Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "9edc6260a7db25f888259fddedb4aa2250f6385f",
                    "type": "Commit",
                    "message": "\"Initial implementation of new-style refs\n\ncf. #1373\n\nThis implementation can be used in any situation that refs can currently be used (and can also be used without an owner, which is a plus).\""
                }
            },
            {
                "c": {
                    "additions": 6666,
                    "deletions": 6599,
                    "committedDate": "2014-11-05T14:30:37Z",
                    "changedFiles": 392,
                    "commentsCount": 0,
                    "id": "b5bcaba77fbe53cafd7c5f6b76752b09791caadf",
                    "type": "Commit",
                    "message": "\"Merge branch master into docs-namespace-in-jsx\n\n* master: (113 commits)\n  Remove esprima-fb and use Syntax from jstransform\n  Update React.renderToString argument type in docs\n  [traverseAllChildren] fix out-of-scope var use.\n  Use double quote for transformed `displayName` and `data-*`\n  Remove unrelated comment\n  Fix typo in If/Else JSX doc.\n  Cleanup a couple unused variables\n  Use dump cache and remove factory from ReactElement-test\n  Update deprecated propTypes\n  Bring in jsfiddle integration script, add harmony\n  Extending period in which click events are ignored\n  React.renderComponent --> React.render\n  Followup fix for React.PropTypes.node\n  Add comma for readability in tutorial\n  Drop internal uses of .type on the class\n  Drop Legacy Factories Around Classes\n  Drop ReactDOM from internal DOM extensions\n  Added comma to increase readability.\n  Add 0.12 starter kit\n  Change the date and the link url to match the proper roundup\n  ...\n\nConflicts:\n\tdocs/docs/02.1-jsx-in-depth.md\""
                }
            },
            {
                "c": {
                    "additions": 230,
                    "deletions": 486,
                    "committedDate": "2014-10-29T01:00:32Z",
                    "changedFiles": 25,
                    "commentsCount": 0,
                    "id": "a54ed49eb05200dcdc2f27ba9437d17e37571547",
                    "type": "Commit",
                    "message": "\"Merge pull request #2375 from sebmarkbage/droplegacyfactories\n\nDrop Legacy Factories\""
                }
            },
            {
                "c": {
                    "additions": 207,
                    "deletions": 439,
                    "committedDate": "2014-10-28T22:08:52Z",
                    "changedFiles": 14,
                    "commentsCount": 0,
                    "id": "199a7d6903ed2e7c28fb32c6a28ed7f26148e13d",
                    "type": "Commit",
                    "message": "\"Drop Legacy Factories Around Classes\n\nClasses are now pure classes without a legacy factory around them.\n\nSince classes will become just any function that returns a valid instance,\nlets drop isValidClass.\n\nTheres some hacks in here for auto-mocking frameworks (jest) that mock the\nprototype of these classes. These hacks allow these classes to be mounted.\""
                }
            },
            {
                "c": {
                    "additions": 727,
                    "deletions": 699,
                    "committedDate": "2014-10-23T19:50:17Z",
                    "changedFiles": 14,
                    "commentsCount": 0,
                    "id": "b7cd3e7d1de31108594a6698215bfa7bf8619b34",
                    "type": "Commit",
                    "message": "\"Merge pull request #2396 from sebmarkbage/classmodule\n\nMove Class Creation Concerns into a ReactClass Module\""
                }
            },
            {
                "c": {
                    "additions": 1109,
                    "deletions": 250,
                    "committedDate": "2014-10-23T07:55:43Z",
                    "changedFiles": 47,
                    "commentsCount": 0,
                    "id": "994fc7d8a727dc7b477322a5c3d4216f1215f639",
                    "type": "Commit",
                    "message": "\"Merge remote-tracking branch upstream/master into fix-gruntfile\""
                }
            },
            {
                "c": {
                    "additions": 37,
                    "deletions": 21,
                    "committedDate": "2014-10-23T01:35:10Z",
                    "changedFiles": 12,
                    "commentsCount": 0,
                    "id": "c7bb936566bce79b35f55b558af5f09b88047a9a",
                    "type": "Commit",
                    "message": "\"Introduce React Class as an alias for Composite Component\n\nThis is in preparation for the separation of Composite Component internals\nfrom the Class abstraction.\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2014-10-22T21:19:54Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "b78fe39b6073bab20eb7785aa9ef508aabf03c3f",
                    "type": "Commit",
                    "message": "\"Bump version to 0.13.0-alpha\""
                }
            },
            {
                "c": {
                    "additions": 32,
                    "deletions": 7,
                    "committedDate": "2014-10-21T00:17:56Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "2bdad81955e160a5b11110b40c7222a1113cc1fb",
                    "type": "Commit",
                    "message": "\"Merge pull request #2384 from sebmarkbage/deprecateisvalidclass\n\nDeprecate isValidClass\""
                }
            },
            {
                "c": {
                    "additions": 32,
                    "deletions": 7,
                    "committedDate": "2014-10-20T06:55:57Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "ef971014bc22bf4cfecb31ce35de38c231c1c41d",
                    "type": "Commit",
                    "message": "\"Deprecate isValidClass\n\nFixes #2374\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2014-10-16T21:56:50Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "2b4e35870b7a0c4d681bc3c86641790dd828f0a0",
                    "type": "Commit",
                    "message": "\"v0.12.0-rc1\""
                }
            },
            {
                "c": {
                    "additions": 182,
                    "deletions": 128,
                    "committedDate": "2014-10-16T16:29:01Z",
                    "changedFiles": 41,
                    "commentsCount": 0,
                    "id": "828efb798a94a631007efe966828fbc5b01613ea",
                    "type": "Commit",
                    "message": "\"Merge pull request #2350 from sebmarkbage/assign\n\nHide Object.assign polyfill behind a module\""
                }
            },
            {
                "c": {
                    "additions": 182,
                    "deletions": 128,
                    "committedDate": "2014-10-16T16:21:10Z",
                    "changedFiles": 41,
                    "commentsCount": 0,
                    "id": "8210beeef4219d11b0a997f5a5abe7c348c01448",
                    "type": "Commit",
                    "message": "\"Hide Object.assign polyfill behind a module\n\nBecause the JS communitys polyfilling infrastructure sucks and well\nhave to fix it for them before we require this.\n\nJSX spread uses React.__spread\n(which might get special behavior for key/ref, not sure yet)\n\nThis never uses the native implementation and throws for prototype chains.\nOnce the native implementations are faster, well start using them.\""
                }
            },
            {
                "c": {
                    "additions": 1374,
                    "deletions": 3374,
                    "committedDate": "2014-10-10T23:58:45Z",
                    "changedFiles": 271,
                    "commentsCount": 0,
                    "id": "5d3b12bb3bd6a092cf00ede07b8255a8399c2e58",
                    "type": "Commit",
                    "message": "\"Merge pull request #2312 from zpao/license-update\n\nUpdate Licenses\""
                }
            },
            {
                "c": {
                    "additions": 24,
                    "deletions": 16,
                    "committedDate": "2014-10-13T19:30:15Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "3991d4de6be63ea0dac5d2b9ccd6a9c4069b439b",
                    "type": "Commit",
                    "message": "\"Merge pull request #2337 from sebmarkbage/devtoolshook\n\nInject the runtime to a global instead of exposing internals\""
                }
            },
            {
                "c": {
                    "additions": 24,
                    "deletions": 16,
                    "committedDate": "2014-10-13T18:59:23Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "ce19af9d304bb0b2c9b3fabf6b999c45be5b7b72",
                    "type": "Commit",
                    "message": "\"Inject the runtime to a global instead of exposing internals\n\nSee https://github.com/facebook/react-devtools/commit/673de20a4a0654ab849575307b9cf87fde53439e\""
                }
            },
            {
                "c": {
                    "additions": 1374,
                    "deletions": 3374,
                    "committedDate": "2014-10-10T20:34:07Z",
                    "changedFiles": 271,
                    "commentsCount": 0,
                    "id": "dcf415c2b91ce52fd5d4dd02b70875ba9d33290f",
                    "type": "Commit",
                    "message": "\"BSD + PATENTS\""
                }
            },
            {
                "c": {
                    "additions": 11,
                    "deletions": 7,
                    "committedDate": "2014-10-10T00:00:06Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "5d127eaa4935486a9fa15830b9224b806921f56d",
                    "type": "Commit",
                    "message": "\"Merge pull request #2316 from zpao/devtoolsmarker\n\nLook for devtools global hook\""
                }
            },
            {
                "c": {
                    "additions": 262,
                    "deletions": 174,
                    "committedDate": "2014-10-09T23:41:37Z",
                    "changedFiles": 29,
                    "commentsCount": 0,
                    "id": "540731b7a8cbae5835edf69f26361993691d6c00",
                    "type": "Commit",
                    "message": "\"Merge pull request #2002 from zpao/rename-renderComponent\n\nReact.renderComponent -> React.render\""
                }
            },
            {
                "c": {
                    "additions": 11,
                    "deletions": 7,
                    "committedDate": "2014-10-09T18:24:48Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "6ddf8de5aee5ea58a4f1b806c6c768d53cf5e2b4",
                    "type": "Commit",
                    "message": "\"Look for devtools global hook\n\nIt doesnt exist yet, but it could.\n\nThis also ensures we actually do our polyfill checks in *all* browsers,\nnot just Chrome.\""
                }
            },
            {
                "c": {
                    "additions": 109,
                    "deletions": 21,
                    "committedDate": "2014-10-09T23:41:03Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "9b1fa914fafca23b201d5bf4d7ca6ffa1dff6cc4",
                    "type": "Commit",
                    "message": "\"React.renderComponent -> React.render\n\nAlso rename all the associated render methods and adds deprecation\nnotices.\""
                }
            },
            {
                "c": {
                    "additions": 396,
                    "deletions": 397,
                    "committedDate": "2014-10-07T20:44:44Z",
                    "changedFiles": 37,
                    "commentsCount": 0,
                    "id": "f48954d8a39097109d599db365af28df417544cb",
                    "type": "Commit",
                    "message": "\"Merge pull request #2300 from sebmarkbage/descriptorstoelements\n\nRenamed Descriptor -> Element\""
                }
            },
            {
                "c": {
                    "additions": 86,
                    "deletions": 29,
                    "committedDate": "2014-10-07T17:49:18Z",
                    "changedFiles": 8,
                    "commentsCount": 0,
                    "id": "7f9b1d18d197d102777f214e782ecc27685cf481",
                    "type": "Commit",
                    "message": "\"Start warning when React.DOM.x is passed into JSX\n\nReact.DOM is becoming helper factories to generate ReactElements. Theyre not\nclasses. It will be ok to call them directly as functions, but not to use them\nwhere a class is expected.\""
                }
            },
            {
                "c": {
                    "additions": 396,
                    "deletions": 397,
                    "committedDate": "2014-10-07T20:41:51Z",
                    "changedFiles": 37,
                    "commentsCount": 0,
                    "id": "8f1657bba618846b7a111a2caee855bf59145c5a",
                    "type": "Commit",
                    "message": "\"Renamed Descriptor -> Element\n\nWeve decided on a new naming convention for ReactDescriptor. Its now\ncalled ReactElement, which is a subset of the ReactNode union type.\""
                }
            },
            {
                "c": {
                    "additions": 275,
                    "deletions": 100,
                    "committedDate": "2014-08-20T07:14:32Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "c901b1005e7c946584487bb8b0bf7b60a773645b",
                    "type": "Commit",
                    "message": "\"Make createDescriptor return a descriptor for components\n\nThis moves all logic around legacy descriptors to ReactLegacyDescriptor. This\nis responsible for the layer that knows that createClass exports a legacy\nfactory. When passed one of these classes, it unwraps it to be a real class.\n\nIf it is passed a non legacy factory, it is assumed to be a non-react component\nthat needs to be invoked as a plain function.\n\nThe semantic change is that a descriptor is now always returned if passed a\nlegacy factory. Even if that factory is a mock. A mock would previously return\nundefined.\n\nFor mocks, I treat the factory as the authoritative function. I call it to extract\nthe instance or fill it with an empty component placeholder.\n\nAdditionally, I make the classes take props as the first argument to the\nconstructor. This is what the new class system will do.\n\nWe currently need to set up some internals by calling the internal construct\nmethod. Instead of doing that automatically in the constructor, I now move that\nto a second pass so that mocks can get the plain props.\n\nThis means that we can assert that a mock has been called once its mounted\nwith its final props. Instead of the descriptor factory being called.\""
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 1,
                    "committedDate": "2014-08-19T01:18:05Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "5b4e2be867ebf216e7acd0cfecda026d9dd3499d",
                    "type": "Commit",
                    "message": "\"Iterate over expectedFeatures correctly\n\nThis fails if Array.prototype is extended.\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 3,
                    "committedDate": "2014-08-13T22:40:40Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "eb3ea3f2dfed33751ce95666370b30a7b9d8bc9f",
                    "type": "Commit",
                    "message": "\"Move batchedUpdated to React.addons\n\nThis is a followup to #1060, where I did not read closely enough before\nmerging.\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 0,
                    "committedDate": "2014-08-13T22:37:43Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "938bcbecd5874d6d33f11e52e5c9a71dbcd44c8b",
                    "type": "Commit",
                    "message": "\"Merge pull request #1060 from spicyj/gh-906\n\nAdd React.batchedUpdates to public API\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 0,
                    "committedDate": "2014-04-16T22:59:54Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "7fb7e951082c40b3183cc2a6ab483a8b6b579690",
                    "type": "Commit",
                    "message": "\"Add React.batchedUpdates to public API\n\nFixes #906.\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 1,
                    "committedDate": "2014-08-06T23:41:47Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "036d751397140e1eae01ea6ce6ebe86f0482f485",
                    "type": "Commit",
                    "message": "\"Add createElement alias for createDescriptor\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 2,
                    "committedDate": "2014-08-04T21:25:16Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "2d250d44a5909d9e9d6a0e6fef541cf6fdf6e0ae",
                    "type": "Commit",
                    "message": "\"Merge pull request #1993 from spicyj/devtools-warning-2\n\nSlightly more considerate devtools warning\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 2,
                    "committedDate": "2014-08-04T18:16:51Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "30452914174c7fda400746e8795b73f8ba4269bf",
                    "type": "Commit",
                    "message": "\"Slightly more considerate devtools warning\n\nSee #953.\""
                }
            },
            {
                "c": {
                    "additions": 16,
                    "deletions": 4,
                    "committedDate": "2014-07-25T23:48:10Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "c6b2687bbda0c9d828be51d3d4908adb89d52a09",
                    "type": "Commit",
                    "message": "\"Partially revert React.createDescriptor\n\nWe still have some issues to work out when the type argument is a mock.\""
                }
            },
            {
                "c": {
                    "additions": 59,
                    "deletions": 0,
                    "committedDate": "2014-07-21T23:18:12Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "04e341936cff902f399ca59bd6b855b2d994470e",
                    "type": "Commit",
                    "message": "\"Include Object.assign polyfill\n\nThis isnt a good final solution but it makes React actually usable on\nits own.\n\nThis also makes tests runnable, though only via jest\n(./node_modules/.bin/jest)\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2014-07-13T02:50:45Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "0f9cec2e78c09e81dc3dac764788589a07903411",
                    "type": "Commit",
                    "message": "\"0.11.0-rc1\""
                }
            },
            {
                "c": {
                    "additions": 534,
                    "deletions": 294,
                    "committedDate": "2014-07-19T05:01:36Z",
                    "changedFiles": 16,
                    "commentsCount": 0,
                    "id": "5aab0bddaa9dd2684049194a2488d57517d89cae",
                    "type": "Commit",
                    "message": "\"Move key/ref off props and prepare for new descriptor factories\n\nBreaking changes\n\n- key/ref are no longer accessible on props but they are accessible on the\n  descriptors. This means that parents/owners can access it but not the\n  component itself.\n\n- Descriptor factories are now plain functions and you cant rely on the\n  prototype or constructors of descriptors to identify the component type.\n\nExisting descriptor factories are now wrapped in a legacy factory. Currently it\ndoes nothing but it will give us a hook to track callers to factories that are\nnot using JSX but just invoking the function directly. It also proxies static\nmethods/properties to the underlying class. The newer factories dont have this\nfeature.\n\nReactTextComponent has its own little factory because its props is not an\nobject. This is a detail and will go away once ReactTextComponent no longer\nneeds descriptors.\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2014-07-17T21:22:50Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "5bfee601ce6709a56e025e84634fcc5da0b36a44",
                    "type": "Commit",
                    "message": "\"Bump version for 0.12.0-alpha\n\n[skip ci]\""
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 0,
                    "committedDate": "2014-07-14T22:01:44Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "97dbada03d58bef9bce6941ca49207e28b6b75ac",
                    "type": "Commit",
                    "message": "\"Up-to-date React.Children\n\nMake sure we actually include `.count`\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 2,
                    "committedDate": "2014-07-11T17:36:38Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "2b0e51bdbaa0f0e589c8a24e358a7739e70f38dc",
                    "type": "Commit",
                    "message": "\"Add String.prototype.trim to polyfill check\n\nAlso shortens the URL so it fits on 1 line\""
                }
            },
            {
                "c": {
                    "additions": 17,
                    "deletions": 0,
                    "committedDate": "2014-06-26T22:42:18Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "ef6740627292136973a6b8053cc98dba98ebd18f",
                    "type": "Commit",
                    "message": "\"Add simple React.createDescriptor hook\n\nThis is the minimal runtime change we need to switch the JSX syntax to resolve\nto React.createDescriptor(...)\""
                }
            },
            {
                "c": {
                    "additions": 28,
                    "deletions": 0,
                    "committedDate": "2014-05-12T20:40:00Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "e4f80f301ddc56370c5c7dfb2be483431bfa7d20",
                    "type": "Commit",
                    "message": "\"Merge pull request #1516 from syranide/es5err\n\nPreemptively error when required ES5 shim/shams are not available\""
                }
            },
            {
                "c": {
                    "additions": 28,
                    "deletions": 0,
                    "committedDate": "2014-05-11T19:20:07Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "659b7981e14c7eb36cf2638a95a3a16f080b8cca",
                    "type": "Commit",
                    "message": "\"Preemptively error when required ES5 shim/shams are not available\""
                }
            },
            {
                "c": {
                    "additions": 848,
                    "deletions": 844,
                    "committedDate": "2014-03-30T19:53:26Z",
                    "changedFiles": 36,
                    "commentsCount": 0,
                    "id": "468007612f4a6dabb228618d9a3274f067fc2c51",
                    "type": "Commit",
                    "message": "\"Merge branch master of github.com:facebook/react\""
                }
            },
            {
                "c": {
                    "additions": 758,
                    "deletions": 832,
                    "committedDate": "2014-03-28T19:32:53Z",
                    "changedFiles": 29,
                    "commentsCount": 0,
                    "id": "c40e06f7281622a7a6295f4a7d5540a75fedf7bb",
                    "type": "Commit",
                    "message": "\"First phase to true descriptors\n\nThis moves all convenience constructors to use frozen ReactDescriptors.\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2014-03-21T21:58:52Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "f0eae5086b0062bdf8f8e466803e061814486634",
                    "type": "Commit",
                    "message": "\"version bump for 0.11 development\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2014-03-19T05:09:32Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "7f24943e5af5ee4b14ec002d45df315af94adb75",
                    "type": "Commit",
                    "message": "\"update version for 0.10rc\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 40,
                    "committedDate": "2014-03-03T23:07:11Z",
                    "changedFiles": 53,
                    "commentsCount": 0,
                    "id": "a8fc3b940dbe20c0c7decd19b028215b236c50a6",
                    "type": "Commit",
                    "message": "\"Move UI-thread-only browser modules to browser/ui/\n\nThis also deletes an unused module.\""
                }
            },
            {
                "c": {
                    "additions": 301,
                    "deletions": 213,
                    "committedDate": "2014-03-03T23:06:27Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "99dab49f92fe0785c1643ede5b0e7a90cbe1e1e0",
                    "type": "Commit",
                    "message": "\"Refactor rendering to string without checksum & React ID\n\nFinalize API for rendering to static markup.\nInstead of passing a boolean option to `renderComponentToString`, just use another method.\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 4,
                    "committedDate": "2014-02-20T06:53:29Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "95edc396dfd07ed064240b5e2e1a1d5528d2d747",
                    "type": "Commit",
                    "message": "\"version bump to 0.10.0-alpha\""
                }
            },
            {
                "c": {
                    "additions": 231,
                    "deletions": 231,
                    "committedDate": "2014-02-19T01:06:43Z",
                    "changedFiles": 231,
                    "commentsCount": 0,
                    "id": "8a47813baabcb200f5e0a496dd959cb0ef3adcf3",
                    "type": "Commit",
                    "message": "\"Update copyrights for 2014.\n\ngrep -rl Copyright 2013 Facebook static_upstream | xargs perl -pi -w -e s/Copyright 2013 Facebook/Copyright 2013-2014 Facebook/g;\n\nNot going to check in a script to do this since it will just change every year.\nCloses #1006\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 4,
                    "committedDate": "2014-02-17T01:38:52Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "9125f68194cf99e55e027b6cc7ed34325c9855e4",
                    "type": "Commit",
                    "message": "\"0.9.0-rc1\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 4,
                    "committedDate": "2014-02-05T03:51:55Z",
                    "changedFiles": 89,
                    "commentsCount": 0,
                    "id": "b9cd2f0d3d83ee9652b230fecc4bc2dfe8e110f8",
                    "type": "Commit",
                    "message": "\"Merge branch reorg\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 3,
                    "committedDate": "2014-02-05T03:49:58Z",
                    "changedFiles": 87,
                    "commentsCount": 0,
                    "id": "1a39c3143cf5831e4a7f4d2f1a7dc32b33b41299",
                    "type": "Commit",
                    "message": "\"The great reorg of February 2014\""
                }
            },
            {
                "c": {
                    "additions": 8,
                    "deletions": 0,
                    "committedDate": "2014-02-04T22:37:44Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "945f788a4127c3428a5e3cf65fb6d1014c2e98a1",
                    "type": "Commit",
                    "message": "\"React.Children helpers\n\nAdds React.Children and map(), forEach() and only().\""
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 0,
                    "committedDate": "2014-01-11T05:11:33Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "2c335b0e570e360d52359e7f774e5311f74d863b",
                    "type": "Commit",
                    "message": "\"Quieter devtools upsell\n\nCheck that were not in a iframe before upselling.\""
                }
            },
            {
                "c": {
                    "additions": 11,
                    "deletions": 0,
                    "committedDate": "2014-01-11T05:10:54Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "d8a8f6a88109e1ccdee02236909cbab101222185",
                    "type": "Commit",
                    "message": "\"Upsell dev tools\n\nPeople probably dont know these exist. Add some information about React\ndev mode as well as a link to the developer tools when using Chrome.\""
                }
            },
            {
                "c": {
                    "additions": 311,
                    "deletions": 232,
                    "committedDate": "2014-01-04T07:09:59Z",
                    "changedFiles": 18,
                    "commentsCount": 0,
                    "id": "80d7d2d0f8ec0f4f1f3c2dbe613f36bda572ce11",
                    "type": "Commit",
                    "message": "\"Listen to events on demand\n\nFixes #381\n\nThis is a squashed version of https://github.com/facebook/react/pull/462\""
                }
            },
            {
                "c": {
                    "additions": 32,
                    "deletions": 22,
                    "committedDate": "2013-12-21T02:12:48Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "3431e3f847b148bd1aa527f375337c86b1029c58",
                    "type": "Commit",
                    "message": "\"Add `createMarkupForID`\n\nThis is a follow-up the to previous commit and does two things:\n\n - Moves `ReactMount.ATTR_NAME` to `DOMProperty.ID_ATTRIBUTE_NAME`.\n - Adds `DOMPropertyOperations.createMarkupForID` and uses it.\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2013-12-06T23:11:25Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "153b75f186a78c876cc11678d1abbdf5e13a3b5b",
                    "type": "Commit",
                    "message": "\"Bump version to 0.9.0-alpha\n\nThis is trunk, which will be 0.9. Well have to cherry-pick this whole\nthing into a 0.8 branch.\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 4,
                    "committedDate": "2013-12-06T19:56:30Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "ef339c9cc44522ae39cb04bf9a102ac9261ecb45",
                    "type": "Commit",
                    "message": "\"Version bump, make tests work\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 36,
                    "committedDate": "2013-12-05T04:27:15Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "1b8bdbe177f2f03c66e9288149316695fc004b41",
                    "type": "Commit",
                    "message": "\"Remove deprecated React.unmountAndReleaseReactRootNode\""
                }
            },
            {
                "c": {
                    "additions": 455,
                    "deletions": 30,
                    "committedDate": "2013-11-18T18:56:24Z",
                    "changedFiles": 11,
                    "commentsCount": 0,
                    "id": "b91396be8eac3dc57ab1dbd2d3bb27c791d88169",
                    "type": "Commit",
                    "message": "\"Contexts\n\nSummary:\nadds `this.context` which you can think of as implicit props, which are passed automatically down the //ownership// hierarchy.\n\nContexts should be used sparingly, since they essentially allow components to communicate with descendants (in the ownership sense, not parenthood sense), which is not usually a good idea. You probably would only use contexts in places where youd normally use a global, but contexts allow you to override them for certain view subtrees which you cant do with globals.\n\nThe context starts out `null`:\n\n  var RootComponent = React.createClass({\n    render: function() {\n      // this.context === null\n    }\n  });\n\nYou should **never** mutate the context directly, just like props and state.\n\nYou can change the context of your children (the ones you own, not `this.props.children` or via other props) using the new `withContext` method on `React`:\n\n  var RootComponent = React.createClass({\n    render: function() {\n      // this.context === null\n      var children = React.withContext({foo: a, bar: b}, () => (\n        // In ChildComponent#render, this.context === {foo: a, bar: b}\n        <ChildComponent />\n      ));\n      // this.context === null\n    }\n  });\n\nContexts are merged, so a component can override its owners context **for its children**:\n\n  var ChildComponent = React.createClass({\n    render: function() {\n      // this.context === {foo: a, bar: b} (for the caller above)\n      var children = React.withContext({foo: c},() => (\n        // In GrandchildComponent#render,\n        // this.context === {foo: c, bar: b}\n        <GrandchildComponent />\n      ));\n      // this.context === {foo: a, bar: b}\n    }\n  });\""
                }
            },
            {
                "c": {
                    "additions": 3,
                    "deletions": 3,
                    "committedDate": "2013-10-16T05:39:28Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "48281a17e4f460020fa7b9c6dc8169a1b867327c",
                    "type": "Commit",
                    "message": "\"bump version to 0.6.0-alpha\""
                }
            },
            {
                "c": {
                    "additions": 17,
                    "deletions": 4,
                    "committedDate": "2013-10-07T22:07:20Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "fdb10c067999c81516cf6ac65262adb5ab59d3cf",
                    "type": "Commit",
                    "message": "\"React.__internals\n\nWe need access to internal modules in order to provide a single way for some\nprojects to work internally with @providesModule and externally.\""
                }
            },
            {
                "c": {
                    "additions": 48,
                    "deletions": 10,
                    "committedDate": "2013-09-19T21:46:49Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "832d9de0374496a3a99a0df7cf100305f1a24158",
                    "type": "Commit",
                    "message": "\"Rename unmountAndReleaseReactRootNode() -> unmountComponentAtNode()\n\nThis is just a better name; we may revisit the name later.\""
                }
            },
            {
                "c": {
                    "additions": 17,
                    "deletions": 3,
                    "committedDate": "2013-09-11T16:51:43Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "5ab68d9a0ddbb6c6c96895b75207d6ad57dc55b4",
                    "type": "Commit",
                    "message": "\"Hard code version instead of doing constant replacement\n\nThis isnt really ideal, but it makes it so that people managing to\nbuild with @providesModule still get a consistent experience (since this\nis what gets packed client-side with react-page-middleware anyway).\""
                }
            },
            {
                "c": {
                    "additions": 44,
                    "deletions": 24,
                    "committedDate": "2013-09-11T01:35:12Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "d853bbcf77a0c81734300dafb77f2afeb25f0ed5",
                    "type": "Commit",
                    "message": "\"Merge pull request #205 from spicyj/version\n\nAdd React.version\""
                }
            },
            {
                "c": {
                    "additions": 44,
                    "deletions": 24,
                    "committedDate": "2013-09-10T00:01:06Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "5fd4467bf76b89b76df8bf909922f92e4fd07f7c",
                    "type": "Commit",
                    "message": "\"Add React.version\n\ngetConfig needs to be a function because grunt.config.data.pkg.version isnt available at the time that grunt/config/jsx/jsx.js is required.\n\nTest Plan:\ngrunt build, grunt lint, grunt test all work. After building, both react.js and react.min.js contain the version number.\""
                }
            },
            {
                "c": {
                    "additions": 4,
                    "deletions": 7,
                    "committedDate": "2013-09-06T01:35:59Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "3cf14e8f9b14ac05bcd24634daa26ac6772bd31b",
                    "type": "Commit",
                    "message": "\"Remove ReactChildren methods from React object\n\nThese are not terribly useful on this object and the naming of\n`React.forEachChildren` sucked anyway.\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 20,
                    "committedDate": "2013-09-03T21:27:00Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "a42fd30fc2795909324c497350d0877a969b0cc7",
                    "type": "Commit",
                    "message": "\"Remove React.autoBind for real\n\nThis has been deprecated for a long while now, we should actually remove it.\""
                }
            },
            {
                "c": {
                    "additions": 46,
                    "deletions": 3,
                    "committedDate": "2013-08-30T20:20:51Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "4d8f0449d9d08528cc1aaba0aa09d1d90e12d3dd",
                    "type": "Commit",
                    "message": "\"React.isValidClass\n\nSometimes you may need to detect if a value is a valid React class constructor. This enables that and prevents future consumers from getting caught in the trap of depending on an internal implementation detail we might change.\n\nCurrently this works for classes created with `React.createClass` as well as `React.DOM.*`.\""
                }
            },
            {
                "c": {
                    "additions": 595,
                    "deletions": 61,
                    "committedDate": "2013-08-23T21:05:11Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "fce57abeca1d8388baaaac8511540aed486177dc",
                    "type": "Commit",
                    "message": "\"Benchmarking tool for React application performance\n\nReactAppPerf wraps core methods and logs info from them; theres no real\nUI at this point\""
                }
            },
            {
                "c": {
                    "additions": 131,
                    "deletions": 54,
                    "committedDate": "2013-08-06T21:17:33Z",
                    "changedFiles": 3,
                    "commentsCount": 0,
                    "id": "9ef4e74ba2b3a494757b39b41b1ef99280bc5f83",
                    "type": "Commit",
                    "message": "\"ReactChildren\n\nInstead of changing `traverseAllChildren`, keep that around for perf\nreasons (for the hot code path `flattenChildren`)\n\nIntroduce `ReactChildren.map` and `ReactChildren.forEach`\nwhich mirrors `Array.prototype.map` and `Array.prototype.forEach`. This\ninvolves a rename of `mapAllChildren`\""
                }
            },
            {
                "c": {
                    "additions": 24,
                    "deletions": 41,
                    "committedDate": "2013-07-17T15:26:59Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "c629a0c5ad1adc82e01a982e7116eae632fa8d65",
                    "type": "Commit",
                    "message": "\"Revert \"Merge pull request #200 from spicyj/version\"\n\nThis reverts commit d8893228275cacc65a8632c7416bb023ab4c946f, reversing\nchanges made to 156dffb961ab15f577e0a6aab1abc5efd68f9a9b.\""
                }
            },
            {
                "c": {
                    "additions": 41,
                    "deletions": 24,
                    "committedDate": "2013-07-17T13:13:49Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "d8893228275cacc65a8632c7416bb023ab4c946f",
                    "type": "Commit",
                    "message": "\"Merge pull request #200 from spicyj/version\n\nAdd React.version\""
                }
            },
            {
                "c": {
                    "additions": 41,
                    "deletions": 24,
                    "committedDate": "2013-07-17T03:38:40Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "7be14d81552e8097eee6ed21a048fa23d4fce596",
                    "type": "Commit",
                    "message": "\"Add React.version\n\ngetConfig needs to be a function because grunt.config.data.pkg.version isnt available at the time that grunt/config/jsx/jsx.js is required.\n\nTest Plan:\ngrunt build, grunt lint, grunt test all work. After building, both react.js and react.min.js contain the version number.\""
                }
            },
            {
                "c": {
                    "additions": 67,
                    "deletions": 29,
                    "committedDate": "2013-07-10T22:06:18Z",
                    "changedFiles": 7,
                    "commentsCount": 0,
                    "id": "d76262731237365198ddd84216d108da96820055",
                    "type": "Commit",
                    "message": "\"Rename `props` to `propTypes`\n\nThis does two things:\n\n - Rename `props` to `propTypes`.\n - Rename `ReactProps` to `ReactPropTypes` (and `React.Props` to `React.PropTypes`)\""
                }
            },
            {
                "c": {
                    "additions": 3178,
                    "deletions": 2141,
                    "committedDate": "2013-07-01T23:08:57Z",
                    "changedFiles": 122,
                    "commentsCount": 0,
                    "id": "0e9ee239a9c7b085771429ba990ae63aacde64ca",
                    "type": "Commit",
                    "message": "\"Merge branch master into async-state\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 21441,
                    "committedDate": "2013-06-28T21:54:07Z",
                    "changedFiles": 148,
                    "commentsCount": 0,
                    "id": "ee21a604f31020fbaa898a4d0d61dc487198ce82",
                    "type": "Commit",
                    "message": "\"Delete files that accidentally got merged in\n\n\u0ca0_\u0ca0\""
                }
            },
            {
                "c": {
                    "additions": 21608,
                    "deletions": 7,
                    "committedDate": "2013-06-28T21:30:47Z",
                    "changedFiles": 153,
                    "commentsCount": 0,
                    "id": "43358157cff16e8945da9b816fcb858a59da81af",
                    "type": "Commit",
                    "message": "\"Merge branch textarea-update-value of git://github.com/spicyj/react\n\nConflicts:\n\tsrc/core/ReactDefaultInjection.js\""
                }
            },
            {
                "c": {
                    "additions": 2977,
                    "deletions": 1429,
                    "committedDate": "2013-06-19T06:31:08Z",
                    "changedFiles": 89,
                    "commentsCount": 0,
                    "id": "44d6b947520aa3c3b252cbba1c95aa25811665d7",
                    "type": "Commit",
                    "message": "\"Merge remote-tracking branch origin/master into textarea-update-value\""
                }
            },
            {
                "c": {
                    "additions": 1,
                    "deletions": 1,
                    "committedDate": "2013-06-17T19:48:43Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "c1576fcf9744882fa59c2876fb4fd44720140307",
                    "type": "Commit",
                    "message": "\"Remove trailing whitespace\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 0,
                    "committedDate": "2013-06-14T04:08:10Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "80edd6ca8729512c384faa593fef6d62b6b8c087",
                    "type": "Commit",
                    "message": "\"Merge pull request #89 from vjeux/patch-4\n\nExposing ReactProps as React.Props\""
                }
            },
            {
                "c": {
                    "additions": 2,
                    "deletions": 0,
                    "committedDate": "2013-06-13T00:28:25Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "34173638d40dff2cd2dbac66f04623b3b1f0516f",
                    "type": "Commit",
                    "message": "\"Exposing ReactProps as React.Props\n\nRight now, even though ReactProps is committed, there is no way to use it as it is not exposed.\""
                }
            },
            {
                "c": {
                    "additions": 340,
                    "deletions": 45,
                    "committedDate": "2013-06-10T23:17:26Z",
                    "changedFiles": 6,
                    "commentsCount": 0,
                    "id": "37cde3d864406f2af65dc03eae45a216ea969600",
                    "type": "Commit",
                    "message": "\"Stabilize minimal server rendering API\n\nThis is a pretty killer feature and the API is simple. I know its another API method on React, but I think its\nthe only way.\""
                }
            },
            {
                "c": {
                    "additions": 0,
                    "deletions": 18,
                    "committedDate": "2013-06-08T05:10:06Z",
                    "changedFiles": 2,
                    "commentsCount": 0,
                    "id": "582359aeea9b7c437cfc12b8e4f3366aaacf11a1",
                    "type": "Commit",
                    "message": "\"Remove React.createComponentRenderer\n\nRemove ReactMount.createComponentRenderer because it does not function\ncorrectly.\n\n  var f = React.createComponentRenderer(<div />);\n\n  var container1 = document.createElement(div);\n  var container2 = document.createElement(div);\n  f(container1);\n  f(container2); // error because mounting same instance into new root\""
                }
            },
            {
                "c": {
                    "additions": 43123,
                    "deletions": 0,
                    "committedDate": "2013-05-29T19:54:02Z",
                    "changedFiles": 317,
                    "commentsCount": 0,
                    "id": "75897c2dcd1dd3a6ca46284dd37e13d22b4b16b4",
                    "type": "Commit",
                    "message": "\"Initial public release\""
                }
            }
        ]
    },
    {
        "question": "Determine the developers that had the most unfixed bugs?",
        "number": 7,
        "category": 2,
        "query": "MATCH (u:User)-[:assigned]->(i:Issue)\nWHERE i.state = \"open\"\nRETURN u, COUNT(i) AS openBugs\nORDER BY openBugs DESC",
        "result": [
            {
                "u": {
                    "name": "Brian Vaughn",
                    "id": "MDQ6VXNlcjI5NTk3",
                    "type": "User",
                    "login": "bvaughn",
                    "email": "brian.david.vaughn@gmail.com"
                },
                "openBugs": 19
            },
            {
                "u": {
                    "name": "Ruslan Lesiutin",
                    "id": "MDQ6VXNlcjI4OTAyNjY3",
                    "type": "User",
                    "login": "hoxyq",
                    "email": ""
                },
                "openBugs": 5
            },
            {
                "u": {
                    "name": "Josh Story",
                    "id": "MDQ6VXNlcjI3MTYzNjk=",
                    "type": "User",
                    "login": "gnoff",
                    "email": "jcs.gnoff@gmail.com"
                },
                "openBugs": 4
            },
            {
                "u": {
                    "name": "Sebastian Markb\u00e5ge",
                    "id": "MDQ6VXNlcjYzNjQ4",
                    "type": "User",
                    "login": "sebmarkbage",
                    "email": "sebastian@calyptus.eu"
                },
                "openBugs": 4
            },
            {
                "u": {
                    "name": "Sathya Gunasekaran",
                    "id": "MDQ6VXNlcjU2NTc2NQ==",
                    "type": "User",
                    "login": "gsathya",
                    "email": "gsathya.ceg@gmail.com"
                },
                "openBugs": 3
            },
            {
                "u": {
                    "name": "Andrew Clark",
                    "id": "MDQ6VXNlcjM2MjQwOTg=",
                    "type": "User",
                    "login": "acdlite",
                    "email": "hi@andrewclark.io"
                },
                "openBugs": 2
            },
            {
                "u": {
                    "name": "dan",
                    "id": "MDQ6VXNlcjgxMDQzOA==",
                    "type": "User",
                    "login": "gaearon",
                    "email": "dan.abramov@gmail.com"
                },
                "openBugs": 2
            },
            {
                "u": {
                    "name": "juan",
                    "id": "MDQ6VXNlcjEyNzE1MDk=",
                    "type": "User",
                    "login": "jstejada",
                    "email": ""
                },
                "openBugs": 2
            },
            {
                "u": {
                    "name": "Luna Ruan",
                    "id": "MDQ6VXNlcjI3MzU1MTQ=",
                    "type": "User",
                    "login": "lunaruan",
                    "email": "lunaris.ruan@gmail.com"
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Matt Carroll",
                    "id": "MDQ6VXNlcjcxNTg4ODI=",
                    "type": "User",
                    "login": "mattcarrollcode",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Tianyu Yao",
                    "id": "MDQ6VXNlcjU4NjgzNTM=",
                    "type": "User",
                    "login": "tyao1",
                    "email": "yaotianyu0512@gmail.com"
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Mengdi Chen",
                    "id": "MDQ6VXNlcjEwMDE4OTA=",
                    "type": "User",
                    "login": "mondaychen",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "6h057",
                    "id": "MDQ6VXNlcjE1MDM0Njk1",
                    "type": "User",
                    "login": "omarsy",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "JannikGM",
                    "id": "MDQ6VXNlcjcyMTk0NDg4",
                    "type": "User",
                    "login": "JannikGM",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Guris",
                    "id": "MDQ6VXNlcjE3NzY5MTI=",
                    "type": "User",
                    "login": "Guris",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Steve Snow",
                    "id": "MDQ6VXNlcjM0NzYxODI4",
                    "type": "User",
                    "login": "steve-snow",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Stanislav Polesciuc",
                    "id": "MDQ6VXNlcjQ3NTMyNDI1",
                    "type": "User",
                    "login": "spolesciuc",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Ahmed Essam",
                    "id": "MDQ6VXNlcjM1NjQyOTQ3",
                    "type": "User",
                    "login": "Hanaffi",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "anvesh-vanam",
                    "id": "U_kgDOCEI4lw",
                    "type": "User",
                    "login": "anvesh-vanam",
                    "email": ""
                },
                "openBugs": 1
            }
        ]
    },
    {
        "question": "which developer has most number of bugs yet to be fixed?",
        "number": 8,
        "category": 2,
        "query": "MATCH (u:User)-[:assigned]->(i:Issue)\nWHERE i.state = \"open\"\nRETURN u, COUNT(i) AS openBugs\nORDER BY openBugs DESC",
        "result": [
            {
                "u": {
                    "name": "Brian Vaughn",
                    "id": "MDQ6VXNlcjI5NTk3",
                    "type": "User",
                    "login": "bvaughn",
                    "email": "brian.david.vaughn@gmail.com"
                },
                "openBugs": 19
            },
            {
                "u": {
                    "name": "Ruslan Lesiutin",
                    "id": "MDQ6VXNlcjI4OTAyNjY3",
                    "type": "User",
                    "login": "hoxyq",
                    "email": ""
                },
                "openBugs": 5
            },
            {
                "u": {
                    "name": "Josh Story",
                    "id": "MDQ6VXNlcjI3MTYzNjk=",
                    "type": "User",
                    "login": "gnoff",
                    "email": "jcs.gnoff@gmail.com"
                },
                "openBugs": 4
            },
            {
                "u": {
                    "name": "Sebastian Markb\u00e5ge",
                    "id": "MDQ6VXNlcjYzNjQ4",
                    "type": "User",
                    "login": "sebmarkbage",
                    "email": "sebastian@calyptus.eu"
                },
                "openBugs": 4
            },
            {
                "u": {
                    "name": "Sathya Gunasekaran",
                    "id": "MDQ6VXNlcjU2NTc2NQ==",
                    "type": "User",
                    "login": "gsathya",
                    "email": "gsathya.ceg@gmail.com"
                },
                "openBugs": 3
            },
            {
                "u": {
                    "name": "Andrew Clark",
                    "id": "MDQ6VXNlcjM2MjQwOTg=",
                    "type": "User",
                    "login": "acdlite",
                    "email": "hi@andrewclark.io"
                },
                "openBugs": 2
            },
            {
                "u": {
                    "name": "dan",
                    "id": "MDQ6VXNlcjgxMDQzOA==",
                    "type": "User",
                    "login": "gaearon",
                    "email": "dan.abramov@gmail.com"
                },
                "openBugs": 2
            },
            {
                "u": {
                    "name": "juan",
                    "id": "MDQ6VXNlcjEyNzE1MDk=",
                    "type": "User",
                    "login": "jstejada",
                    "email": ""
                },
                "openBugs": 2
            },
            {
                "u": {
                    "name": "Luna Ruan",
                    "id": "MDQ6VXNlcjI3MzU1MTQ=",
                    "type": "User",
                    "login": "lunaruan",
                    "email": "lunaris.ruan@gmail.com"
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Matt Carroll",
                    "id": "MDQ6VXNlcjcxNTg4ODI=",
                    "type": "User",
                    "login": "mattcarrollcode",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Tianyu Yao",
                    "id": "MDQ6VXNlcjU4NjgzNTM=",
                    "type": "User",
                    "login": "tyao1",
                    "email": "yaotianyu0512@gmail.com"
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Mengdi Chen",
                    "id": "MDQ6VXNlcjEwMDE4OTA=",
                    "type": "User",
                    "login": "mondaychen",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "6h057",
                    "id": "MDQ6VXNlcjE1MDM0Njk1",
                    "type": "User",
                    "login": "omarsy",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "JannikGM",
                    "id": "MDQ6VXNlcjcyMTk0NDg4",
                    "type": "User",
                    "login": "JannikGM",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Guris",
                    "id": "MDQ6VXNlcjE3NzY5MTI=",
                    "type": "User",
                    "login": "Guris",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Steve Snow",
                    "id": "MDQ6VXNlcjM0NzYxODI4",
                    "type": "User",
                    "login": "steve-snow",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Stanislav Polesciuc",
                    "id": "MDQ6VXNlcjQ3NTMyNDI1",
                    "type": "User",
                    "login": "spolesciuc",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "Ahmed Essam",
                    "id": "MDQ6VXNlcjM1NjQyOTQ3",
                    "type": "User",
                    "login": "Hanaffi",
                    "email": ""
                },
                "openBugs": 1
            },
            {
                "u": {
                    "name": "anvesh-vanam",
                    "id": "U_kgDOCEI4lw",
                    "type": "User",
                    "login": "anvesh-vanam",
                    "email": ""
                },
                "openBugs": 1
            }
        ]
    },
    {
        "question": "Determine the developers that fixed the most bugs in ReactDOMInput.js?",
        "number": 9,
        "category": 3,
        "query": "MATCH (u:User)-[:author]->(c:Commit)-[:fixed]->(i:Issue)-[:impacted]->(f:File {name: \"ReactDOMInput.js\"})\nRETURN u, COUNT(i) AS fixedBugs\nORDER BY fixedBugs DESC",
        "result": [
            {
                "u": {
                    "name": "Sophie Alpert",
                    "id": "MDQ6VXNlcjY4MjA=",
                    "type": "User",
                    "login": "sophiebits",
                    "email": "hi@sophiebits.com"
                },
                "fixedBugs": 1
            },
            {
                "u": {
                    "name": "Hemakshi Sachdev",
                    "id": "MDQ6VXNlcjIyMzczNDUy",
                    "type": "User",
                    "login": "hemakshis",
                    "email": "sachdev.hemakshi@gmail.com"
                },
                "fixedBugs": 1
            }
        ]
    },
    {
        "question": "who did most fixed bugs in TapEventPlugin.js?",
        "number": 10,
        "category": 3,
        "query": "MATCH (u:User)-[:author]->(c:Commit)-[:fixed]->(i:Issue)-[:impacted]->(f:File {name: \"TapEventPlugin.js\"})\nRETURN u, COUNT(i) AS fixedBugs\nORDER BY fixedBugs DESC",
        "result": [
            {
                "u": {
                    "name": "Sophie Alpert",
                    "id": "MDQ6VXNlcjY4MjA=",
                    "type": "User",
                    "login": "sophiebits",
                    "email": "hi@sophiebits.com"
                },
                "fixedBugs": 1
            }
        ]
    },
    {
        "question": "Determine the files that introduce the most bugs?",
        "number": 11,
        "category": 2,
        "query": "MATCH (i:Issue)-[:impacted]->(f:File)\nRETURN f.name, COUNT(i) AS bugCount\nORDER BY bugCount DESC",
        "result": [
            {
                "f.name": "ReactDOMInput-test.js",
                "bugCount": 3
            },
            {
                "f.name": "package.json",
                "bugCount": 2
            },
            {
                "f.name": "ReactDOMInput.js",
                "bugCount": 2
            },
            {
                "f.name": "ReactDOMComponent.js",
                "bugCount": 2
            },
            {
                "f.name": "ChangeEventPlugin.js",
                "bugCount": 2
            },
            {
                "f.name": "renderer.js",
                "bugCount": 2
            },
            {
                "f.name": "profilingCache-test.js.snap",
                "bugCount": 2
            },
            {
                "f.name": "ExhaustiveDeps.js",
                "bugCount": 2
            },
            {
                "f.name": "constants.js",
                "bugCount": 1
            },
            {
                "f.name": "EventPluginUtils.js",
                "bugCount": 1
            },
            {
                "f.name": "React.js",
                "bugCount": 1
            },
            {
                "f.name": "TapEventPlugin.js",
                "bugCount": 1
            },
            {
                "f.name": "03-interactivity-and-dynamic-uis.md",
                "bugCount": 1
            },
            {
                "f.name": "03-interactivity-and-dynamic-uis.zh-CN.md",
                "bugCount": 1
            },
            {
                "f.name": "ref-01-top-level-api.md",
                "bugCount": 1
            },
            {
                "f.name": "ref-05-events.zh-CN.md",
                "bugCount": 1
            },
            {
                "f.name": "ref-05-events.md",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMOption.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMSelect.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMTextarea.js",
                "bugCount": 1
            },
            {
                "f.name": "LinkedValueUtils.js",
                "bugCount": 1
            },
            {
                "f.name": "shouldUpdateReactComponent.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactChildReconciler.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactMarkupChecksum.js",
                "bugCount": 1
            },
            {
                "f.name": "DOMPropertyOperations-test.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDefaultPerf.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactCompositeComponent.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactReconciler.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactUpdates.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMComponent-test.js",
                "bugCount": 1
            },
            {
                "f.name": "ChangeEventPlugin-test.js",
                "bugCount": 1
            },
            {
                "f.name": "index.js",
                "bugCount": 1
            },
            {
                "f.name": "DOMPropertyOperations.js",
                "bugCount": 1
            },
            {
                "f.name": "DOMProperty.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMFiberInput.js",
                "bugCount": 1
            },
            {
                "f.name": "HTMLDOMPropertyConfig.js",
                "bugCount": 1
            },
            {
                "f.name": "BeforeInputEventPlugin.js",
                "bugCount": 1
            },
            {
                "f.name": "utils.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactFiberWorkLoop.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMFiberAsync-test.internal.js",
                "bugCount": 1
            },
            {
                "f.name": "profilingCommitTreeBuilder-test.js.snap",
                "bugCount": 1
            },
            {
                "f.name": "hooks.js",
                "bugCount": 1
            },
            {
                "f.name": "standalone.js",
                "bugCount": 1
            },
            {
                "f.name": "store.js",
                "bugCount": 1
            },
            {
                "f.name": "UnsupportedBridgeProtocolDialog.js",
                "bugCount": 1
            }
        ]
    },
    {
        "question": "What are the most buggy files?",
        "number": 12,
        "category": 2,
        "query": "MATCH (i:Issue)-[:impacted]->(f:File)\nRETURN f.name, COUNT(i) AS bugCount\nORDER BY bugCount DESC",
        "result": [
            {
                "f.name": "ReactDOMInput-test.js",
                "bugCount": 3
            },
            {
                "f.name": "package.json",
                "bugCount": 2
            },
            {
                "f.name": "ReactDOMInput.js",
                "bugCount": 2
            },
            {
                "f.name": "ReactDOMComponent.js",
                "bugCount": 2
            },
            {
                "f.name": "ChangeEventPlugin.js",
                "bugCount": 2
            },
            {
                "f.name": "renderer.js",
                "bugCount": 2
            },
            {
                "f.name": "profilingCache-test.js.snap",
                "bugCount": 2
            },
            {
                "f.name": "ExhaustiveDeps.js",
                "bugCount": 2
            },
            {
                "f.name": "constants.js",
                "bugCount": 1
            },
            {
                "f.name": "EventPluginUtils.js",
                "bugCount": 1
            },
            {
                "f.name": "React.js",
                "bugCount": 1
            },
            {
                "f.name": "TapEventPlugin.js",
                "bugCount": 1
            },
            {
                "f.name": "03-interactivity-and-dynamic-uis.md",
                "bugCount": 1
            },
            {
                "f.name": "03-interactivity-and-dynamic-uis.zh-CN.md",
                "bugCount": 1
            },
            {
                "f.name": "ref-01-top-level-api.md",
                "bugCount": 1
            },
            {
                "f.name": "ref-05-events.zh-CN.md",
                "bugCount": 1
            },
            {
                "f.name": "ref-05-events.md",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMOption.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMSelect.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMTextarea.js",
                "bugCount": 1
            },
            {
                "f.name": "LinkedValueUtils.js",
                "bugCount": 1
            },
            {
                "f.name": "shouldUpdateReactComponent.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactChildReconciler.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactMarkupChecksum.js",
                "bugCount": 1
            },
            {
                "f.name": "DOMPropertyOperations-test.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDefaultPerf.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactCompositeComponent.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactReconciler.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactUpdates.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMComponent-test.js",
                "bugCount": 1
            },
            {
                "f.name": "ChangeEventPlugin-test.js",
                "bugCount": 1
            },
            {
                "f.name": "index.js",
                "bugCount": 1
            },
            {
                "f.name": "DOMPropertyOperations.js",
                "bugCount": 1
            },
            {
                "f.name": "DOMProperty.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMFiberInput.js",
                "bugCount": 1
            },
            {
                "f.name": "HTMLDOMPropertyConfig.js",
                "bugCount": 1
            },
            {
                "f.name": "BeforeInputEventPlugin.js",
                "bugCount": 1
            },
            {
                "f.name": "utils.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactFiberWorkLoop.js",
                "bugCount": 1
            },
            {
                "f.name": "ReactDOMFiberAsync-test.internal.js",
                "bugCount": 1
            },
            {
                "f.name": "profilingCommitTreeBuilder-test.js.snap",
                "bugCount": 1
            },
            {
                "f.name": "hooks.js",
                "bugCount": 1
            },
            {
                "f.name": "standalone.js",
                "bugCount": 1
            },
            {
                "f.name": "store.js",
                "bugCount": 1
            },
            {
                "f.name": "UnsupportedBridgeProtocolDialog.js",
                "bugCount": 1
            }
        ]
    },
    {
        "question": "what are the buggy commits that happened on March 1, 2022?",
        "number": 13,
        "category": 2,
        "query": "MATCH (c:Commit)-[:introduced]->(i:Issue)\nWHERE c.committedDate =~ \"2022-03-01T.*\"\nRETURN c",
        "result": [
            {
                "c": {
                    "additions": 648,
                    "deletions": 356,
                    "committedDate": "2022-03-01T05:13:28Z",
                    "changedFiles": 72,
                    "commentsCount": 0,
                    "id": "17806594cc28284fe195f918e8d77de3516848ec",
                    "type": "Commit",
                    "message": "\"Move createRoot/hydrateRoot to react-dom/client (#23385)\n\n* Move createRoot/hydrateRoot to /client\r\n\r\nWe want these APIs ideally to be imported separately from things you\r\nmight use in arbitrary components (like flushSync). Those other methods\r\nare \"isomorphic\" to how the ReactDOM tree is rendered. Similar to hooks.\r\n\r\nE.g. importing flushSync into a component that only uses it on the client\r\nshould ideally not also pull in the entry client implementation on the\r\nserver.\r\n\r\nThis also creates a nicer parity with /server where the roots are in a\r\nseparate entry point.\r\n\r\nUnfortunately, I cant quite do this yet because we have some legacy APIs\r\nthat we plan on removing (like findDOMNode) and we also havent implemented\r\nflushSync using a flag like startTransition does yet.\r\n\r\nAnother problem is that we currently encourage these APIs to be aliased by\r\n/profiling (or unstable_testing). In the future you dont have to alias\r\nthem because you can just change your roots to just import those APIs and\r\ntheyll still work with the isomorphic forms. Although we might also just\r\nuse export conditions for them.\r\n\r\nFor that all to work, I went with a different strategy for now where the\r\nreal API is in / but it comes with a warning if you use it. If you instead\r\nimport /client it disables the warning in a wrapper. That means that if you\r\nalias / then import /client that will inturn import the alias and itll\r\njust work.\r\n\r\nIn a future breaking changes (likely when we switch to ESM) we can just\r\nremove createRoot/hydrateRoot from / and move away from the aliasing\r\nstrategy.\r\n\r\n* Update tests to import from react-dom/client\r\n\r\n* Fix fixtures\r\n\r\n* Update warnings\r\n\r\n* Add test for the warning\r\n\r\n* Update devtools\r\n\r\n* Change order of react-dom, react-dom/client alias\r\n\r\nI think the order matters here. The first one takes precedence.\r\n\r\n* Require react-dom through client so it can be aliased\r\n\r\nCo-authored-by: Andrew Clark <git@andrewclark.io>\""
                }
            }
        ]
    },
    {
        "question": "what commits were buggy on April 9, 2021?",
        "number": 14,
        "category": 2,
        "query": "MATCH (c:Commit)-[:introduced]->(i:Issue)\nWHERE c.committedDate =~ \"2021-04-09T.*\"\nRETURN c",
        "result": [
            {
                "c": {
                    "additions": 639,
                    "deletions": 56,
                    "committedDate": "2021-04-09T14:35:06Z",
                    "changedFiles": 17,
                    "commentsCount": 0,
                    "id": "bdc23c3dba86eaa03c7accecc16e8fd997e9185e",
                    "type": "Commit",
                    "message": "\"DevTools shows which fibers scheduled the current update (#21171)\""
                }
            }
        ]
    },
    {
        "question": "commit(s) that fixed the bug ticket 10217?",
        "number": 15,
        "category": 2,
        "query": "MATCH (c:Commit)-[:fixed]->(i:Issue {number: 10217})\nRETURN c",
        "result": [
            {
                "c": {
                    "additions": 18,
                    "deletions": 2,
                    "committedDate": "2018-06-14T15:35:05Z",
                    "changedFiles": 1,
                    "commentsCount": 0,
                    "id": "2e757790751ab8d165fc4df37e90a59d914c4527",
                    "type": "Commit",
                    "message": "\"Fix incorrect data in compositionend event with Korean IME on IE11 (#10217) (#12563)\n\n* Add isUsingKoreanIME function to check if a composition event was triggered by Korean IME\r\n\r\n* Add Korean IME check alongside useFallbackCompositionData and disable fallback mode with Korean IME\""
                }
            }
        ]
    },
    {
        "question": "which commit fixed the bug ticket 21442?",
        "number": 16,
        "category": 2,
        "query": "MATCH (c:Commit)-[:fixed]->(i:Issue {number: 21442})\nRETURN c",
        "result": [
            {
                "c": {
                    "additions": 692,
                    "deletions": 345,
                    "committedDate": "2021-05-18T15:42:08Z",
                    "changedFiles": 4,
                    "commentsCount": 0,
                    "id": "1e3383a41154cb32d8d6b78b2451ee4dabfcb973",
                    "type": "Commit",
                    "message": "\"DevTools: Reload all roots after Fast Refresh force remount (#21516)\n\nWorks around the corrupted Store state by detecting a broken Fast Refresh remount and forcefully dropping the root and re-mounting the entire tree. This prevents Fibers from getting duplicated in the Store (and in the Components tree). The benefit of this approach is that it doesnt rely on an update or change in behavior to Fast Refresh. (This workaround is pretty dirty, but since its a DEV-only code path, its probably okay.)\r\n\r\nNote that this change doesnt fix all of the reported issues (see #21442 (comment)) but it does fix some of them.\r\n\r\nThis commit also slightly refactors the way DevTools assigns and manages unique IDs for Fibers in the backend by removing the indirection of a \"primary Fiber\" and instead mapping both the primary and alternate.\r\n\r\nIt also removes the previous cache-on-read behavior of getFiberID and splits the method into three separate functions for different use cases:\r\n* getOrGenerateFiberID \u2013 Like the previous function, this method returns an ID or generates and caches a new one if the Fiber hasnt been seen before.\r\n* getFiberIDUnsafe \u2013 This function returns an ID if one has already been generated or null if not. (It can be used to e.g. log a message about a Fiber without potentially causing it to leak.)\r\n* getFiberIDThrows \u2013 This function returns an ID if one has already been generated or it throws. (It can be used to guarantee expected behavior rather than to silently cause a leak.)\""
                }
            }
        ]
    },
    {
        "question": "Determine the bug(s) that were introduced because of commit hash f912186012f17858b9d25466c658a46e25093941?",
        "number": 17,
        "category": 2,
        "query": "MATCH (c:Commit {id: \"f912186012f17858b9d25466c658a46e25093941\"})-[:introduced]->(i:Issue)\nRETURN i",
        "result": []
    },
    {
        "question": "what are the bugs caused by commit 2e757790751ab8d165fc4df37e90a59d914c4527?",
        "number": 18,
        "category": 2,
        "query": "MATCH (c:Commit {id: \"2e757790751ab8d165fc4df37e90a59d914c4527\"})-[:introduced]->(i:Issue)\nRETURN i",
        "result": []
    },
    {
        "question": "Determine the percentage of the fixing commits that introduced bugs on Nov. 2013?",
        "number": 19,
        "category": 3,
        "query": "MATCH (c:Commit)-[:fixed]->(i:Issue)\nWHERE c.committedDate =~ \"2013-11.*\"\nWITH COUNT(c) AS totalFixingCommits\nMATCH (i2:Issue)<-[:introduced]-(c:Commit)-[:fixed]->(i:Issue)\nWHERE c.committedDate =~ \"2013-11.*\"\nWITH totalFixingCommits, COUNT(c) AS fixingAndIntroducingBugs\nRETURN (toFloat(fixingAndIntroducingBugs) / totalFixingCommits) * 100 AS percentage",
        "result": [
            {
                "percentage": 20.0
            }
        ]
    },
    {
        "question": "How many fixing commits caused bugs on Nov. 2013?",
        "number": 20,
        "category": 3,
        "query": "MATCH (i2:Issue)<-[:introduced]-(c:Commit)-[:fixed]->(i:Issue)\nWHERE c.committedDate =~ \"2013-11.*\"\nRETURN COUNT(c) AS fixingAndIntroducingBugs",
        "result": [
            {
                "fixingAndIntroducingBugs": 2
            }
        ]
    }
]